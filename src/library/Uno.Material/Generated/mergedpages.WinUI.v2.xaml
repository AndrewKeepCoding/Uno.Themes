<ResourceDictionary xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d not_win android ios xamarin mobile wasm todo macos lottie_not_win" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:um="using:Uno.Material" xmlns:toolkit="using:Uno.UI.Toolkit" xmlns:not_win="http://uno.ui/not_win" xmlns:uno="using:Uno.UI.Xaml.Controls" xmlns:android="http://uno.ui/android" xmlns:ios="http://uno.ui/ios" xmlns:not_ios="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:xamarin="http://uno.ui/xamarin" xmlns:mobile="http://uno.ui/mobile" xmlns:uuc="using:Uno.UI.Controls" xmlns:wasm="http://uno.ui/wasm" xmlns:todo="what should be done" xmlns:contract7Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,7)" xmlns:contract7NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,7)" xmlns:contract8Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,8)" xmlns:controls="using:Microsoft.UI.Xaml.Controls" xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals" xmlns:media="using:Microsoft.UI.Xaml.Media" xmlns:primitives="using:Microsoft.UI.Xaml.Controls.Primitives" xmlns:contract4Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,4)" xmlns:contract4NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,4)" xmlns:primitiveContract7Present="using:Microsoft.UI.Xaml.Controls.Primitives?IsApiContractPresent(Windows.Foundation.UniversalApiContract,7)" xmlns:macos="http://uno.ui/macos" xmlns:not_macos="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:lottie_win="using:Microsoft.Toolkit.Uwp.UI.Lottie" xmlns:lottie_not_win="#using:Microsoft.Toolkit.Uwp.UI.Lottie;CommunityToolkit.WinUI.Lottie" xmlns:not_android="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <ResourceDictionary.MergedDictionaries>
    <not_win:ResourceDictionary>
      <lottie_not_win:LottieVisualSource x:Key="MaterialDeterminateAnimation_Uno" UriSource="embedded://Uno.Material/Uno.Material.Assets.MaterialDeterminate.json" />
      <lottie_not_win:LottieVisualSource x:Key="MaterialIndeterminateAnimation_Uno" UriSource="embedded://Uno.Material/Uno.Material.Assets.MaterialIndeterminate.json" />
    </not_win:ResourceDictionary>
  </ResourceDictionary.MergedDictionaries>
  <ResourceDictionary.ThemeDictionaries>
    <ResourceDictionary x:Key="Default">
      <StaticResource x:Key="ElevatedButtonForeground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ElevatedButtonForegroundPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ElevatedButtonForegroundPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ElevatedButtonForegroundFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ElevatedButtonForegroundPointerFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ElevatedButtonForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="ElevatedButtonIconForeground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ElevatedButtonIconForegroundPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ElevatedButtonIconForegroundPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ElevatedButtonIconForegroundFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ElevatedButtonIconForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="ElevatedButtonIconForegroundPointerFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ElevatedButtonBackground" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="ElevatedButtonBackgroundDisabled" ResourceKey="OnSurfaceDisabledLowBrush" />
      <StaticResource x:Key="ElevatedButtonBackgroundPointerOver" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="ElevatedButtonBackgroundPressed" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="ElevatedButtonBackgroundFocused" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="ElevatedButtonBackgroundPointerFocused" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="ElevatedButtonBorderBrush" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ElevatedButtonBorderBrushPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ElevatedButtonBorderBrushPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ElevatedButtonBorderBrushFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ElevatedButtonBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ElevatedButtonBorderBrushPointerFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ElevatedButtonStateLayerBackgroundPointerOver" ResourceKey="PrimaryHoverBrush" />
      <StaticResource x:Key="ElevatedButtonStateLayerBackgroundPressed" ResourceKey="PrimaryPressedBrush" />
      <StaticResource x:Key="ElevatedButtonStateLayerBackgroundFocused" ResourceKey="PrimaryFocusedBrush" />
      <StaticResource x:Key="ElevatedButtonStateLayerBackgroundPointerFocused" ResourceKey="PrimaryFocusedBrush" />
      <StaticResource x:Key="FilledButtonForeground" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="FilledButtonForegroundPointerOver" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="FilledButtonForegroundPressed" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="FilledButtonForegroundPointerFocused" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="FilledButtonForegroundFocused" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="FilledButtonForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="FilledButtonIconForeground" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="FilledButtonIconForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="FilledButtonIconForegroundPointerOver" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="FilledButtonIconForegroundPressed" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="FilledButtonIconForegroundFocused" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="FilledButtonIconForegroundPointerFocused" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="FilledButtonBackground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="FilledButtonBackgroundPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="FilledButtonBackgroundPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="FilledButtonBackgroundDisabled" ResourceKey="OnSurfaceDisabledLowBrush" />
      <StaticResource x:Key="FilledButtonBackgroundFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="FilledButtonBackgroundPointerFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="FilledButtonBorderBrush" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FilledButtonBorderBrushPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FilledButtonBorderBrushPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FilledButtonBorderBrushFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FilledButtonBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FilledButtonBorderBrushPointerFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FilledButtonStateLayerBackgroundPointerOver" ResourceKey="OnPrimaryHoverBrush" />
      <StaticResource x:Key="FilledButtonStateLayerBackgroundPressed" ResourceKey="OnPrimaryPressedBrush" />
      <StaticResource x:Key="FilledButtonStateLayerBackgroundFocused" ResourceKey="OnPrimaryFocusedBrush" />
      <StaticResource x:Key="FilledButtonStateLayerBackgroundPointerFocused" ResourceKey="OnPrimaryFocusedBrush" />
      <StaticResource x:Key="FilledTonalButtonForeground" ResourceKey="OnSecondaryContainerBrush" />
      <StaticResource x:Key="FilledTonalButtonForegroundPointerOver" ResourceKey="OnSecondaryContainerBrush" />
      <StaticResource x:Key="FilledTonalButtonForegroundPressed" ResourceKey="OnSecondaryContainerBrush" />
      <StaticResource x:Key="FilledTonalButtonForegroundFocused" ResourceKey="OnSecondaryContainerBrush" />
      <StaticResource x:Key="FilledTonalButtonForegroundPointerFocused" ResourceKey="OnSecondaryContainerBrush" />
      <StaticResource x:Key="FilledTonalButtonForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="FilledTonalButtonIconForeground" ResourceKey="OnSecondaryContainerBrush" />
      <StaticResource x:Key="FilledTonalButtonIconForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="FilledTonalButtonIconForegroundPointerOver" ResourceKey="OnSecondaryContainerBrush" />
      <StaticResource x:Key="FilledTonalButtonIconForegroundPressed" ResourceKey="OnSecondaryContainerBrush" />
      <StaticResource x:Key="FilledTonalButtonIconForegroundFocused" ResourceKey="OnSecondaryContainerBrush" />
      <StaticResource x:Key="FilledTonalButtonIconForegroundPointerFocused" ResourceKey="OnSecondaryContainerBrush" />
      <StaticResource x:Key="FilledTonalButtonBackground" ResourceKey="SecondaryContainerBrush" />
      <StaticResource x:Key="FilledTonalButtonBackgroundPointerOver" ResourceKey="SecondaryContainerBrush" />
      <StaticResource x:Key="FilledTonalButtonBackgroundPressed" ResourceKey="SecondaryContainerBrush" />
      <StaticResource x:Key="FilledTonalButtonBackgroundDisabled" ResourceKey="OnSurfaceDisabledLowBrush" />
      <StaticResource x:Key="FilledTonalButtonBackgroundFocused" ResourceKey="SecondaryContainerBrush" />
      <StaticResource x:Key="FilledTonalButtonBackgroundPointerFocused" ResourceKey="SecondaryContainerBrush" />
      <StaticResource x:Key="FilledTonalButtonBorderBrush" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FilledTonalButtonBorderBrushPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FilledTonalButtonBorderBrushPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FilledTonalButtonBorderBrushFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FilledTonalButtonBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FilledTonalButtonBorderBrushPointerFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FilledTonalButtonStateLayerBackgroundPointerOver" ResourceKey="OnSecondaryContainerHoverBrush" />
      <StaticResource x:Key="FilledTonalButtonStateLayerBackgroundPressed" ResourceKey="OnSecondaryContainerPressedBrush" />
      <StaticResource x:Key="FilledTonalButtonStateLayerBackgroundFocused" ResourceKey="OnSecondaryContainerFocusedBrush" />
      <StaticResource x:Key="FilledTonalButtonStateLayerBackgroundPointerFocused" ResourceKey="OnSecondaryContainerFocusedBrush" />
      <StaticResource x:Key="OutlinedButtonForeground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="OutlinedButtonForegroundPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="OutlinedButtonForegroundPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="OutlinedButtonForegroundFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="OutlinedButtonForegroundPointerFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="OutlinedButtonForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="OutlinedButtonIconForeground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="OutlinedButtonIconForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="OutlinedButtonIconForegroundPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="OutlinedButtonIconForegroundPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="OutlinedButtonIconForegroundFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="OutlinedButtonIconForegroundPointerFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="OutlinedButtonBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="OutlinedButtonBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="OutlinedButtonBackgroundPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="OutlinedButtonBackgroundDisabled" ResourceKey="OnSurfaceDisabledLowBrush" />
      <StaticResource x:Key="OutlinedButtonBackgroundFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="OutlinedButtonBackgroundPointerFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="OutlinedButtonBorderBrush" ResourceKey="OutlineBrush" />
      <StaticResource x:Key="OutlinedButtonBorderBrushPointerOver" ResourceKey="OutlineBrush" />
      <StaticResource x:Key="OutlinedButtonBorderBrushPressed" ResourceKey="OutlineBrush" />
      <StaticResource x:Key="OutlinedButtonBorderBrushFocused" ResourceKey="OutlineBrush" />
      <StaticResource x:Key="OutlinedButtonBorderBrushDisabled" ResourceKey="OutlineDisabledBrush" />
      <StaticResource x:Key="OutlinedButtonBorderBrushPointerFocused" ResourceKey="OutlineBrush" />
      <StaticResource x:Key="OutlinedButtonStateLayerBackgroundPointerOver" ResourceKey="PrimaryHoverBrush" />
      <StaticResource x:Key="OutlinedButtonStateLayerBackgroundPressed" ResourceKey="PrimaryPressedBrush" />
      <StaticResource x:Key="OutlinedButtonStateLayerBackgroundFocused" ResourceKey="PrimaryFocusedBrush" />
      <StaticResource x:Key="OutlinedButtonStateLayerBackgroundPointerFocused" ResourceKey="PrimaryFocusedBrush" />
      <StaticResource x:Key="TextButtonForeground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextButtonForegroundPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextButtonForegroundPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextButtonForegroundFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextButtonForegroundPointerFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextButtonForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="TextButtonIconForeground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextButtonIconForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="TextButtonIconForegroundPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextButtonIconForegroundPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextButtonIconForegroundFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextButtonIconForegroundPointerFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextButtonBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextButtonBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextButtonBackgroundPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextButtonBackgroundFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextButtonBackgroundPointerFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextButtonBorderBrush" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextButtonBorderBrushPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextButtonBorderBrushPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextButtonBorderBrushFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextButtonBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextButtonBorderBrushPointerFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextButtonStateLayerBackgroundPointerOver" ResourceKey="PrimaryHoverBrush" />
      <StaticResource x:Key="TextButtonStateLayerBackgroundPressed" ResourceKey="PrimaryPressedBrush" />
      <StaticResource x:Key="TextButtonStateLayerBackgroundFocused" ResourceKey="PrimaryFocusedBrush" />
      <StaticResource x:Key="TextButtonStateLayerBackgroundPointerFocused" ResourceKey="PrimaryFocusedBrush" />
      <StaticResource x:Key="IconButtonForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="IconButtonForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="IconButtonEllipseFillPointerOver" ResourceKey="PrimaryHoverBrush" />
      <StaticResource x:Key="IconButtonEllipseFillPressed" ResourceKey="PrimaryPressedBrush" />
      <StaticResource x:Key="IconButtonEllipseFillFocused" ResourceKey="PrimaryFocusedBrush" />
      <x:Double x:Key="ButtonMinHeight">40</x:Double>
      <x:Double x:Key="ButtonMinWidth">40</x:Double>
      <x:Double x:Key="ButtonIconMinWidth">18</x:Double>
      <x:Double x:Key="ElevatedButtonElevation">1</x:Double>
      <x:Double x:Key="ElevatedButtonElevationDisabled">0</x:Double>
      <x:Double x:Key="ButtonElevation">0</x:Double>
      <x:Double x:Key="IconButtonOpacityVisibleState">1</x:Double>
      <x:Double x:Key="IconButtonOpacityHiddenState">0</x:Double>
      <Thickness x:Key="ButtonPadding">16,0</Thickness>
      <Thickness x:Key="TextButtonPadding">12,0</Thickness>
      <Thickness x:Key="TextButtonIconMargin">0,0,8,0</Thickness>
      <Thickness x:Key="ButtonBorderThickness">0</Thickness>
      <Thickness x:Key="OutlinedButtonBorderThickness">1</Thickness>
      <Thickness x:Key="ElevatedButtonMargin">0,0,0,1</Thickness>
      <Thickness x:Key="ElevatedButtonDisabledMargin">0</Thickness>
      <Thickness x:Key="ButtonContentMargin">8,0</Thickness>
      <Thickness x:Key="ButtonMargin">0</Thickness>
      <CornerRadius x:Key="ButtonCornerRadius">20</CornerRadius>
      <CornerRadius x:Key="CalendarDatePickerBackgroundCornerRadius">4,4,0,0</CornerRadius>
      <Thickness x:Key="CalendarDatePickerBorderThemeThickness">1</Thickness>
      <Thickness x:Key="CalendarDatePickerFlyoutPresenterPadding">0</Thickness>
      <Thickness x:Key="CalendarDatePickerFlyoutPresenterMargin">0</Thickness>
      <Thickness x:Key="CalendarDatePickerContentMargin">10,0,10,0</Thickness>
      <x:Double x:Key="CalendarDatePickerHeight">53</x:Double>
      <x:Double x:Key="CalendarDatePickerBackgroundMinHeight">53</x:Double>
      <StaticResource x:Key="CalendarDatePickerCornerRadius" ResourceKey="ControlCornerRadius" />
      <StaticResource x:Key="CalendarDatePickerFlyoutPresenterCornerRadius" ResourceKey="OverlayCornerRadius" />
      <StaticResource x:Key="CalendarDatePickerCalendarViewCornerRadius" ResourceKey="OverlayCornerRadius" />
      <StaticResource x:Key="CalendarDatePickerForeground" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="CalendarDatePickerForegroundDisabled" ResourceKey="OnSurfaceMediumBrush" />
      <StaticResource x:Key="CalendarDatePickerCalendarGlyphForeground" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="CalendarDatePickerCalendarGlyphForegroundDisabled" ResourceKey="OnSurfaceMediumBrush" />
      <StaticResource x:Key="CalendarDatePickerTextForeground" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="CalendarDatePickerTextForegroundDisabled" ResourceKey="OnSurfaceMediumBrush" />
      <StaticResource x:Key="CalendarDatePickerTextForegroundSelected" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="CalendarDatePickerHeaderForeground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="CalendarDatePickerHeaderForegroundDisabled" ResourceKey="OnSurfaceMediumBrush" />
      <StaticResource x:Key="CalendarDatePickerBackground" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="CalendarDatePickerBackgroundPointerOver" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="CalendarDatePickerBackgroundPressed" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="CalendarDatePickerBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CalendarDatePickerBackgroundFocused" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="CalendarDatePickerBorderBrush" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="CalendarDatePickerBorderBrushPointerOver" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="CalendarDatePickerBorderBrushPressed" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="CalendarDatePickerBorderBrushDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="CalendarDatePickerBottomBorderBrush" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="CalendarDatePickerHeaderStyle" ResourceKey="MaterialBodySmall" />
      <StaticResource x:Key="CalendarDatePickerTextStyle" ResourceKey="MaterialBodyMedium" />
      <StaticResource x:Key="CheckBoxBackgroundUnchecked" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBackgroundUncheckedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBackgroundUncheckedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBackgroundUncheckedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBackgroundChecked" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBackgroundCheckedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBackgroundCheckedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBackgroundCheckedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBackgroundIndeterminate" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBackgroundIndeterminatePointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBackgroundIndeterminatePressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBackgroundIndeterminateDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxForegroundUnchecked" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="CheckBoxForegroundUncheckedPointerOver" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="CheckBoxForegroundUncheckedPressed" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="CheckBoxForegroundUncheckedDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="CheckBoxForegroundChecked" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="CheckBoxForegroundCheckedPointerOver" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="CheckBoxForegroundCheckedPressed" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="CheckBoxForegroundCheckedDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="CheckBoxForegroundIndeterminate" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="CheckBoxForegroundIndeterminatePointerOver" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="CheckBoxForegroundIndeterminatePressed" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="CheckBoxForegroundIndeterminateDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="CheckBoxBorderBrushUnchecked" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBorderBrushUncheckedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBorderBrushUncheckedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBorderBrushUncheckedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBorderBrushChecked" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBorderBrushCheckedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBorderBrushCheckedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBorderBrushCheckedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBorderBrushIndeterminate" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBorderBrushIndeterminatePointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBorderBrushIndeterminatePressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBorderBrushIndeterminateDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundStroke" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundStrokeUnchecked" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundStrokeUncheckedPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundStrokeUncheckedPressed" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundStrokeUncheckedDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundStrokeChecked" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundStrokeCheckedPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundStrokeCheckedPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundStrokeCheckedDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundStrokeIndeterminate" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundStrokeIndeterminatePointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundStrokeIndeterminatePressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundStrokeIndeterminateDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundFill" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundFillUnchecked" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundFillUncheckedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundFillUncheckedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundFillUncheckedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundFillChecked" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundFillCheckedPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundFillCheckedPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundFillCheckedDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundFillIndeterminate" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundFillIndeterminatePointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundFillIndeterminatePressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundFillIndeterminateDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="CheckBoxFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <StaticResource x:Key="CheckBoxFontWeight" ResourceKey="BodySmallFontWeight" />
      <StaticResource x:Key="CheckBoxFontSize" ResourceKey="BodySmallFontSize" />
      <StaticResource x:Key="CheckBoxCharacterSpacing" ResourceKey="BodySmallCharacterSpacing" />
      <StaticResource x:Key="CheckBoxGlyphForeground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxGlyphForegroundUnchecked" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxGlyphForegroundUncheckedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxGlyphForegroundUncheckedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxGlyphForegroundUncheckedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxGlyphForegroundChecked" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="CheckBoxGlyphForegroundCheckedPointerOver" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="CheckBoxGlyphForegroundCheckedPressed" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="CheckBoxGlyphForegroundCheckedDisabled" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="CheckBoxGlyphForegroundIndeterminate" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="CheckBoxGlyphForegroundIndeterminatePointerOver" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="CheckBoxGlyphForegroundIndeterminatePressed" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="CheckBoxGlyphForegroundIndeterminateDisabled" ResourceKey="OnPrimaryBrush" />
      <x:String x:Key="CheckBoxHyphenGlyphPathData">M0,0L32,0 32,5.3 0,5.3z</x:String>
      <x:String x:Key="CheckBoxCheckGlyphPathData">M28.718018,0L32,3.2819897 10.666016,24.616999 0,13.951997 3.2810059,10.670007 10.666016,18.055033z</x:String>
      <StaticResource x:Key="CheckBoxStateCircleFillUnchecked" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="CheckBoxStateCircleFillChecked" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="CheckBoxStateCircleOpacityPointerOver" ResourceKey="HoverOpacity" />
      <StaticResource x:Key="CheckBoxStateCircleOpacityPressed" ResourceKey="PressedOpacity" />
      <StaticResource x:Key="CheckBoxStateCircleOpacityFocused" ResourceKey="FocusedOpacity" />
      <x:Double x:Key="CheckBoxFocusAreaSize">40</x:Double>
      <x:Double x:Key="CheckBoxCheckAreaSize">18</x:Double>
      <GridLength x:Key="CheckBoxCheckAreaLength">40</GridLength>
      <CornerRadius x:Key="CheckBoxCheckAreaCornerRadius">2</CornerRadius>
      <Thickness x:Key="CheckBoxCheckAreaBorderThickness">2</Thickness>
      <Thickness x:Key="CheckBoxCheckAreaPadding">8,0,0,0</Thickness>
      <StaticResource x:Key="ComboBoxItemForeground" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxItemForegroundPressed" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxItemForegroundPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxItemForegroundDisabled" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxItemForegroundSelected" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxItemForegroundSelectedUnfocused" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxItemForegroundSelectedPressed" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxItemForegroundSelectedPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxItemForegroundSelectedDisabled" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxItemBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxItemBackgroundPressed" ResourceKey="OnSurfaceVariantHoverBrush" />
      <StaticResource x:Key="ComboBoxItemBackgroundPointerOver" ResourceKey="OnSurfaceVariantHoverBrush" />
      <StaticResource x:Key="ComboBoxItemBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxItemBackgroundSelected" ResourceKey="PrimarySelectedBrush" />
      <StaticResource x:Key="ComboBoxItemBackgroundSelectedUnfocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxItemBackgroundSelectedPressed" ResourceKey="PrimarySelectedBrush" />
      <StaticResource x:Key="ComboBoxItemBackgroundSelectedPointerOver" ResourceKey="PrimarySelectedBrush" />
      <StaticResource x:Key="ComboBoxItemBackgroundSelectedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxItemBorderBrush" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxItemBorderBrushPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxItemBorderBrushPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxItemBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxItemBorderBrushSelected" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxItemBorderBrushSelectedUnfocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxItemBorderBrushSelectedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxItemBorderBrushSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxItemBorderBrushSelectedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxBorderBrush" ResourceKey="OutlineBrush" />
      <StaticResource x:Key="ComboBoxBorderBrushPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxBorderBrushPressed" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxBorderBrushDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="ComboBoxBorderBrushOpened" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ComboBoxDropDownGlyphForeground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxDropDownGlyphForegroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxDropDownGlyphForegroundFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxDropDownGlyphForegroundFocusedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxDropDownForeground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxDropDownBorderBrush" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxDropDownBackground" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="ComboBoxDropDownBackgroundPointerOver" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="ComboBoxDropDownBackgroundPointerPressed" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="ComboBoxDropDownBackgroundPressed" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="ComboBoxDropDownBackgroundFocused" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="ComboBoxDropDownBackgroundFocusedPressed" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="ComboBoxEditableDropDownGlyphForeground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxItemPillFillBrush" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxBackgroundPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxBackgroundUnfocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxBackgroundFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxBackgroundFocusedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxForeground" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxForegroundPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxForegroundPressed" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="ComboBoxForegroundFocused" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxForegroundFocusedPressed" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxPlaceHolderForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="ComboBoxPlaceHolderForegroundPointerOver" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="ComboBoxPlaceHolderForegroundPressed" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="ComboBoxPlaceHolderForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="ComboBoxPlaceHolderForegroundFocused" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="ComboBoxPlaceHolderForegroundFocusedPressed" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="ComboBoxLeadingIconForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="ComboBoxLeadingIconForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="ComboBoxArrowForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="ComboBoxArrowForegroundOpened" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="ComboBoxUpperPlaceHolderForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="ComboBoxUpperPlaceHolderForegroundPointerOver" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="ComboBoxUpperPlaceHolderForegroundPressed" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="ComboBoxUpperPlaceHolderForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="ComboBoxUpperPlaceHolderForegroundFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ComboBoxUpperPlaceHolderForegroundFocusedPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ComboBoxUpperPlaceHolderForegroundOpened" ResourceKey="PrimaryBrush" />
      <CornerRadius x:Key="ComboBoxCornerRadius">4</CornerRadius>
      <x:Double x:Key="ComboBoxHeight">50</x:Double>
      <x:Double x:Key="ComboBoxMinHeight">56</x:Double>
      <x:Double x:Key="ComboBoxLeadingIconWidth">20</x:Double>
      <x:Double x:Key="ComboBoxDownGlyphWidth">10</x:Double>
      <x:Double x:Key="ComboBoxUpGlyphWidth">10</x:Double>
      <x:Double x:Key="ComboBoxDownGlyphHeight">5</x:Double>
      <x:Double x:Key="ComboBoxUpGlyphHeight">5</x:Double>
      <Thickness x:Key="ComboBoxDownGlyphMargin">7,0</Thickness>
      <Thickness x:Key="ComboBoxUpGlyphMargin">7,0</Thickness>
      <Thickness x:Key="ComboBoxLeadingIconMargin">2,0,18,0</Thickness>
      <Thickness x:Key="ComboBoxBorderThickness">1</Thickness>
      <Thickness x:Key="ComboBoxOpenedBorderThickness">2</Thickness>
      <Thickness x:Key="ComboBoxPadding">16,0</Thickness>
      <StaticResource x:Key="DatePickerFlyoutButtonBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="DatePickerFlyoutPresenterBackground" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="DatePickerFlyoutPresenterBorderBrush" ResourceKey="OnSurfaceFocusedBrush" />
      <StaticResource x:Key="DatePickerFlyoutPresenterSpacerFill" ResourceKey="OnSurfaceFocusedBrush" />
      <StaticResource x:Key="DatePickerFlyoutPresenterHighlightFill" ResourceKey="PrimarySelectedBrush" />
      <StaticResource x:Key="DatePickerFlyoutPresenterCornerRadius" ResourceKey="OverlayCornerRadius" />
      <StaticResource x:Key="DatePickerButtonBackground" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="DatePickerButtonBackgroundPointerOver" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="DatePickerButtonBackgroundPressed" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="DatePickerButtonBackgroundDisabled" ResourceKey="PrimaryFocusedBrush" />
      <StaticResource x:Key="DatePickerButtonForeground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="DatePickerButtonForegroundPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="DatePickerButtonForegroundPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="DatePickerButtonForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="DatePickerPlaceholderTextForeground" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="DatePickerButtonDateTextForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="DatePickerButtonDateTextForegroundPointerOver" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="DatePickerButtonDateTextForegroundPressed" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="DatePickerButtonDateTextForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="DatePickerButtonBorderBrush" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="DatePickerButtonBorderBrushPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="DatePickerButtonBorderBrushPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="DatePickerButtonBorderBrushDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="DatePickerFlyoutPresenterFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <StaticResource x:Key="DatePickerFlyoutPresenterFontSize" ResourceKey="ControlContentThemeFontSize" />
      <x:Double x:Key="DatePickerFlyoutBorderThickness">1</x:Double>
      <x:Double x:Key="DatePickerSpacerThemeWidth">1</x:Double>
      <x:Double x:Key="DatePickerHeight">53</x:Double>
      <x:Double x:Key="DatePickerFlyoutElevation">8</x:Double>
      <x:Double x:Key="DatePickerFlyoutButtonOpacityPressed">0.65</x:Double>
      <x:Double x:Key="DatePickerFlyoutButtonOpacityDisabled">0.65</x:Double>
      <x:Double x:Key="DatePickerFlyoutPresenterWidth">296</x:Double>
      <x:Double x:Key="DatePickerFlyoutPresenterMinWidth">296</x:Double>
      <x:Double x:Key="DatePickerFlyoutPresenterMaxHeight">398</x:Double>
      <x:Double x:Key="DatePickerFlyoutPresenterAcceptDismissHostGridHeight">41</x:Double>
      <x:Double x:Key="DatePickerFlyoutPresenterHighlightHeight">40</x:Double>
      <x:Double x:Key="DatePickerButtonBottomBorderHeight">2</x:Double>
      <x:Double x:Key="DatePickerButtonContentHeight">24</x:Double>
      <Thickness x:Key="DatePickerButtonHeaderMargin">10,8,10,0</Thickness>
      <Thickness x:Key="DatePickerButtonPlaceholderMargin">4,0,0,0</Thickness>
      <Thickness x:Key="DatePickerButtonContentMargin">6,24,10,0</Thickness>
      <Thickness x:Key="DatePickerHostPadding">24,24,8,8</Thickness>
      <Thickness x:Key="DatePickerFlyoutButtonPadding">0</Thickness>
      <CornerRadius x:Key="DatePickerCornerRadius">4,4,0,0</CornerRadius>
      <StaticResource x:Key="FabForeground" ResourceKey="OnPrimaryContainerBrush" />
      <StaticResource x:Key="FabForegroundPressed" ResourceKey="OnPrimaryContainerBrush" />
      <StaticResource x:Key="FabForegroundPointerOver" ResourceKey="OnPrimaryContainerBrush" />
      <StaticResource x:Key="FabForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="FabBackground" ResourceKey="PrimaryContainerBrush" />
      <StaticResource x:Key="FabBackgroundPressed" ResourceKey="PrimaryContainerBrush" />
      <StaticResource x:Key="FabBackgroundPointerOver" ResourceKey="PrimaryContainerBrush" />
      <StaticResource x:Key="FabBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FabStateOverlayBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FabStateOverlayBackgroundPointerOver" ResourceKey="OnPrimaryContainerHoverBrush" />
      <StaticResource x:Key="FabStateOverlayBackgroundFocused" ResourceKey="OnPrimaryContainerFocusedBrush" />
      <StaticResource x:Key="FabStateOverlayBackgroundPressed" ResourceKey="OnPrimaryContainerPressedBrush" />
      <StaticResource x:Key="FabStateOverlayBackgroundDisabled" ResourceKey="OnSurfaceDisabledLowBrush" />
      <StaticResource x:Key="FabSurfaceForeground" ResourceKey="OnPrimaryContainerBrush" />
      <StaticResource x:Key="FabSurfaceForegroundPressed" ResourceKey="OnPrimaryContainerBrush" />
      <StaticResource x:Key="FabSurfaceForegroundPointerOver" ResourceKey="OnPrimaryContainerBrush" />
      <StaticResource x:Key="FabSurfaceForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="FabSurfaceBackground" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="FabSurfaceBackgroundPressed" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="FabSurfaceBackgroundPointerOver" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="FabSurfaceBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FabSurfaceStateOverlayBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FabSurfaceStateOverlayBackgroundPointerOver" ResourceKey="PrimaryHoverBrush" />
      <StaticResource x:Key="FabSurfaceStateOverlayBackgroundFocused" ResourceKey="PrimaryFocusedBrush" />
      <StaticResource x:Key="FabSurfaceStateOverlayBackgroundPressed" ResourceKey="PrimaryPressedBrush" />
      <StaticResource x:Key="FabSurfaceStateOverlayBackgroundDisabled" ResourceKey="OnSurfaceDisabledLowBrush" />
      <StaticResource x:Key="FabSecondaryForeground" ResourceKey="OnSecondaryContainerBrush" />
      <StaticResource x:Key="FabSecondaryForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="FabSecondaryForegroundPointerOver" ResourceKey="OnSecondaryContainerBrush" />
      <StaticResource x:Key="FabSecondaryForegroundPressed" ResourceKey="OnSecondaryContainerBrush" />
      <StaticResource x:Key="FabSecondaryBackground" ResourceKey="SecondaryContainerBrush" />
      <StaticResource x:Key="FabSecondaryBackgroundPointerOver" ResourceKey="SecondaryContainerBrush" />
      <StaticResource x:Key="FabSecondaryBackgroundPressed" ResourceKey="SecondaryContainerBrush" />
      <StaticResource x:Key="FabSecondaryBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FabSecondaryStateOverlayBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FabSecondaryStateOverlayBackgroundPointerOver" ResourceKey="OnSecondaryContainerHoverBrush" />
      <StaticResource x:Key="FabSecondaryStateOverlayBackgroundFocused" ResourceKey="OnSecondaryContainerFocusedBrush" />
      <StaticResource x:Key="FabSecondaryStateOverlayBackgroundPressed" ResourceKey="OnSecondaryContainerPressedBrush" />
      <StaticResource x:Key="FabSecondaryStateOverlayBackgroundDisabled" ResourceKey="OnSurfaceDisabledLowBrush" />
      <StaticResource x:Key="FabTertiaryForeground" ResourceKey="OnTertiaryContainerBrush" />
      <StaticResource x:Key="FabTertiaryForegroundPointerOver" ResourceKey="OnTertiaryContainerBrush" />
      <StaticResource x:Key="FabTertiaryForegroundPressed" ResourceKey="OnTertiaryContainerBrush" />
      <StaticResource x:Key="FabTertiaryForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="FabTertiaryBackground" ResourceKey="TertiaryContainerBrush" />
      <StaticResource x:Key="FabTertiaryBackgroundPointerOver" ResourceKey="TertiaryContainerBrush" />
      <StaticResource x:Key="FabTertiaryBackgroundPressed" ResourceKey="TertiaryContainerBrush" />
      <StaticResource x:Key="FabTertiaryBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FabTertiaryStateOverlayBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FabTertiaryStateOverlayBackgroundFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FabTertiaryStateOverlayBackgroundPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FabTertiaryStateOverlayBackgroundDisabled" ResourceKey="OnSurfaceDisabledLowBrush" />
      <Thickness x:Key="MaterialFabPadding">20</Thickness>
      <x:Double x:Key="MaterialFabContentWidthOrHeight">16</x:Double>
      <CornerRadius x:Key="MaterialFabCornerRadius">16</CornerRadius>
      <Thickness x:Key="MaterialSmallFabPadding">12</Thickness>
      <x:Double x:Key="MaterialSmallFabContentWidthOrHeight">16</x:Double>
      <CornerRadius x:Key="MaterialSmallFabCornerRadius">12</CornerRadius>
      <Thickness x:Key="MaterialLargeFabPadding">36</Thickness>
      <x:Double x:Key="MaterialLargeFabContentWidthOrHeight">24</x:Double>
      <CornerRadius x:Key="MaterialLargeFabCornerRadius">28</CornerRadius>
      <x:Double x:Key="MaterialFabIconTextPadding">12</x:Double>
      <StaticResource x:Key="HyperlinkButtonForeground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="HyperlinkButtonForegroundPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="HyperlinkButtonForegroundPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="HyperlinkButtonForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="HyperlinkButtonBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="HyperlinkButtonBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="HyperlinkButtonBackgroundPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="HyperlinkButtonBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="HyperlinkButtonBorderBrush" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="HyperlinkButtonBorderBrushPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="HyperlinkButtonBorderBrushPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="HyperlinkButtonBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="HyperlinkButtonFontSize" ResourceKey="LabelLargeFontSize" />
      <StaticResource x:Key="HyperlinkButtonFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <x:Double x:Key="HyperlinkButtonBackgroundOpacity">1</x:Double>
      <StaticResource x:Key="HyperlinkButtonBackgroundOpacityPointerOver" ResourceKey="MediumOpacity" />
      <StaticResource x:Key="HyperlinkButtonBackgroundOpacityPressed" ResourceKey="LowOpacity" />
      <x:Double x:Key="HyperlinkButtonBackgroundOpacityDisabled">1</x:Double>
      <Thickness x:Key="HyperlinkButtonPadding">0</Thickness>
      <Color x:Key="MediaTransportControlsBackgroundColor">#000000</Color>
      <SolidColorBrush x:Key="MediaTransportControlsBackgroundBrush" Color="{ThemeResource MediaTransportControlsBackgroundColor}" Opacity="0.75" />
      <Color x:Key="MediaTransportControlsAppBarButtonColor">#FFFFFF</Color>
      <SolidColorBrush x:Key="MediaTransportControlsAppBarButtonBrush" Color="{ThemeResource MediaTransportControlsAppBarButtonColor}" />
      <Thickness x:Key="MediaTransportControlsTitleSafeBounds">48,0,48,27</Thickness>
      <StaticResource x:Key="MediaTransportControlsCommandBarBackground" ResourceKey="MediaTransportControlsBackgroundBrush" />
      <StaticResource x:Key="MediaTransportControlsPanelBackground" ResourceKey="MediaTransportControlsBackgroundBrush" />
      <StaticResource x:Key="MediaTransportControlsFlyoutBackground" ResourceKey="MediaTransportControlsBackgroundBrush" />
      <StaticResource x:Key="MediaTransportControlsThumbBorderBackground" ResourceKey="MediaTransportControlsBackgroundBrush" />
      <StaticResource x:Key="MediaTransportControlsFillTimeElapsedText" ResourceKey="MediaTransportControlsAppBarButtonBrush" />
      <StaticResource x:Key="MediaTransportControlsFillMediaText" ResourceKey="MediaTransportControlsAppBarButtonBrush" />
      <StaticResource x:Key="MediaTransportControlsBorderBrush" ResourceKey="MediaTransportControlsBackgroundBrush" />
      <Thickness x:Key="MediaTransportControlsMargin">0</Thickness>
      <Thickness x:Key="MediaTransportControlsProgressSliderMargin">7,2,7,1</Thickness>
      <Thickness x:Key="MediaTransportControlsProgressSliderCompactMargin">12,-1,8,1</Thickness>
      <x:Double x:Key="MediaTransportControlsBorderThickness">1</x:Double>
      <x:Double x:Key="MediaTransportControlsAppBarButtonHeight">40</x:Double>
      <x:Double x:Key="MediaTransportControlsAppBarButtonWidth">40</x:Double>
      <x:Double x:Key="MediaTransportControlsSliderHeight">32</x:Double>
      <x:Double x:Key="MediaTransportControlsSliderWidth">190</x:Double>
      <x:Double x:Key="MediaTransportControlsMinWidth">296</x:Double>
      <x:Double x:Key="MediaTransportControlsMaxWidth">720</x:Double>
      <CornerRadius x:Key="MaterialNavigationViewSplitViewCornerRadius">0,14,14,0</CornerRadius>
      <CornerRadius x:Key="MaterialNavigationViewContentGridCornerRadius">14,0,0,14</CornerRadius>
      <x:Double x:Key="MaterialNavigationViewButtonWidth">56</x:Double>
      <CornerRadius x:Key="MaterialNavigationViewButtonCornerRadius">28</CornerRadius>
      <x:Double x:Key="MaterialNavigationViewButtonIconLength">24</x:Double>
      <x:Double x:Key="MaterialNavigationViewButtonIconSymbolFontSize">24</x:Double>
      <Thickness x:Key="MaterialNavigationViewButtonMarginWhenStackedVertically">12,0</Thickness>
      <x:Double x:Key="MaterialNavigationItemHeight">56</x:Double>
      <CornerRadius x:Key="MaterialNavigationViewItemCornerRadius">28</CornerRadius>
      <CornerRadius x:Key="MaterialNavigationViewItemCornerRadiusLeftOnly">28,0,0,28</CornerRadius>
      <Thickness x:Key="MaterialNavigationItemLeftMargin">12,0</Thickness>
      <x:Double x:Key="MaterialNavigationItemIconLength">24</x:Double>
      <Thickness x:Key="MaterialNavigationItemContentMargin">12,0,0,0</Thickness>
      <Thickness x:Key="MaterialNavigationItemContentMarginWithoutIcon">0</Thickness>
      <Thickness x:Key="NavigationViewAutoSuggestBoxMargin">16,0</Thickness>
      <Thickness x:Key="TopNavigationViewAutoSuggestBoxMargin">4,0</Thickness>
      <x:Double x:Key="PaneToggleButtonHeight">56</x:Double>
      <x:Double x:Key="PaneToggleButtonWidth">80</x:Double>
      <x:Double x:Key="NavigationViewCompactPaneLength">80</x:Double>
      <x:Double x:Key="NavigationViewIconBoxWidth">40</x:Double>
      <x:Double x:Key="NavigationViewTopPaneHeight">48</x:Double>
      <x:Double x:Key="NavigationViewAutoSuggestAreaHeight">40</x:Double>
      <x:Double x:Key="TopNavigationViewPaneCustomContentMinWidth">80</x:Double>
      <x:Double x:Key="TopNavigationViewOverflowButtonWidth">40</x:Double>
      <x:Double x:Key="TopNavigationViewOverflowButtonHeight">40</x:Double>
      <x:Double x:Key="TopNavigationViewSettingsButtonWidth">40</x:Double>
      <x:Double x:Key="TopNavigationViewSettingsButtonHeight">40</x:Double>
      <x:Double x:Key="NavigationViewItemOnLeftMinHeight">56</x:Double>
      <x:Double x:Key="NavigationViewPaneHeaderRowMinHeight">56</x:Double>
      <x:Double x:Key="NavigationViewItemOnLeftIconBoxHeight">24</x:Double>
      <x:Double x:Key="NavigationViewSelectionIndicatorWidth">3</x:Double>
      <x:Double x:Key="NavigationViewSelectionIndicatorHeight">24</x:Double>
      <x:Double x:Key="NavigationViewSelectionIndicatorRadius">2</x:Double>
      <x:Double x:Key="NavigationViewItemSeparatorHeight">1</x:Double>
      <x:Double x:Key="TopNavigationViewItemSeparatorWidth">1</x:Double>
      <Thickness x:Key="NavigationViewToggleBorderThickness">0</Thickness>
      <Thickness x:Key="NavigationViewItemBorderThickness">1</Thickness>
      <Thickness x:Key="NavigationViewItemOnLeftIconBoxMargin">3</Thickness>
      <Thickness x:Key="NavigationViewItemButtonMargin">12,0</Thickness>
      <Thickness x:Key="NavigationViewItemInnerHeaderMargin">16,0</Thickness>
      <Thickness x:Key="TopNavigationViewItemInnerHeaderMargin">12,0</Thickness>
      <Thickness x:Key="NavigationViewMinimalHeaderMargin">-24,44,0,0</Thickness>
      <Thickness x:Key="NavigationViewButtonHolderGridMargin">0</Thickness>
      <Thickness x:Key="NavigationViewPaneContentGridMargin">-1,3</Thickness>
      <Thickness x:Key="NavigationViewContentGridBorderThickness">1,1,0,0</Thickness>
      <Thickness x:Key="NavigationViewMinimalContentGridBorderThickness">0,1,0,0</Thickness>
      <Thickness x:Key="TopNavigationViewContentGridBorderThickness">0,1,0,0</Thickness>
      <Thickness x:Key="TopNavigationViewTopNavGridMargin">4,0</Thickness>
      <Thickness x:Key="NavigationViewBorderThickness">1</Thickness>
      <Thickness x:Key="NavigationViewHeaderMargin">56,44,0,0</Thickness>
      <Thickness x:Key="NavigationViewContentPresenterMargin">0</Thickness>
      <Thickness x:Key="NavigationViewContentMargin">0</Thickness>
      <Thickness x:Key="NavigationViewMinimalContentMargin">0</Thickness>
      <Thickness x:Key="TopNavigationViewContentMargin">0</Thickness>
      <Thickness x:Key="NavigationViewPaneTitlePresenterMargin">8,4,0,0</Thickness>
      <Thickness x:Key="NavigationViewItemMargin">0</Thickness>
      <Thickness x:Key="TopNavigationViewItemMargin">0</Thickness>
      <Thickness x:Key="NavigationViewItemSeparatorMargin">0,3,0,4</Thickness>
      <Thickness x:Key="NavigationViewCompactItemSeparatorMargin">0,3,0,4</Thickness>
      <Thickness x:Key="TopNavigationViewItemSeparatorMargin">3,0,4,0</Thickness>
      <Thickness x:Key="TopNavigationViewOverflowButtonMargin">0</Thickness>
      <Thickness x:Key="NavigationViewItemContentPresenterMargin">4,-1,8,-1</Thickness>
      <Thickness x:Key="NavigationViewCompactItemContentPresenterMargin">0,0,0,0</Thickness>
      <Thickness x:Key="TopNavigationViewItemContentPresenterMargin">8,-1,12,-1</Thickness>
      <Thickness x:Key="TopNavigationViewItemContentOnlyContentPresenterMargin">12,0</Thickness>
      <Thickness x:Key="NavigationViewItemExpandChevronMargin">0,0,-14,0</Thickness>
      <Thickness x:Key="TopNavigationViewItemExpandChevronMargin">-16,0,0,0</Thickness>
      <Thickness x:Key="TopNavigationViewItemIconOnlyExpandChevronMargin">0,0,0,0</Thickness>
      <Thickness x:Key="TopNavigationViewItemContentOnlyExpandChevronMargin">-12,0,0,0</Thickness>
      <Thickness x:Key="TopNavigationViewItemOnOverflowContentPresenterMargin">12,0,20,0</Thickness>
      <Thickness x:Key="TopNavigationViewItemOnOverflowNoIconContentPresenterMargin">16,0,20,0</Thickness>
      <Thickness x:Key="TopNavigationViewItemOnOverflowExpandChevronMargin">-4,0,-8,0</Thickness>
      <Thickness x:Key="TopNavigationViewItemOnOverflowExpandChevronPadding">12,0,12,0</Thickness>
      <CornerRadius x:Key="NavigationViewContentGridCornerRadius">8,0,0,0</CornerRadius>
      <CornerRadius x:Key="TopNavigationViewContentGridCornerRadius">0</CornerRadius>
      <CornerRadius x:Key="NavigationViewMinimalContentGridCornerRadius">0</CornerRadius>
      <Thickness x:Key="TopNavigationViewOverflowMenuPadding">0,8</Thickness>
      <Thickness x:Key="NavigationViewItemChildrenMenuFlyoutPadding">0,8</Thickness>
      <x:Double x:Key="NavigationViewItemExpandedGlyphFontSize">8</x:Double>
      <x:String x:Key="NavigationViewItemExpandedGlyph">&#xE70D;</x:String>
      <x:Double x:Key="SplitViewOpenPaneThemeLength">320</x:Double>
      <x:Double x:Key="SplitViewCompactPaneThemeLength">48</x:Double>
      <Thickness x:Key="SplitViewLeftBorderThemeThickness">0,0,1,0</Thickness>
      <Thickness x:Key="SplitViewRightBorderThemeThickness">1,0,0,0</Thickness>
      <StaticResource x:Key="NavigationViewSplitViewLightDismissOverlayBackground" ResourceKey="SystemControlPageBackgroundMediumAltMediumBrush" />
      <x:String x:Key="SplitViewPaneAnimationOpenDuration">00:00:00.2</x:String>
      <x:String x:Key="SplitViewPaneAnimationOpenPreDuration">00:00:00.19999</x:String>
      <x:String x:Key="SplitViewPaneAnimationCloseDuration">00:00:00.1</x:String>
      <CornerRadius x:Key="SplitViewPaneRootCornerRadius">0</CornerRadius>
      <StaticResource x:Key="NavigationViewBackground" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="NavigationViewDefaultPaneBackground" ResourceKey="SystemControlPageBackgroundChromeLowBrush" />
      <StaticResource x:Key="NavigationViewPaneBackground" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="NavigationViewTopPaneBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewDefaultPaneBorderBrush" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="NavigationViewButtonForeground" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="NavigationViewButtonForegroundPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="NavigationViewButtonForegroundPressed" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="NavigationViewButtonForegroundDisabled" ResourceKey="OnSurfaceDisabledLowBrush" />
      <StaticResource x:Key="NavigationViewButtonBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewButtonBackgroundPointerOver" ResourceKey="PrimaryHoverBrush" />
      <StaticResource x:Key="NavigationViewButtonBackgroundPressed" ResourceKey="PrimaryPressedBrush" />
      <StaticResource x:Key="NavigationViewButtonBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewButtonRippleFeedback" ResourceKey="PrimaryPressedBrush" />
      <StaticResource x:Key="NavigationViewItemBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBackgroundPointerOver" ResourceKey="PrimaryHoverBrush" />
      <StaticResource x:Key="NavigationViewItemBackgroundPressed" ResourceKey="PrimaryPressedBrush" />
      <StaticResource x:Key="NavigationViewItemBackgroundDisabled" ResourceKey="OnSurfaceDisabledLowBrush" />
      <StaticResource x:Key="NavigationViewItemBackgroundSelected" ResourceKey="PrimarySelectedBrush" />
      <StaticResource x:Key="NavigationViewItemBackgroundSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBackgroundSelectedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBackgroundSelectedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemForeground" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="NavigationViewItemForegroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemForegroundPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemForegroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemForegroundSelected" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemForegroundSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemForegroundSelectedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemForegroundSelectedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBorderBrush" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBorderBrushPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBorderBrushPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBorderBrushSelected" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBorderBrushSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBorderBrushSelectedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBorderBrushSelectedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemSeparatorForeground" ResourceKey="OnSurfacePressedBrush" />
      <StaticResource x:Key="NavigationViewItemHeaderForeground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewSelectionIndicatorForeground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemRippleFeedback" ResourceKey="PrimaryPressedBrush" />
      <StaticResource x:Key="TopNavigationViewItemForeground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemForegroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemForegroundPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemForegroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemForegroundSelected" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemForegroundSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemForegroundSelectedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemBackgroundPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemBackgroundSelected" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemBackgroundSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemBackgroundSelectedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemSeparatorForeground" ResourceKey="SystemControlTransparentBrush" />
      <x:String x:Key="PasswordBoxRevealGlyphPathData">M11 0.5C6 0.5 1.73 3.61 0 8C1.73 12.39 6 15.5 11 15.5C16 15.5 20.27 12.39 22 8C20.27 3.61 16 0.5 11 0.5ZM11 13C8.24 13 6 10.76 6 8C6 5.24 8.24 3 11 3C13.76 3 16 5.24 16 8C16 10.76 13.76 13 11 13ZM11 5C9.34 5 8 6.34 8 8C8 9.66 9.34 11 11 11C12.66 11 14 9.66 14 8C14 6.34 12.66 5 11 5Z</x:String>
      <StaticResource x:Key="PasswordBoxRevealButtonForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="PasswordBoxLeadingIconForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="PasswordBoxLeadingIconForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="FilledPasswordBoxBackground" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="FilledPasswordBoxBackgroundPointerOver" ResourceKey="OnSurfaceVariantHoverBrush" />
      <StaticResource x:Key="FilledPasswordBoxBackgroundFocused" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="FilledPasswordBoxBackgroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="FilledPasswordBoxBorderBrush" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="FilledPasswordBoxBorderBrushPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="FilledPasswordBoxBorderBrushFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="FilledPasswordBoxBorderBrushDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="FilledPasswordBoxForeground" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="FilledPasswordBoxForegroundPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="FilledPasswordBoxForegroundFocused" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="FilledPasswordBoxForegroundDisabled" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="FilledPasswordBoxForegroundOpacityDisabled" ResourceKey="LowOpacity" />
      <StaticResource x:Key="FilledPasswordBoxPlaceholderForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="FilledPasswordBoxPlaceholderForegroundPointerOver" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="FilledPasswordBoxPlaceholderForegroundFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="FilledPasswordBoxPlaceholderForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="FilledPasswordBoxRevealButtonForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="FilledPasswordBoxFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <StaticResource x:Key="FilledPasswordBoxFontWeight" ResourceKey="BodyLargeFontWeight" />
      <StaticResource x:Key="FilledPasswordBoxFontSize" ResourceKey="BodyLargeFontSize" />
      <StaticResource x:Key="FilledPasswordBoxCharacterSpacing" ResourceKey="BodyLargeCharacterSpacing" />
      <StaticResource x:Key="OutlinedPasswordBoxBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxBackgroundFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxBorderBrush" ResourceKey="OutlineBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxBorderBrushPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxBorderBrushFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxBorderBrushDisabled" ResourceKey="OnSurfaceDisabledLowBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxForeground" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxForegroundPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxForegroundFocused" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxForegroundDisabled" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxForegroundOpacityDisabled" ResourceKey="LowOpacity" />
      <StaticResource x:Key="OutlinedPasswordBoxPlaceholderForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxPlaceholderForegroundPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxPlaceholderForegroundFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxPlaceholderForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <StaticResource x:Key="OutlinedPasswordBoxFontWeight" ResourceKey="BodyLargeFontWeight" />
      <StaticResource x:Key="OutlinedPasswordBoxFontSize" ResourceKey="BodyLargeFontSize" />
      <StaticResource x:Key="OutlinedPasswordBoxCharacterSpacing" ResourceKey="BodyLargeCharacterSpacing" />
      <CornerRadius x:Key="OutlinedPasswordBoxCornerRadius">4</CornerRadius>
      <x:Double x:Key="OutlinedPasswordBoxMinHeight">58</x:Double>
      <Thickness x:Key="OutlinedPasswordBoxBorderPadding">1</Thickness>
      <Thickness x:Key="OutlinedPasswordBoxBorderThickness">1</Thickness>
      <Thickness x:Key="OutlinedPasswordBoxPadding">16,4,8,4</Thickness>
      <Thickness x:Key="OutlinedPasswordBoxBorderThicknessPointerOver">1</Thickness>
      <Thickness x:Key="OutlinedPasswordBoxBorderPaddingPointerOver">1</Thickness>
      <Thickness x:Key="OutlinedPasswordBoxBorderThicknessFocused">2</Thickness>
      <Thickness x:Key="OutlinedPasswordBoxBorderPaddingFocused">1</Thickness>
      <CornerRadius x:Key="FilledPasswordBoxCornerRadius">4,4,0,0</CornerRadius>
      <x:Double x:Key="FilledPasswordBoxMinHeight">56</x:Double>
      <x:Double x:Key="FilledPasswordBoxBorderHeightPointerOver">2</x:Double>
      <x:Double x:Key="FilledPasswordBoxBorderHeightFocused">2</x:Double>
      <Thickness x:Key="FilledPasswordBoxPadding">16,4,8,4</Thickness>
      <StaticResource x:Key="PipsPagerSelectionIndicatorBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerSelectionIndicatorBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerSelectionIndicatorBackgroundPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerSelectionIndicatorBackgroundSelected" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerSelectionIndicatorBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerSelectionIndicatorBorderBrush" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerSelectionIndicatorBorderBrushPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerSelectionIndicatorBorderBrushPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerSelectionIndicatorBorderBrushSelected" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerSelectionIndicatorBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerSelectionIndicatorForeground" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="PipsPagerSelectionIndicatorForegroundPointerOver" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="PipsPagerSelectionIndicatorForegroundPressed" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="PipsPagerSelectionIndicatorForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="PipsPagerSelectionIndicatorForegroundFocused" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="PipsPagerSelectionIndicatorForegroundSelected" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="MaterialPipsPagerVisualStateEllipseFill" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="MaterialPipsPagerVisualStateEllipseFillPointerOver" ResourceKey="PrimaryHoverBrush" />
      <StaticResource x:Key="MaterialPipsPagerVisualStateEllipseFillPressed" ResourceKey="PrimaryPressedBrush" />
      <StaticResource x:Key="MaterialPipsPagerVisualStateEllipseFillFocused" ResourceKey="PrimaryFocusedBrush" />
      <StaticResource x:Key="PipsPagerNavigationButtonBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerNavigationButtonBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerNavigationButtonBackgroundPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerNavigationButtonBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerNavigationButtonBorderBrush" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerNavigationButtonBorderBrushPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerNavigationButtonBorderBrushPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerNavigationButtonBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerNavigationButtonForeground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="PipsPagerNavigationButtonForegroundPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="PipsPagerNavigationButtonForegroundPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="PipsPagerNavigationButtonForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="MaterialPipsPagerNavigationButtonVisualStateEllipseFill" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="MaterialPipsPagerNavigationButtonVisualStateEllipseFillPointerOver" ResourceKey="PrimaryHoverBrush" />
      <StaticResource x:Key="MaterialPipsPagerNavigationButtonVisualStateEllipseFillPressed" ResourceKey="PrimaryPressedBrush" />
      <StaticResource x:Key="MaterialPipsPagerNavigationButtonVisualStateEllipseFillFocused" ResourceKey="PrimaryFocusedBrush" />
      <StaticResource x:Key="MaterialPipsPagerNavigationButtonVisualStateEllipseFillUnfocused" ResourceKey="PrimaryUnfocusedBrush" />
      <x:Double x:Key="PipsPagerHorizontalOrientationButtonWidth">12</x:Double>
      <x:Double x:Key="PipsPagerHorizontalOrientationButtonHeight">12</x:Double>
      <x:Double x:Key="PipsPagerVerticalOrientationButtonWidth">12</x:Double>
      <x:Double x:Key="PipsPagerVerticalOrientationButtonHeight">12</x:Double>
      <Thickness x:Key="PipsPagerButtonBorderThickness">0</Thickness>
      <Thickness x:Key="PipsPagerNavigationButtonBorderThickness">0</Thickness>
      <x:String x:Key="PipsPagerPreviousPageButtonData">M3.33681 0.322148C3.63156 -0.107383 4.36844 -0.107382 4.66319 0.322148L7.89626 5.03356C8.19101 5.46309 7.82257 6 7.23307 6L0.766932 6C0.177427 6 -0.191014 5.46309 0.103739 5.03356L3.33681 0.322148Z</x:String>
      <x:String x:Key="PipsPagerNextPageButtonData">M4.66319 5.67785C4.36844 6.10738 3.63156 6.10738 3.33681 5.67785L0.103738 0.966444C-0.191015 0.536913 0.177425 6.83871e-07 0.766931 6.32335e-07L7.23307 6.70473e-08C7.82257 1.55111e-08 8.19101 0.536912 7.89626 0.966443L4.66319 5.67785Z</x:String>
      <x:Double x:Key="PipsPagerNavigationButtonHeight">40</x:Double>
      <x:Double x:Key="PipsPagerNavigationButtonWidth">40</x:Double>
      <Thickness x:Key="PipsPagerNavigationButtonPadding">4</Thickness>
      <x:Double x:Key="PipsPagerNavigationVisualStatesEllipseWidth">12</x:Double>
      <x:Double x:Key="PipsPagerNavigationVisualStatesEllipseHeight">12</x:Double>
      <x:Double x:Key="PipsPagerSelectedEllipseSize">8</x:Double>
      <x:Double x:Key="PipsPagerNormalEllipseSize">8</x:Double>
      <StaticResource x:Key="ProgressBarForeground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ProgressBarBackground" ResourceKey="SurfaceVariantBrush" />
      <x:Double x:Key="ProgressBarMinWidth">250</x:Double>
      <x:Double x:Key="ProgressBarHeight">4</x:Double>
      <StaticResource x:Key="ProgressRingForeground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ProgressRingBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="RadioButtonForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="RadioButtonForegroundPointerOver" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="RadioButtonForegroundPressed" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="RadioButtonForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseStroke" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseStrokePointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseStrokePressed" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseStrokeDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseCheckedStroke" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseCheckedStrokePointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseCheckedStrokePressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseCheckedStrokeDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseFill" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseFillPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseFillPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseFillDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseCheckedFill" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseCheckedFillPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseCheckedFillPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseCheckedFillDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="RadioButtonStateCircleBackgroundUnchecked" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="RadioButtonStateCircleBackgroundChecked" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="RadioButtonStateCircleOpacityPointerOver" ResourceKey="HoverOpacity" />
      <StaticResource x:Key="RadioButtonStateCircleOpacityPressed" ResourceKey="PressedOpacity" />
      <StaticResource x:Key="RadioButtonStateCircleOpacityFocused" ResourceKey="FocusedOpacity" />
      <StaticResource x:Key="RadioButtonFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <StaticResource x:Key="RadioButtonFontWeight" ResourceKey="BodySmallFontWeight" />
      <StaticResource x:Key="RadioButtonFontSize" ResourceKey="BodySmallFontSize" />
      <StaticResource x:Key="RadioButtonCharacterSpacing" ResourceKey="BodySmallCharacterSpacing" />
      <GridLength x:Key="RadioButtonGridLength">40</GridLength>
      <x:Double x:Key="RadioButtonWidth">40</x:Double>
      <x:Double x:Key="RadioButtonHeight">40</x:Double>
      <x:Double x:Key="RadioButtonCheckGlyphSize">20</x:Double>
      <x:Double x:Key="RadioButtonMinHeight">40</x:Double>
      <x:Double x:Key="RadioButtonMinWidth">40</x:Double>
      <x:Double x:Key="RadioButtonStrokeThickness">2</x:Double>
      <Thickness x:Key="RadioButtonPadding">4,0,0,0</Thickness>
      <Thickness x:Key="RadioButtonCheckEllipsePadding">5</Thickness>
      <x:Double x:Key="RatingControlHeight">32</x:Double>
      <x:Double x:Key="RatingControlCaptionHeight">32</x:Double>
      <x:Double x:Key="SecondaryRatingControlCaptionHeight">32</x:Double>
      <StaticResource x:Key="RatingControlForeground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="RatingControlForegroundUnselected" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="RatingControlForegroundUnselectedPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="RatingControlForegroundSelected" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="RatingControlForegroundSelectedPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="RatingControlForegroundSelectedDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="RatingControlPlaceholderForeground" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="RatingControlPlaceholderForegroundPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="SecondaryRatingControlForeground" ResourceKey="SecondaryBrush" />
      <StaticResource x:Key="SecondaryRatingControlForegroundUnselected" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="SecondaryRatingControlForegroundSelected" ResourceKey="SecondaryBrush" />
      <StaticResource x:Key="SecondaryRatingControlPlaceholderForeground" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="SecondaryRatingControlPlaceholderForegroundPointerOver" ResourceKey="SecondaryBrush" />
      <StaticResource x:Key="SecondaryRatingControlForegroundUnselectedPointerOver" ResourceKey="SecondaryBrush" />
      <StaticResource x:Key="SecondaryRatingControlForegroundSelectedPointerOver" ResourceKey="SecondaryBrush" />
      <StaticResource x:Key="SecondaryRatingControlForegroundSelectedDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="RatingControlCaptionForeground" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="RatingControlCaptionFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <StaticResource x:Key="RatingControlCaptionStyle" ResourceKey="CaptionMedium" />
      <StaticResource x:Key="RatingControlFontFamily" ResourceKey="SymbolThemeFontFamily" />
      <StaticResource x:Key="SecondaryRatingControlCaptionForeground" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="SecondaryRatingControlCaptionFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <StaticResource x:Key="SecondaryRatingControlCaptionStyle" ResourceKey="CaptionMedium" />
      <Color x:Key="MaterialSliderThumbDisabledColor">#685C64</Color>
      <SolidColorBrush x:Key="MaterialSliderThumbDisabledBrush" Color="{ThemeResource MaterialSliderThumbDisabledColor}" />
      <Thickness x:Key="SliderFocusVisualMargin">-7,0</Thickness>
      <StaticResource x:Key="SliderFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <StaticResource x:Key="SliderFontSize" ResourceKey="LabelMediumFontSize" />
      <StaticResource x:Key="SliderTrackFill" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="SliderTrackFillDisabled" ResourceKey="OnSurfaceSelectedBrush" />
      <StaticResource x:Key="SliderTrackValueFill" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="SliderTrackValueFillDisabled" ResourceKey="SystemControlDisabledChromeDisabledHighBrush" />
      <CornerRadius x:Key="SliderHorizontalFillCornerRadius">4,0,0,4</CornerRadius>
      <CornerRadius x:Key="SliderVerticalFillCornerRadius">0,0,4,4</CornerRadius>
      <x:Double x:Key="SliderTrackThickness">4</x:Double>
      <x:Double x:Key="SliderFillThickness">6</x:Double>
      <StaticResource x:Key="SliderTickBarFill" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="SliderTickBarFillDisabled" ResourceKey="SystemControlDisabledChromeDisabledHighBrush" />
      <StaticResource x:Key="SliderInlineTickBarFill" ResourceKey="OnSurfaceVariantBrush" />
      <x:Double x:Key="SliderTopTickBarHeight">4</x:Double>
      <x:Double x:Key="SliderBottomTickBarHeight">4</x:Double>
      <x:Double x:Key="SliderHorizontalInlineTickBarHeight">2</x:Double>
      <x:Double x:Key="SliderLeftTickBarWidth">4</x:Double>
      <x:Double x:Key="SliderRightTickBarWidth">4</x:Double>
      <x:Double x:Key="SliderVerticalInlineTickBarWidth">2</x:Double>
      <Thickness x:Key="SliderTopTickBarMargin">0,0,0,4</Thickness>
      <Thickness x:Key="SliderBottomTickBarMargin">0,4,0,0</Thickness>
      <Thickness x:Key="SliderLeftTickBarMargin">0,0,4,0</Thickness>
      <Thickness x:Key="SliderRightTickBarMargin">4,0,0,0</Thickness>
      <StaticResource x:Key="SliderThumbBackground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="SliderThumbBackgroundDisabled" ResourceKey="MaterialSliderThumbDisabledBrush" />
      <x:Double x:Key="SliderThumbWidth">20</x:Double>
      <x:Double x:Key="SliderThumbHeight">20</x:Double>
      <x:Double x:Key="SliderThumbCornerRadius">10</x:Double>
      <StaticResource x:Key="SliderTrackCornerRadius" ResourceKey="ControlCornerRadius" />
      <Thickness x:Key="SliderHorizontalFocusVisualMargin">-14,-6,-14,-6</Thickness>
      <Thickness x:Key="SliderVerticalFocusVisualMargin">-6,-14,-6,-14</Thickness>
      <StaticResource x:Key="TextBoxDeleteButtonForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="TextBoxDeleteButtonForegroundPointerOver" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="TextBoxDeleteButtonForegroundPressed" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="TextBoxDeleteButtonForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="TextBoxLeadingIconForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="TextBoxLeadingIconForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="FilledTextBoxBackground" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="FilledTextBoxBackgroundPointerOver" ResourceKey="OnSurfaceVariantHoverBrush" />
      <StaticResource x:Key="FilledTextBoxBackgroundFocused" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="FilledTextBoxBackgroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="FilledTextBoxBorderBrush" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="FilledTextBoxBorderBrushPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="FilledTextBoxBorderBrushFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="FilledTextBoxBorderBrushDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="FilledTextBoxDeleteButtonForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="FilledTextBoxDeleteButtonForegroundPointerOver" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="FilledTextBoxDeleteButtonForegroundFocused" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="FilledTextBoxDeleteButtonForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="FilledTextBoxForeground" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="FilledTextBoxForegroundPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="FilledTextBoxForegroundFocused" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="FilledTextBoxForegroundDisabled" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="FilledTextBoxForegroundOpacityDisabled" ResourceKey="LowOpacity" />
      <StaticResource x:Key="FilledTextBoxPlaceholderForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="FilledTextBoxPlaceholderForegroundPointerOver" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="FilledTextBoxPlaceholderForegroundFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="FilledTextBoxPlaceholderForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="OutlinedTextBoxBorderBrush" ResourceKey="OutlineBrush" />
      <StaticResource x:Key="OutlinedTextBoxBorderBrushPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="OutlinedTextBoxBorderBrushFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="OutlinedTextBoxBorderBrushDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="OutlinedTextBoxForeground" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="OutlinedTextBoxForegroundPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="OutlinedTextBoxForegroundFocused" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="OutlinedTextBoxForegroundDisabled" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="OutlinedTextBoxForegroundOpacityDisabled" ResourceKey="LowOpacity" />
      <StaticResource x:Key="OutlinedTextBoxPlaceholderForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="OutlinedTextBoxPlaceholderForegroundPointerOver" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="OutlinedTextBoxPlaceholderForegroundFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="OutlinedTextBoxPlaceholderForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="OutlinedTextBoxFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <StaticResource x:Key="OutlinedTextBoxFontWeight" ResourceKey="BodyLargeFontWeight" />
      <StaticResource x:Key="OutlinedTextBoxFontSize" ResourceKey="BodyLargeFontSize" />
      <StaticResource x:Key="OutlinedTextBoxCharacterSpacing" ResourceKey="BodyLargeCharacterSpacing" />
      <StaticResource x:Key="FilledTextBoxFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <StaticResource x:Key="FilledTextBoxFontWeight" ResourceKey="BodyLargeFontWeight" />
      <StaticResource x:Key="FilledTextBoxFontSize" ResourceKey="BodyLargeFontSize" />
      <StaticResource x:Key="FilledTextBoxCharacterSpacing" ResourceKey="BodyLargeCharacterSpacing" />
      <StaticResource x:Key="FilledTextBoxBorderThicknessNormal" ResourceKey="TextBoxOutlinedStrokeHeight" />
      <StaticResource x:Key="FilledTextBoxBorderThicknessFocused" ResourceKey="TextBoxFocusStrokeWidth" />
      <x:Double x:Key="MaterialTextBoxClearGlyphWidth">20</x:Double>
      <x:Double x:Key="MaterialTextBoxClearGlyphHeight">20</x:Double>
      <CornerRadius x:Key="MaterialFilledTextBoxCornerRadius">4,4,0,0</CornerRadius>
      <macos:Thickness x:Key="MaterialFilledTextBoxPadding">16,7</macos:Thickness>
      <not_macos:Thickness x:Key="MaterialFilledTextBoxPadding">16</not_macos:Thickness>
      <x:Double x:Key="MaterialFilledTextBoxMinHeight">58</x:Double>
      <x:Double x:Key="MaterialFilledTextBoxBorderHeightFocused">2</x:Double>
      <x:Double x:Key="MaterialOutlinedTextBoxBorderThickness">1</x:Double>
      <CornerRadius x:Key="MaterialOutlinedTextBoxCornerRadius">4</CornerRadius>
      <macos:Thickness x:Key="MaterialOutlinedTextBoxPadding">16,7,14,7</macos:Thickness>
      <not_macos:Thickness x:Key="MaterialOutlinedTextBoxPadding">16,16,14,16</not_macos:Thickness>
      <x:Double x:Key="MaterialOutlinedTextBoxMinHeight">56</x:Double>
      <Thickness x:Key="MaterialOutlinedTextBoxBorderPadding">1</Thickness>
      <x:Double x:Key="MaterialOutlinedTextBoxBorderThicknessFocused">2</x:Double>
      <StaticResource x:Key="TextToggleButtonBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBackgroundPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBackgroundChecked" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBackgroundCheckedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBackgroundCheckedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBackgroundCheckedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBackgroundIndeterminate" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBackgroundIndeterminatePointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBackgroundIndeterminatePressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBackgroundIndeterminateDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonForeground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextToggleButtonForegroundPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextToggleButtonForegroundPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextToggleButtonForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="TextToggleButtonForegroundChecked" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextToggleButtonForegroundCheckedPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextToggleButtonForegroundCheckedPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextToggleButtonForegroundCheckedDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="TextToggleButtonForegroundIndeterminate" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextToggleButtonForegroundIndeterminatePointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextToggleButtonForegroundIndeterminatePressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextToggleButtonForegroundIndeterminateDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="TextToggleButtonFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <StaticResource x:Key="TextToggleButtonFontSize" ResourceKey="LabelLargeFontSize" />
      <StaticResource x:Key="TextToggleButtonBorderBrush" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBorderBrushPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBorderBrushPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBorderBrushChecked" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBorderBrushCheckedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBorderBrushCheckedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBorderBrushCheckedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBorderBrushIndeterminate" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBorderBrushIndeterminatePointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBorderBrushIndeterminatePressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBorderBrushIndeterminateDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBorderBrushHoverOverlay" ResourceKey="OnSurfaceHoverBrush" />
      <StaticResource x:Key="TextToggleButtonBorderBrushFocusedOverlay" ResourceKey="OnSurfaceFocusedBrush" />
      <StaticResource x:Key="TextToggleButtonBorderBrushSelectedOverlay" ResourceKey="OnSurfaceFocusedBrush" />
      <StaticResource x:Key="TextToggleButtonFeedbackFocused" ResourceKey="OnSurfaceFocusedBrush" />
      <Thickness x:Key="TextToggleButtonBorderThickness">0</Thickness>
      <CornerRadius x:Key="TextToggleButtonCornerRadius">4</CornerRadius>
      <Thickness x:Key="TextToggleButtonPadding">16,8</Thickness>
      <x:Double x:Key="TextToggleButtonMinHeight">40</x:Double>
      <StaticResource x:Key="IconToggleButtonBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBackgroundPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBackgroundChecked" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBackgroundCheckedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBackgroundCheckedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBackgroundCheckedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBackgroundIndeterminate" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBackgroundIndeterminatePointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBackgroundIndeterminatePressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBackgroundIndeterminateDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="IconToggleButtonForegroundPointerOver" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="IconToggleButtonForegroundPressed" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="IconToggleButtonForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="IconToggleButtonForegroundChecked" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="IconToggleButtonForegroundCheckedPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="IconToggleButtonForegroundCheckedPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="IconToggleButtonForegroundCheckedDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="IconToggleButtonForegroundIndeterminate" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="IconToggleButtonForegroundIndeterminatePointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="IconToggleButtonForegroundIndeterminatePressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="IconToggleButtonForegroundIndeterminateDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="IconToggleButtonBorderBrush" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBorderBrushPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBorderBrushPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBorderBrushChecked" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBorderBrushCheckedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBorderBrushCheckedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBorderBrushCheckedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBorderBrushIndeterminate" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBorderBrushIndeterminatePointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBorderBrushIndeterminatePressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBorderBrushIndeterminateDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBorderBrushHoverOverlay" ResourceKey="OnSurfaceHoverBrush" />
      <StaticResource x:Key="IconToggleButtonBorderBrushFocusedOverlay" ResourceKey="OnSurfaceFocusedBrush" />
      <StaticResource x:Key="IconToggleButtonBorderBrushSelectedOverlay" ResourceKey="OnSurfaceFocusedBrush" />
      <StaticResource x:Key="IconToggleButtonStateCircleFill" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="IconToggleButtonStateCircleOpacityPointerOver" ResourceKey="HoverOpacity" />
      <StaticResource x:Key="IconToggleButtonStateCircleOpacityPressed" ResourceKey="PressedOpacity" />
      <StaticResource x:Key="IconToggleButtonStateCircleOpacityFocused" ResourceKey="FocusedOpacity" />
      <Thickness x:Key="IconToggleButtonBorderThickness">0</Thickness>
      <x:Double x:Key="IconToggleButtonMinHeight">40</x:Double>
      <x:Double x:Key="IconToggleButtonMinWidth">40</x:Double>
      <StaticResource x:Key="ToggleSwitchOffOuterBorderFill" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="ToggleSwitchOffOuterBorderStroke" ResourceKey="OutlineBrush" />
      <StaticResource x:Key="ToggleSwitchOuterBorderStroke" ResourceKey="OutlineBrush" />
      <StaticResource x:Key="ToggleSwitchOuterBorderFill" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOffFill" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOffFillPointerOver" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOffFillFocused" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOffFillPressed" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOffFillDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOnFill" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOnFillPointerOver" ResourceKey="PrimaryContainerBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOnFillFocused" ResourceKey="PrimaryContainerBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOnFillPressed" ResourceKey="PrimaryContainerBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOnFillDisabled" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOnShadowFill" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOnShadowFillPointerOver" ResourceKey="PrimaryHoverBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOnShadowFillFocused" ResourceKey="PrimaryFocusedBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOnShadowFillPressed" ResourceKey="PrimaryPressedBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOffShadowFill" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOffShadowFillPointerOver" ResourceKey="OnSurfaceVariantHoverBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOffShadowFillFocused" ResourceKey="OnSurfaceVariantFocusedBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOffShadowFillPressed" ResourceKey="OnSurfaceVariantPressedBrush" />
      <StaticResource x:Key="ToggleSwitchOnSwitchKnobBoundsFill" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ToggleSwitchKnobBoundsFill" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ToggleSwitchKnobBoundsFillPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ToggleSwitchKnobBoundsFillFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ToggleSwitchKnobBoundsFillPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ToggleSwitchKnobBoundsFillDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="ToggleSwitchOffIconPresenterForeground" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="ToggleSwitchOffIconPresenterForegroundDisabled" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="ToggleSwitchOnIconPresenterForeground" ResourceKey="OnPrimaryContainerBrush" />
      <StaticResource x:Key="ToggleSwitchOnIconPresenterForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="ToggleSwitchThumb" ResourceKey="SystemControlTransparentBrush" />
      <x:Double x:Key="SwitchKnobWidth">52</x:Double>
      <x:Double x:Key="SwitchKnobIncludingOffShadowWidth">56</x:Double>
      <x:Double x:Key="SwitchKnobHeight">32</x:Double>
      <x:Double x:Key="SwitchKnobRadius">16</x:Double>
      <x:Double x:Key="SwitchKnobStrokeThickness">2</x:Double>
      <x:Double x:Key="SwitchKnobShadowSize">40</x:Double>
      <x:Double x:Key="SmallThumbSize">16</x:Double>
      <x:Double x:Key="MediumThumbSize">24</x:Double>
      <x:Double x:Key="LargeThumbSize">28</x:Double>
      <x:Double x:Key="KnobIconSize">16</x:Double>
      <x:Double x:Key="ToggleSwitchThemeMinWidth">0</x:Double>
      <CornerRadius x:Key="LargeThumbCornerRadius">14</CornerRadius>
      <Thickness x:Key="KnobIconPadding">2</Thickness>
      <Thickness x:Key="KnobOnMargin">2,0,0,0</Thickness>
      <Thickness x:Key="SwitchKnobOnMargin">26,0,0,0</Thickness>
      <Thickness x:Key="SwitchKnobOffMargin">0,0,22,0</Thickness>
      <Thickness x:Key="SwitchKnobOnShadowMargin">20,0,0,0</Thickness>
      <Thickness x:Key="SwitchKnobOffShadowMargin">0,0,20,0</Thickness>
      <StaticResource x:Key="DisplayLargeFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <x:String x:Key="DisplayLargeFontWeight">Normal</x:String>
      <x:Double x:Key="DisplayLargeFontSize">57</x:Double>
      <x:Int32 x:Key="DisplayLargeCharacterSpacing">-17</x:Int32>
      <StaticResource x:Key="DisplayMediumFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <x:String x:Key="DisplayMediumFontWeight">Normal</x:String>
      <x:Double x:Key="DisplayMediumFontSize">45</x:Double>
      <StaticResource x:Key="DisplaySmallFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <x:String x:Key="DisplaySmallFontWeight">Normal</x:String>
      <x:Double x:Key="DisplaySmallFontSize">36</x:Double>
      <StaticResource x:Key="HeadlineLargeFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <x:String x:Key="HeadlineLargeFontWeight">Normal</x:String>
      <x:Double x:Key="HeadlineLargeFontSize">32</x:Double>
      <StaticResource x:Key="HeadlineMediumFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <x:String x:Key="HeadlineMediumFontWeight">Normal</x:String>
      <x:Double x:Key="HeadlineMediumFontSize">28</x:Double>
      <StaticResource x:Key="HeadlineSmallFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <x:String x:Key="HeadlineSmallFontWeight">Normal</x:String>
      <x:Double x:Key="HeadlineSmallFontSize">24</x:Double>
      <StaticResource x:Key="TitleLargeFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <x:String x:Key="TitleLargeFontWeight">Normal</x:String>
      <x:Double x:Key="TitleLargeFontSize">22</x:Double>
      <StaticResource x:Key="TitleMediumFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="TitleMediumFontWeight">Medium</x:String>
      <x:Double x:Key="TitleMediumFontSize">16</x:Double>
      <StaticResource x:Key="TitleSmallFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="TitleSmallFontWeight">Medium</x:String>
      <x:Double x:Key="TitleSmallFontSize">14</x:Double>
      <StaticResource x:Key="LabelLargeFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="LabelLargeFontWeight">Medium</x:String>
      <x:Double x:Key="LabelLargeFontSize">14</x:Double>
      <x:Int32 x:Key="LabelLargeCharacterSpacing">7</x:Int32>
      <StaticResource x:Key="LabelMediumFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="LabelMediumFontWeight">Medium</x:String>
      <x:Double x:Key="LabelMediumFontSize">12</x:Double>
      <x:Int32 x:Key="LabelMediumCharacterSpacing">41</x:Int32>
      <StaticResource x:Key="LabelSmallFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="LabelSmallFontWeight">Medium</x:String>
      <x:Double x:Key="LabelSmallFontSize">11</x:Double>
      <x:Int32 x:Key="LabelSmallCharacterSpacing">45</x:Int32>
      <StaticResource x:Key="LabelExtraSmallFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="LabelExtraSmallFontWeight">Normal</x:String>
      <x:Double x:Key="LabelExtraSmallFontSize">11</x:Double>
      <x:Int32 x:Key="LabelExtraSmallCharacterSpacing">7</x:Int32>
      <StaticResource x:Key="BodyLargeFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="BodyLargeFontWeight">Medium</x:String>
      <x:Double x:Key="BodyLargeFontSize">16</x:Double>
      <x:Int32 x:Key="BodyLargeCharacterSpacing">9</x:Int32>
      <StaticResource x:Key="BodyMediumFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="BodyMediumFontWeight">Medium</x:String>
      <x:Double x:Key="BodyMediumFontSize">14</x:Double>
      <x:Int32 x:Key="BodyMediumCharacterSpacing">17</x:Int32>
      <StaticResource x:Key="BodySmallFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="BodySmallFontWeight">Medium</x:String>
      <x:Double x:Key="BodySmallFontSize">12</x:Double>
      <x:Int32 x:Key="BodySmallCharacterSpacing">33</x:Int32>
      <StaticResource x:Key="CaptionLargeFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="CaptionLargeFontWeight">Medium</x:String>
      <x:Double x:Key="CaptionLargeFontSize">13</x:Double>
      <x:Int32 x:Key="CaptionLargeCharacterSpacing">-3</x:Int32>
      <StaticResource x:Key="CaptionMediumFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="CaptionMediumFontWeight">Medium</x:String>
      <x:Double x:Key="CaptionMediumFontSize">12</x:Double>
      <x:Int32 x:Key="CaptionMediumCharacterSpacing">33</x:Int32>
      <StaticResource x:Key="CaptionSmallFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="CaptionSmallFontWeight">Medium</x:String>
      <x:Double x:Key="CaptionSmallFontSize">11</x:Double>
      <x:Int32 x:Key="CaptionSmallCharacterSpacing">7</x:Int32>
    </ResourceDictionary>
    <ResourceDictionary x:Key="Light">
      <StaticResource x:Key="ElevatedButtonForeground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ElevatedButtonForegroundPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ElevatedButtonForegroundPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ElevatedButtonForegroundFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ElevatedButtonForegroundPointerFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ElevatedButtonForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="ElevatedButtonIconForeground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ElevatedButtonIconForegroundPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ElevatedButtonIconForegroundPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ElevatedButtonIconForegroundFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ElevatedButtonIconForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="ElevatedButtonIconForegroundPointerFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ElevatedButtonBackground" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="ElevatedButtonBackgroundDisabled" ResourceKey="OnSurfaceDisabledLowBrush" />
      <StaticResource x:Key="ElevatedButtonBackgroundPointerOver" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="ElevatedButtonBackgroundPressed" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="ElevatedButtonBackgroundFocused" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="ElevatedButtonBackgroundPointerFocused" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="ElevatedButtonBorderBrush" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ElevatedButtonBorderBrushPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ElevatedButtonBorderBrushPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ElevatedButtonBorderBrushFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ElevatedButtonBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ElevatedButtonBorderBrushPointerFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ElevatedButtonStateLayerBackgroundPointerOver" ResourceKey="PrimaryHoverBrush" />
      <StaticResource x:Key="ElevatedButtonStateLayerBackgroundPressed" ResourceKey="PrimaryPressedBrush" />
      <StaticResource x:Key="ElevatedButtonStateLayerBackgroundFocused" ResourceKey="PrimaryFocusedBrush" />
      <StaticResource x:Key="ElevatedButtonStateLayerBackgroundPointerFocused" ResourceKey="PrimaryFocusedBrush" />
      <StaticResource x:Key="FilledButtonForeground" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="FilledButtonForegroundPointerOver" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="FilledButtonForegroundPressed" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="FilledButtonForegroundPointerFocused" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="FilledButtonForegroundFocused" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="FilledButtonForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="FilledButtonIconForeground" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="FilledButtonIconForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="FilledButtonIconForegroundPointerOver" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="FilledButtonIconForegroundPressed" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="FilledButtonIconForegroundFocused" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="FilledButtonIconForegroundPointerFocused" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="FilledButtonBackground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="FilledButtonBackgroundPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="FilledButtonBackgroundPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="FilledButtonBackgroundDisabled" ResourceKey="OnSurfaceDisabledLowBrush" />
      <StaticResource x:Key="FilledButtonBackgroundFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="FilledButtonBackgroundPointerFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="FilledButtonBorderBrush" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FilledButtonBorderBrushPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FilledButtonBorderBrushPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FilledButtonBorderBrushFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FilledButtonBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FilledButtonBorderBrushPointerFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FilledButtonStateLayerBackgroundPointerOver" ResourceKey="OnPrimaryHoverBrush" />
      <StaticResource x:Key="FilledButtonStateLayerBackgroundPressed" ResourceKey="OnPrimaryPressedBrush" />
      <StaticResource x:Key="FilledButtonStateLayerBackgroundFocused" ResourceKey="OnPrimaryFocusedBrush" />
      <StaticResource x:Key="FilledButtonStateLayerBackgroundPointerFocused" ResourceKey="OnPrimaryFocusedBrush" />
      <StaticResource x:Key="FilledTonalButtonForeground" ResourceKey="OnSecondaryContainerBrush" />
      <StaticResource x:Key="FilledTonalButtonForegroundPointerOver" ResourceKey="OnSecondaryContainerBrush" />
      <StaticResource x:Key="FilledTonalButtonForegroundPressed" ResourceKey="OnSecondaryContainerBrush" />
      <StaticResource x:Key="FilledTonalButtonForegroundFocused" ResourceKey="OnSecondaryContainerBrush" />
      <StaticResource x:Key="FilledTonalButtonForegroundPointerFocused" ResourceKey="OnSecondaryContainerBrush" />
      <StaticResource x:Key="FilledTonalButtonForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="FilledTonalButtonIconForeground" ResourceKey="OnSecondaryContainerBrush" />
      <StaticResource x:Key="FilledTonalButtonIconForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="FilledTonalButtonIconForegroundPointerOver" ResourceKey="OnSecondaryContainerBrush" />
      <StaticResource x:Key="FilledTonalButtonIconForegroundPressed" ResourceKey="OnSecondaryContainerBrush" />
      <StaticResource x:Key="FilledTonalButtonIconForegroundFocused" ResourceKey="OnSecondaryContainerBrush" />
      <StaticResource x:Key="FilledTonalButtonIconForegroundPointerFocused" ResourceKey="OnSecondaryContainerBrush" />
      <StaticResource x:Key="FilledTonalButtonBackground" ResourceKey="SecondaryContainerBrush" />
      <StaticResource x:Key="FilledTonalButtonBackgroundPointerOver" ResourceKey="SecondaryContainerBrush" />
      <StaticResource x:Key="FilledTonalButtonBackgroundPressed" ResourceKey="SecondaryContainerBrush" />
      <StaticResource x:Key="FilledTonalButtonBackgroundDisabled" ResourceKey="OnSurfaceDisabledLowBrush" />
      <StaticResource x:Key="FilledTonalButtonBackgroundFocused" ResourceKey="SecondaryContainerBrush" />
      <StaticResource x:Key="FilledTonalButtonBackgroundPointerFocused" ResourceKey="SecondaryContainerBrush" />
      <StaticResource x:Key="FilledTonalButtonBorderBrush" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FilledTonalButtonBorderBrushPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FilledTonalButtonBorderBrushPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FilledTonalButtonBorderBrushFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FilledTonalButtonBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FilledTonalButtonBorderBrushPointerFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FilledTonalButtonStateLayerBackgroundPointerOver" ResourceKey="OnSecondaryContainerHoverBrush" />
      <StaticResource x:Key="FilledTonalButtonStateLayerBackgroundPressed" ResourceKey="OnSecondaryContainerPressedBrush" />
      <StaticResource x:Key="FilledTonalButtonStateLayerBackgroundFocused" ResourceKey="OnSecondaryContainerFocusedBrush" />
      <StaticResource x:Key="FilledTonalButtonStateLayerBackgroundPointerFocused" ResourceKey="OnSecondaryContainerFocusedBrush" />
      <StaticResource x:Key="OutlinedButtonForeground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="OutlinedButtonForegroundPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="OutlinedButtonForegroundPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="OutlinedButtonForegroundFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="OutlinedButtonForegroundPointerFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="OutlinedButtonForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="OutlinedButtonIconForeground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="OutlinedButtonIconForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="OutlinedButtonIconForegroundPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="OutlinedButtonIconForegroundPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="OutlinedButtonIconForegroundFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="OutlinedButtonIconForegroundPointerFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="OutlinedButtonBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="OutlinedButtonBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="OutlinedButtonBackgroundPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="OutlinedButtonBackgroundDisabled" ResourceKey="OnSurfaceDisabledLowBrush" />
      <StaticResource x:Key="OutlinedButtonBackgroundFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="OutlinedButtonBackgroundPointerFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="OutlinedButtonBorderBrush" ResourceKey="OutlineBrush" />
      <StaticResource x:Key="OutlinedButtonBorderBrushPointerOver" ResourceKey="OutlineBrush" />
      <StaticResource x:Key="OutlinedButtonBorderBrushPressed" ResourceKey="OutlineBrush" />
      <StaticResource x:Key="OutlinedButtonBorderBrushFocused" ResourceKey="OutlineBrush" />
      <StaticResource x:Key="OutlinedButtonBorderBrushDisabled" ResourceKey="OutlineDisabledBrush" />
      <StaticResource x:Key="OutlinedButtonBorderBrushPointerFocused" ResourceKey="OutlineBrush" />
      <StaticResource x:Key="OutlinedButtonStateLayerBackgroundPointerOver" ResourceKey="PrimaryHoverBrush" />
      <StaticResource x:Key="OutlinedButtonStateLayerBackgroundPressed" ResourceKey="PrimaryPressedBrush" />
      <StaticResource x:Key="OutlinedButtonStateLayerBackgroundFocused" ResourceKey="PrimaryFocusedBrush" />
      <StaticResource x:Key="OutlinedButtonStateLayerBackgroundPointerFocused" ResourceKey="PrimaryFocusedBrush" />
      <StaticResource x:Key="TextButtonForeground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextButtonForegroundPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextButtonForegroundPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextButtonForegroundFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextButtonForegroundPointerFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextButtonForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="TextButtonIconForeground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextButtonIconForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="TextButtonIconForegroundPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextButtonIconForegroundPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextButtonIconForegroundFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextButtonIconForegroundPointerFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextButtonBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextButtonBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextButtonBackgroundPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextButtonBackgroundFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextButtonBackgroundPointerFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextButtonBorderBrush" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextButtonBorderBrushPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextButtonBorderBrushPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextButtonBorderBrushFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextButtonBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextButtonBorderBrushPointerFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextButtonStateLayerBackgroundPointerOver" ResourceKey="PrimaryHoverBrush" />
      <StaticResource x:Key="TextButtonStateLayerBackgroundPressed" ResourceKey="PrimaryPressedBrush" />
      <StaticResource x:Key="TextButtonStateLayerBackgroundFocused" ResourceKey="PrimaryFocusedBrush" />
      <StaticResource x:Key="TextButtonStateLayerBackgroundPointerFocused" ResourceKey="PrimaryFocusedBrush" />
      <StaticResource x:Key="IconButtonForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="IconButtonForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="IconButtonEllipseFillPointerOver" ResourceKey="PrimaryHoverBrush" />
      <StaticResource x:Key="IconButtonEllipseFillPressed" ResourceKey="PrimaryPressedBrush" />
      <StaticResource x:Key="IconButtonEllipseFillFocused" ResourceKey="PrimaryFocusedBrush" />
      <x:Double x:Key="ButtonMinHeight">40</x:Double>
      <x:Double x:Key="ButtonMinWidth">40</x:Double>
      <x:Double x:Key="ButtonIconMinWidth">18</x:Double>
      <x:Double x:Key="ElevatedButtonElevation">1</x:Double>
      <x:Double x:Key="ElevatedButtonElevationDisabled">0</x:Double>
      <x:Double x:Key="ButtonElevation">0</x:Double>
      <x:Double x:Key="IconButtonOpacityVisibleState">1</x:Double>
      <x:Double x:Key="IconButtonOpacityHiddenState">0</x:Double>
      <Thickness x:Key="ButtonPadding">16,0</Thickness>
      <Thickness x:Key="TextButtonPadding">12,0</Thickness>
      <Thickness x:Key="TextButtonIconMargin">0,0,8,0</Thickness>
      <Thickness x:Key="ButtonBorderThickness">0</Thickness>
      <Thickness x:Key="OutlinedButtonBorderThickness">1</Thickness>
      <Thickness x:Key="ElevatedButtonMargin">0,0,0,1</Thickness>
      <Thickness x:Key="ElevatedButtonDisabledMargin">0</Thickness>
      <Thickness x:Key="ButtonContentMargin">8,0</Thickness>
      <Thickness x:Key="ButtonMargin">0</Thickness>
      <CornerRadius x:Key="ButtonCornerRadius">20</CornerRadius>
      <CornerRadius x:Key="CalendarDatePickerBackgroundCornerRadius">4,4,0,0</CornerRadius>
      <Thickness x:Key="CalendarDatePickerBorderThemeThickness">1</Thickness>
      <Thickness x:Key="CalendarDatePickerFlyoutPresenterPadding">0</Thickness>
      <Thickness x:Key="CalendarDatePickerFlyoutPresenterMargin">0</Thickness>
      <Thickness x:Key="CalendarDatePickerContentMargin">10,0,10,0</Thickness>
      <x:Double x:Key="CalendarDatePickerHeight">53</x:Double>
      <x:Double x:Key="CalendarDatePickerBackgroundMinHeight">53</x:Double>
      <StaticResource x:Key="CalendarDatePickerCornerRadius" ResourceKey="ControlCornerRadius" />
      <StaticResource x:Key="CalendarDatePickerFlyoutPresenterCornerRadius" ResourceKey="OverlayCornerRadius" />
      <StaticResource x:Key="CalendarDatePickerCalendarViewCornerRadius" ResourceKey="OverlayCornerRadius" />
      <StaticResource x:Key="CalendarDatePickerForeground" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="CalendarDatePickerForegroundDisabled" ResourceKey="OnSurfaceMediumBrush" />
      <StaticResource x:Key="CalendarDatePickerCalendarGlyphForeground" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="CalendarDatePickerCalendarGlyphForegroundDisabled" ResourceKey="OnSurfaceMediumBrush" />
      <StaticResource x:Key="CalendarDatePickerTextForeground" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="CalendarDatePickerTextForegroundDisabled" ResourceKey="OnSurfaceMediumBrush" />
      <StaticResource x:Key="CalendarDatePickerTextForegroundSelected" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="CalendarDatePickerHeaderForeground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="CalendarDatePickerHeaderForegroundDisabled" ResourceKey="OnSurfaceMediumBrush" />
      <StaticResource x:Key="CalendarDatePickerBackground" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="CalendarDatePickerBackgroundPointerOver" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="CalendarDatePickerBackgroundPressed" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="CalendarDatePickerBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CalendarDatePickerBackgroundFocused" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="CalendarDatePickerBorderBrush" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="CalendarDatePickerBorderBrushPointerOver" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="CalendarDatePickerBorderBrushPressed" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="CalendarDatePickerBorderBrushDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="CalendarDatePickerBottomBorderBrush" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="CalendarDatePickerHeaderStyle" ResourceKey="MaterialBodySmall" />
      <StaticResource x:Key="CalendarDatePickerTextStyle" ResourceKey="MaterialBodyMedium" />
      <StaticResource x:Key="CheckBoxBackgroundUnchecked" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBackgroundUncheckedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBackgroundUncheckedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBackgroundUncheckedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBackgroundChecked" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBackgroundCheckedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBackgroundCheckedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBackgroundCheckedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBackgroundIndeterminate" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBackgroundIndeterminatePointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBackgroundIndeterminatePressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBackgroundIndeterminateDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxForegroundUnchecked" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="CheckBoxForegroundUncheckedPointerOver" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="CheckBoxForegroundUncheckedPressed" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="CheckBoxForegroundUncheckedDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="CheckBoxForegroundChecked" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="CheckBoxForegroundCheckedPointerOver" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="CheckBoxForegroundCheckedPressed" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="CheckBoxForegroundCheckedDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="CheckBoxForegroundIndeterminate" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="CheckBoxForegroundIndeterminatePointerOver" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="CheckBoxForegroundIndeterminatePressed" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="CheckBoxForegroundIndeterminateDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="CheckBoxBorderBrushUnchecked" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBorderBrushUncheckedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBorderBrushUncheckedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBorderBrushUncheckedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBorderBrushChecked" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBorderBrushCheckedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBorderBrushCheckedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBorderBrushCheckedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBorderBrushIndeterminate" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBorderBrushIndeterminatePointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBorderBrushIndeterminatePressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxBorderBrushIndeterminateDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundStroke" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundStrokeUnchecked" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundStrokeUncheckedPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundStrokeUncheckedPressed" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundStrokeUncheckedDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundStrokeChecked" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundStrokeCheckedPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundStrokeCheckedPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundStrokeCheckedDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundStrokeIndeterminate" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundStrokeIndeterminatePointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundStrokeIndeterminatePressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundStrokeIndeterminateDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundFill" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundFillUnchecked" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundFillUncheckedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundFillUncheckedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundFillUncheckedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundFillChecked" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundFillCheckedPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundFillCheckedPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundFillCheckedDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundFillIndeterminate" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundFillIndeterminatePointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundFillIndeterminatePressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="CheckBoxCheckBackgroundFillIndeterminateDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="CheckBoxFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <StaticResource x:Key="CheckBoxFontWeight" ResourceKey="BodySmallFontWeight" />
      <StaticResource x:Key="CheckBoxFontSize" ResourceKey="BodySmallFontSize" />
      <StaticResource x:Key="CheckBoxCharacterSpacing" ResourceKey="BodySmallCharacterSpacing" />
      <StaticResource x:Key="CheckBoxGlyphForeground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxGlyphForegroundUnchecked" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxGlyphForegroundUncheckedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxGlyphForegroundUncheckedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxGlyphForegroundUncheckedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="CheckBoxGlyphForegroundChecked" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="CheckBoxGlyphForegroundCheckedPointerOver" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="CheckBoxGlyphForegroundCheckedPressed" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="CheckBoxGlyphForegroundCheckedDisabled" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="CheckBoxGlyphForegroundIndeterminate" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="CheckBoxGlyphForegroundIndeterminatePointerOver" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="CheckBoxGlyphForegroundIndeterminatePressed" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="CheckBoxGlyphForegroundIndeterminateDisabled" ResourceKey="OnPrimaryBrush" />
      <x:String x:Key="CheckBoxHyphenGlyphPathData">M0,0L32,0 32,5.3 0,5.3z</x:String>
      <x:String x:Key="CheckBoxCheckGlyphPathData">M28.718018,0L32,3.2819897 10.666016,24.616999 0,13.951997 3.2810059,10.670007 10.666016,18.055033z</x:String>
      <StaticResource x:Key="CheckBoxStateCircleFillUnchecked" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="CheckBoxStateCircleFillChecked" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="CheckBoxStateCircleOpacityPointerOver" ResourceKey="HoverOpacity" />
      <StaticResource x:Key="CheckBoxStateCircleOpacityPressed" ResourceKey="PressedOpacity" />
      <StaticResource x:Key="CheckBoxStateCircleOpacityFocused" ResourceKey="FocusedOpacity" />
      <x:Double x:Key="CheckBoxFocusAreaSize">40</x:Double>
      <x:Double x:Key="CheckBoxCheckAreaSize">18</x:Double>
      <GridLength x:Key="CheckBoxCheckAreaLength">40</GridLength>
      <CornerRadius x:Key="CheckBoxCheckAreaCornerRadius">2</CornerRadius>
      <Thickness x:Key="CheckBoxCheckAreaBorderThickness">2</Thickness>
      <Thickness x:Key="CheckBoxCheckAreaPadding">8,0,0,0</Thickness>
      <StaticResource x:Key="ComboBoxItemForeground" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxItemForegroundPressed" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxItemForegroundPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxItemForegroundDisabled" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxItemForegroundSelected" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxItemForegroundSelectedUnfocused" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxItemForegroundSelectedPressed" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxItemForegroundSelectedPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxItemForegroundSelectedDisabled" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxItemBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxItemBackgroundPressed" ResourceKey="OnSurfaceVariantHoverBrush" />
      <StaticResource x:Key="ComboBoxItemBackgroundPointerOver" ResourceKey="OnSurfaceVariantHoverBrush" />
      <StaticResource x:Key="ComboBoxItemBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxItemBackgroundSelected" ResourceKey="PrimarySelectedBrush" />
      <StaticResource x:Key="ComboBoxItemBackgroundSelectedUnfocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxItemBackgroundSelectedPressed" ResourceKey="PrimarySelectedBrush" />
      <StaticResource x:Key="ComboBoxItemBackgroundSelectedPointerOver" ResourceKey="PrimarySelectedBrush" />
      <StaticResource x:Key="ComboBoxItemBackgroundSelectedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxItemBorderBrush" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxItemBorderBrushPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxItemBorderBrushPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxItemBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxItemBorderBrushSelected" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxItemBorderBrushSelectedUnfocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxItemBorderBrushSelectedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxItemBorderBrushSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxItemBorderBrushSelectedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxBorderBrush" ResourceKey="OutlineBrush" />
      <StaticResource x:Key="ComboBoxBorderBrushPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxBorderBrushPressed" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxBorderBrushDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="ComboBoxBorderBrushOpened" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ComboBoxDropDownGlyphForeground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxDropDownGlyphForegroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxDropDownGlyphForegroundFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxDropDownGlyphForegroundFocusedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxDropDownForeground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxDropDownBorderBrush" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxDropDownBackground" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="ComboBoxDropDownBackgroundPointerOver" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="ComboBoxDropDownBackgroundPointerPressed" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="ComboBoxDropDownBackgroundPressed" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="ComboBoxDropDownBackgroundFocused" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="ComboBoxDropDownBackgroundFocusedPressed" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="ComboBoxEditableDropDownGlyphForeground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxItemPillFillBrush" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxBackgroundPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxBackgroundUnfocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxBackgroundFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxBackgroundFocusedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ComboBoxForeground" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxForegroundPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxForegroundPressed" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="ComboBoxForegroundFocused" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxForegroundFocusedPressed" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="ComboBoxPlaceHolderForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="ComboBoxPlaceHolderForegroundPointerOver" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="ComboBoxPlaceHolderForegroundPressed" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="ComboBoxPlaceHolderForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="ComboBoxPlaceHolderForegroundFocused" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="ComboBoxPlaceHolderForegroundFocusedPressed" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="ComboBoxLeadingIconForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="ComboBoxLeadingIconForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="ComboBoxArrowForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="ComboBoxArrowForegroundOpened" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="ComboBoxUpperPlaceHolderForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="ComboBoxUpperPlaceHolderForegroundPointerOver" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="ComboBoxUpperPlaceHolderForegroundPressed" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="ComboBoxUpperPlaceHolderForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="ComboBoxUpperPlaceHolderForegroundFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ComboBoxUpperPlaceHolderForegroundFocusedPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ComboBoxUpperPlaceHolderForegroundOpened" ResourceKey="PrimaryBrush" />
      <CornerRadius x:Key="ComboBoxCornerRadius">4</CornerRadius>
      <x:Double x:Key="ComboBoxHeight">50</x:Double>
      <x:Double x:Key="ComboBoxMinHeight">56</x:Double>
      <x:Double x:Key="ComboBoxLeadingIconWidth">20</x:Double>
      <x:Double x:Key="ComboBoxDownGlyphWidth">10</x:Double>
      <x:Double x:Key="ComboBoxUpGlyphWidth">10</x:Double>
      <x:Double x:Key="ComboBoxDownGlyphHeight">5</x:Double>
      <x:Double x:Key="ComboBoxUpGlyphHeight">5</x:Double>
      <Thickness x:Key="ComboBoxDownGlyphMargin">7,0</Thickness>
      <Thickness x:Key="ComboBoxUpGlyphMargin">7,0</Thickness>
      <Thickness x:Key="ComboBoxLeadingIconMargin">2,0,18,0</Thickness>
      <Thickness x:Key="ComboBoxBorderThickness">1</Thickness>
      <Thickness x:Key="ComboBoxOpenedBorderThickness">2</Thickness>
      <Thickness x:Key="ComboBoxPadding">16,0</Thickness>
      <StaticResource x:Key="DatePickerFlyoutButtonBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="DatePickerFlyoutPresenterBackground" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="DatePickerFlyoutPresenterBorderBrush" ResourceKey="OnSurfaceFocusedBrush" />
      <StaticResource x:Key="DatePickerFlyoutPresenterSpacerFill" ResourceKey="OnSurfaceFocusedBrush" />
      <StaticResource x:Key="DatePickerFlyoutPresenterHighlightFill" ResourceKey="PrimarySelectedBrush" />
      <StaticResource x:Key="DatePickerFlyoutPresenterCornerRadius" ResourceKey="OverlayCornerRadius" />
      <StaticResource x:Key="DatePickerButtonBackground" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="DatePickerButtonBackgroundPointerOver" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="DatePickerButtonBackgroundPressed" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="DatePickerButtonBackgroundDisabled" ResourceKey="PrimaryFocusedBrush" />
      <StaticResource x:Key="DatePickerButtonForeground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="DatePickerButtonForegroundPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="DatePickerButtonForegroundPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="DatePickerButtonForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="DatePickerPlaceholderTextForeground" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="DatePickerButtonDateTextForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="DatePickerButtonDateTextForegroundPointerOver" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="DatePickerButtonDateTextForegroundPressed" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="DatePickerButtonDateTextForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="DatePickerButtonBorderBrush" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="DatePickerButtonBorderBrushPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="DatePickerButtonBorderBrushPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="DatePickerButtonBorderBrushDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="DatePickerFlyoutPresenterFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <StaticResource x:Key="DatePickerFlyoutPresenterFontSize" ResourceKey="ControlContentThemeFontSize" />
      <x:Double x:Key="DatePickerFlyoutBorderThickness">1</x:Double>
      <x:Double x:Key="DatePickerSpacerThemeWidth">1</x:Double>
      <x:Double x:Key="DatePickerHeight">53</x:Double>
      <x:Double x:Key="DatePickerFlyoutElevation">8</x:Double>
      <x:Double x:Key="DatePickerFlyoutButtonOpacityPressed">0.65</x:Double>
      <x:Double x:Key="DatePickerFlyoutButtonOpacityDisabled">0.65</x:Double>
      <x:Double x:Key="DatePickerFlyoutPresenterWidth">296</x:Double>
      <x:Double x:Key="DatePickerFlyoutPresenterMinWidth">296</x:Double>
      <x:Double x:Key="DatePickerFlyoutPresenterMaxHeight">398</x:Double>
      <x:Double x:Key="DatePickerFlyoutPresenterAcceptDismissHostGridHeight">41</x:Double>
      <x:Double x:Key="DatePickerFlyoutPresenterHighlightHeight">40</x:Double>
      <x:Double x:Key="DatePickerButtonBottomBorderHeight">2</x:Double>
      <x:Double x:Key="DatePickerButtonContentHeight">24</x:Double>
      <Thickness x:Key="DatePickerButtonHeaderMargin">10,8,10,0</Thickness>
      <Thickness x:Key="DatePickerButtonPlaceholderMargin">4,0,0,0</Thickness>
      <Thickness x:Key="DatePickerButtonContentMargin">6,24,10,0</Thickness>
      <Thickness x:Key="DatePickerHostPadding">24,24,8,8</Thickness>
      <Thickness x:Key="DatePickerFlyoutButtonPadding">0</Thickness>
      <CornerRadius x:Key="DatePickerCornerRadius">4,4,0,0</CornerRadius>
      <StaticResource x:Key="FabForeground" ResourceKey="OnPrimaryContainerBrush" />
      <StaticResource x:Key="FabForegroundPressed" ResourceKey="OnPrimaryContainerBrush" />
      <StaticResource x:Key="FabForegroundPointerOver" ResourceKey="OnPrimaryContainerBrush" />
      <StaticResource x:Key="FabForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="FabBackground" ResourceKey="PrimaryContainerBrush" />
      <StaticResource x:Key="FabBackgroundPressed" ResourceKey="PrimaryContainerBrush" />
      <StaticResource x:Key="FabBackgroundPointerOver" ResourceKey="PrimaryContainerBrush" />
      <StaticResource x:Key="FabBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FabStateOverlayBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FabStateOverlayBackgroundPointerOver" ResourceKey="OnPrimaryContainerHoverBrush" />
      <StaticResource x:Key="FabStateOverlayBackgroundFocused" ResourceKey="OnPrimaryContainerFocusedBrush" />
      <StaticResource x:Key="FabStateOverlayBackgroundPressed" ResourceKey="OnPrimaryContainerPressedBrush" />
      <StaticResource x:Key="FabStateOverlayBackgroundDisabled" ResourceKey="OnSurfaceDisabledLowBrush" />
      <StaticResource x:Key="FabSurfaceForeground" ResourceKey="OnPrimaryContainerBrush" />
      <StaticResource x:Key="FabSurfaceForegroundPressed" ResourceKey="OnPrimaryContainerBrush" />
      <StaticResource x:Key="FabSurfaceForegroundPointerOver" ResourceKey="OnPrimaryContainerBrush" />
      <StaticResource x:Key="FabSurfaceForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="FabSurfaceBackground" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="FabSurfaceBackgroundPressed" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="FabSurfaceBackgroundPointerOver" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="FabSurfaceBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FabSurfaceStateOverlayBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FabSurfaceStateOverlayBackgroundPointerOver" ResourceKey="PrimaryHoverBrush" />
      <StaticResource x:Key="FabSurfaceStateOverlayBackgroundFocused" ResourceKey="PrimaryFocusedBrush" />
      <StaticResource x:Key="FabSurfaceStateOverlayBackgroundPressed" ResourceKey="PrimaryPressedBrush" />
      <StaticResource x:Key="FabSurfaceStateOverlayBackgroundDisabled" ResourceKey="OnSurfaceDisabledLowBrush" />
      <StaticResource x:Key="FabSecondaryForeground" ResourceKey="OnSecondaryContainerBrush" />
      <StaticResource x:Key="FabSecondaryForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="FabSecondaryForegroundPointerOver" ResourceKey="OnSecondaryContainerBrush" />
      <StaticResource x:Key="FabSecondaryForegroundPressed" ResourceKey="OnSecondaryContainerBrush" />
      <StaticResource x:Key="FabSecondaryBackground" ResourceKey="SecondaryContainerBrush" />
      <StaticResource x:Key="FabSecondaryBackgroundPointerOver" ResourceKey="SecondaryContainerBrush" />
      <StaticResource x:Key="FabSecondaryBackgroundPressed" ResourceKey="SecondaryContainerBrush" />
      <StaticResource x:Key="FabSecondaryBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FabSecondaryStateOverlayBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FabSecondaryStateOverlayBackgroundPointerOver" ResourceKey="OnSecondaryContainerHoverBrush" />
      <StaticResource x:Key="FabSecondaryStateOverlayBackgroundFocused" ResourceKey="OnSecondaryContainerFocusedBrush" />
      <StaticResource x:Key="FabSecondaryStateOverlayBackgroundPressed" ResourceKey="OnSecondaryContainerPressedBrush" />
      <StaticResource x:Key="FabSecondaryStateOverlayBackgroundDisabled" ResourceKey="OnSurfaceDisabledLowBrush" />
      <StaticResource x:Key="FabTertiaryForeground" ResourceKey="OnTertiaryContainerBrush" />
      <StaticResource x:Key="FabTertiaryForegroundPointerOver" ResourceKey="OnTertiaryContainerBrush" />
      <StaticResource x:Key="FabTertiaryForegroundPressed" ResourceKey="OnTertiaryContainerBrush" />
      <StaticResource x:Key="FabTertiaryForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="FabTertiaryBackground" ResourceKey="TertiaryContainerBrush" />
      <StaticResource x:Key="FabTertiaryBackgroundPointerOver" ResourceKey="TertiaryContainerBrush" />
      <StaticResource x:Key="FabTertiaryBackgroundPressed" ResourceKey="TertiaryContainerBrush" />
      <StaticResource x:Key="FabTertiaryBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FabTertiaryStateOverlayBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FabTertiaryStateOverlayBackgroundFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FabTertiaryStateOverlayBackgroundPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="FabTertiaryStateOverlayBackgroundDisabled" ResourceKey="OnSurfaceDisabledLowBrush" />
      <Thickness x:Key="MaterialFabPadding">20</Thickness>
      <x:Double x:Key="MaterialFabContentWidthOrHeight">16</x:Double>
      <CornerRadius x:Key="MaterialFabCornerRadius">16</CornerRadius>
      <Thickness x:Key="MaterialSmallFabPadding">12</Thickness>
      <x:Double x:Key="MaterialSmallFabContentWidthOrHeight">16</x:Double>
      <CornerRadius x:Key="MaterialSmallFabCornerRadius">12</CornerRadius>
      <Thickness x:Key="MaterialLargeFabPadding">36</Thickness>
      <x:Double x:Key="MaterialLargeFabContentWidthOrHeight">24</x:Double>
      <CornerRadius x:Key="MaterialLargeFabCornerRadius">28</CornerRadius>
      <x:Double x:Key="MaterialFabIconTextPadding">12</x:Double>
      <StaticResource x:Key="HyperlinkButtonForeground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="HyperlinkButtonForegroundPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="HyperlinkButtonForegroundPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="HyperlinkButtonForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="HyperlinkButtonBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="HyperlinkButtonBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="HyperlinkButtonBackgroundPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="HyperlinkButtonBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="HyperlinkButtonBorderBrush" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="HyperlinkButtonBorderBrushPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="HyperlinkButtonBorderBrushPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="HyperlinkButtonBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="HyperlinkButtonFontSize" ResourceKey="LabelLargeFontSize" />
      <StaticResource x:Key="HyperlinkButtonFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <x:Double x:Key="HyperlinkButtonBackgroundOpacity">1</x:Double>
      <StaticResource x:Key="HyperlinkButtonBackgroundOpacityPointerOver" ResourceKey="MediumOpacity" />
      <StaticResource x:Key="HyperlinkButtonBackgroundOpacityPressed" ResourceKey="LowOpacity" />
      <x:Double x:Key="HyperlinkButtonBackgroundOpacityDisabled">1</x:Double>
      <Thickness x:Key="HyperlinkButtonPadding">0</Thickness>
      <Color x:Key="MediaTransportControlsBackgroundColor">#000000</Color>
      <SolidColorBrush x:Key="MediaTransportControlsBackgroundBrush" Color="{ThemeResource MediaTransportControlsBackgroundColor}" Opacity="0.75" />
      <Color x:Key="MediaTransportControlsAppBarButtonColor">#FFFFFF</Color>
      <SolidColorBrush x:Key="MediaTransportControlsAppBarButtonBrush" Color="{ThemeResource MediaTransportControlsAppBarButtonColor}" />
      <Thickness x:Key="MediaTransportControlsTitleSafeBounds">48,0,48,27</Thickness>
      <StaticResource x:Key="MediaTransportControlsCommandBarBackground" ResourceKey="MediaTransportControlsBackgroundBrush" />
      <StaticResource x:Key="MediaTransportControlsPanelBackground" ResourceKey="MediaTransportControlsBackgroundBrush" />
      <StaticResource x:Key="MediaTransportControlsFlyoutBackground" ResourceKey="MediaTransportControlsBackgroundBrush" />
      <StaticResource x:Key="MediaTransportControlsThumbBorderBackground" ResourceKey="MediaTransportControlsBackgroundBrush" />
      <StaticResource x:Key="MediaTransportControlsFillTimeElapsedText" ResourceKey="MediaTransportControlsAppBarButtonBrush" />
      <StaticResource x:Key="MediaTransportControlsFillMediaText" ResourceKey="MediaTransportControlsAppBarButtonBrush" />
      <StaticResource x:Key="MediaTransportControlsBorderBrush" ResourceKey="MediaTransportControlsBackgroundBrush" />
      <Thickness x:Key="MediaTransportControlsMargin">0</Thickness>
      <Thickness x:Key="MediaTransportControlsProgressSliderMargin">7,2,7,1</Thickness>
      <Thickness x:Key="MediaTransportControlsProgressSliderCompactMargin">12,-1,8,1</Thickness>
      <x:Double x:Key="MediaTransportControlsBorderThickness">1</x:Double>
      <x:Double x:Key="MediaTransportControlsAppBarButtonHeight">40</x:Double>
      <x:Double x:Key="MediaTransportControlsAppBarButtonWidth">40</x:Double>
      <x:Double x:Key="MediaTransportControlsSliderHeight">32</x:Double>
      <x:Double x:Key="MediaTransportControlsSliderWidth">190</x:Double>
      <x:Double x:Key="MediaTransportControlsMinWidth">296</x:Double>
      <x:Double x:Key="MediaTransportControlsMaxWidth">720</x:Double>
      <CornerRadius x:Key="MaterialNavigationViewSplitViewCornerRadius">0,14,14,0</CornerRadius>
      <CornerRadius x:Key="MaterialNavigationViewContentGridCornerRadius">14,0,0,14</CornerRadius>
      <x:Double x:Key="MaterialNavigationViewButtonWidth">56</x:Double>
      <CornerRadius x:Key="MaterialNavigationViewButtonCornerRadius">28</CornerRadius>
      <x:Double x:Key="MaterialNavigationViewButtonIconLength">24</x:Double>
      <x:Double x:Key="MaterialNavigationViewButtonIconSymbolFontSize">24</x:Double>
      <Thickness x:Key="MaterialNavigationViewButtonMarginWhenStackedVertically">12,0</Thickness>
      <x:Double x:Key="MaterialNavigationItemHeight">56</x:Double>
      <CornerRadius x:Key="MaterialNavigationViewItemCornerRadius">28</CornerRadius>
      <CornerRadius x:Key="MaterialNavigationViewItemCornerRadiusLeftOnly">28,0,0,28</CornerRadius>
      <Thickness x:Key="MaterialNavigationItemLeftMargin">12,0</Thickness>
      <x:Double x:Key="MaterialNavigationItemIconLength">24</x:Double>
      <Thickness x:Key="MaterialNavigationItemContentMargin">12,0,0,0</Thickness>
      <Thickness x:Key="MaterialNavigationItemContentMarginWithoutIcon">0</Thickness>
      <Thickness x:Key="NavigationViewAutoSuggestBoxMargin">16,0</Thickness>
      <Thickness x:Key="TopNavigationViewAutoSuggestBoxMargin">4,0</Thickness>
      <x:Double x:Key="PaneToggleButtonHeight">56</x:Double>
      <x:Double x:Key="PaneToggleButtonWidth">80</x:Double>
      <x:Double x:Key="NavigationViewCompactPaneLength">80</x:Double>
      <x:Double x:Key="NavigationViewIconBoxWidth">40</x:Double>
      <x:Double x:Key="NavigationViewTopPaneHeight">48</x:Double>
      <x:Double x:Key="NavigationViewAutoSuggestAreaHeight">40</x:Double>
      <x:Double x:Key="TopNavigationViewPaneCustomContentMinWidth">80</x:Double>
      <x:Double x:Key="TopNavigationViewOverflowButtonWidth">40</x:Double>
      <x:Double x:Key="TopNavigationViewOverflowButtonHeight">40</x:Double>
      <x:Double x:Key="TopNavigationViewSettingsButtonWidth">40</x:Double>
      <x:Double x:Key="TopNavigationViewSettingsButtonHeight">40</x:Double>
      <x:Double x:Key="NavigationViewItemOnLeftMinHeight">56</x:Double>
      <x:Double x:Key="NavigationViewPaneHeaderRowMinHeight">56</x:Double>
      <x:Double x:Key="NavigationViewItemOnLeftIconBoxHeight">24</x:Double>
      <x:Double x:Key="NavigationViewSelectionIndicatorWidth">3</x:Double>
      <x:Double x:Key="NavigationViewSelectionIndicatorHeight">24</x:Double>
      <x:Double x:Key="NavigationViewSelectionIndicatorRadius">2</x:Double>
      <x:Double x:Key="NavigationViewItemSeparatorHeight">1</x:Double>
      <x:Double x:Key="TopNavigationViewItemSeparatorWidth">1</x:Double>
      <Thickness x:Key="NavigationViewToggleBorderThickness">0</Thickness>
      <Thickness x:Key="NavigationViewItemBorderThickness">1</Thickness>
      <Thickness x:Key="NavigationViewItemOnLeftIconBoxMargin">3</Thickness>
      <Thickness x:Key="NavigationViewItemButtonMargin">12,0</Thickness>
      <Thickness x:Key="NavigationViewItemInnerHeaderMargin">16,0</Thickness>
      <Thickness x:Key="TopNavigationViewItemInnerHeaderMargin">12,0</Thickness>
      <Thickness x:Key="NavigationViewMinimalHeaderMargin">-24,44,0,0</Thickness>
      <Thickness x:Key="NavigationViewButtonHolderGridMargin">0</Thickness>
      <Thickness x:Key="NavigationViewPaneContentGridMargin">-1,3</Thickness>
      <Thickness x:Key="NavigationViewContentGridBorderThickness">1,1,0,0</Thickness>
      <Thickness x:Key="NavigationViewMinimalContentGridBorderThickness">0,1,0,0</Thickness>
      <Thickness x:Key="TopNavigationViewContentGridBorderThickness">0,1,0,0</Thickness>
      <Thickness x:Key="TopNavigationViewTopNavGridMargin">4,0</Thickness>
      <Thickness x:Key="NavigationViewBorderThickness">1</Thickness>
      <Thickness x:Key="NavigationViewHeaderMargin">56,44,0,0</Thickness>
      <Thickness x:Key="NavigationViewContentPresenterMargin">0</Thickness>
      <Thickness x:Key="NavigationViewContentMargin">0</Thickness>
      <Thickness x:Key="NavigationViewMinimalContentMargin">0</Thickness>
      <Thickness x:Key="TopNavigationViewContentMargin">0</Thickness>
      <Thickness x:Key="NavigationViewPaneTitlePresenterMargin">8,4,0,0</Thickness>
      <Thickness x:Key="NavigationViewItemMargin">0</Thickness>
      <Thickness x:Key="TopNavigationViewItemMargin">0</Thickness>
      <Thickness x:Key="NavigationViewItemSeparatorMargin">0,3,0,4</Thickness>
      <Thickness x:Key="NavigationViewCompactItemSeparatorMargin">0,3,0,4</Thickness>
      <Thickness x:Key="TopNavigationViewItemSeparatorMargin">3,0,4,0</Thickness>
      <Thickness x:Key="TopNavigationViewOverflowButtonMargin">0</Thickness>
      <Thickness x:Key="NavigationViewItemContentPresenterMargin">4,-1,8,-1</Thickness>
      <Thickness x:Key="NavigationViewCompactItemContentPresenterMargin">0,0,0,0</Thickness>
      <Thickness x:Key="TopNavigationViewItemContentPresenterMargin">8,-1,12,-1</Thickness>
      <Thickness x:Key="TopNavigationViewItemContentOnlyContentPresenterMargin">12,0</Thickness>
      <Thickness x:Key="NavigationViewItemExpandChevronMargin">0,0,-14,0</Thickness>
      <Thickness x:Key="TopNavigationViewItemExpandChevronMargin">-16,0,0,0</Thickness>
      <Thickness x:Key="TopNavigationViewItemIconOnlyExpandChevronMargin">0,0,0,0</Thickness>
      <Thickness x:Key="TopNavigationViewItemContentOnlyExpandChevronMargin">-12,0,0,0</Thickness>
      <Thickness x:Key="TopNavigationViewItemOnOverflowContentPresenterMargin">12,0,20,0</Thickness>
      <Thickness x:Key="TopNavigationViewItemOnOverflowNoIconContentPresenterMargin">16,0,20,0</Thickness>
      <Thickness x:Key="TopNavigationViewItemOnOverflowExpandChevronMargin">-4,0,-8,0</Thickness>
      <Thickness x:Key="TopNavigationViewItemOnOverflowExpandChevronPadding">12,0,12,0</Thickness>
      <CornerRadius x:Key="NavigationViewContentGridCornerRadius">8,0,0,0</CornerRadius>
      <CornerRadius x:Key="TopNavigationViewContentGridCornerRadius">0</CornerRadius>
      <CornerRadius x:Key="NavigationViewMinimalContentGridCornerRadius">0</CornerRadius>
      <Thickness x:Key="TopNavigationViewOverflowMenuPadding">0,8</Thickness>
      <Thickness x:Key="NavigationViewItemChildrenMenuFlyoutPadding">0,8</Thickness>
      <x:Double x:Key="NavigationViewItemExpandedGlyphFontSize">8</x:Double>
      <x:String x:Key="NavigationViewItemExpandedGlyph">&#xE70D;</x:String>
      <x:Double x:Key="SplitViewOpenPaneThemeLength">320</x:Double>
      <x:Double x:Key="SplitViewCompactPaneThemeLength">48</x:Double>
      <Thickness x:Key="SplitViewLeftBorderThemeThickness">0,0,1,0</Thickness>
      <Thickness x:Key="SplitViewRightBorderThemeThickness">1,0,0,0</Thickness>
      <StaticResource x:Key="NavigationViewSplitViewLightDismissOverlayBackground" ResourceKey="SystemControlPageBackgroundMediumAltMediumBrush" />
      <x:String x:Key="SplitViewPaneAnimationOpenDuration">00:00:00.2</x:String>
      <x:String x:Key="SplitViewPaneAnimationOpenPreDuration">00:00:00.19999</x:String>
      <x:String x:Key="SplitViewPaneAnimationCloseDuration">00:00:00.1</x:String>
      <CornerRadius x:Key="SplitViewPaneRootCornerRadius">0</CornerRadius>
      <StaticResource x:Key="NavigationViewBackground" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="NavigationViewDefaultPaneBackground" ResourceKey="SystemControlPageBackgroundChromeLowBrush" />
      <StaticResource x:Key="NavigationViewPaneBackground" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="NavigationViewTopPaneBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewDefaultPaneBorderBrush" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="NavigationViewButtonForeground" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="NavigationViewButtonForegroundPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="NavigationViewButtonForegroundPressed" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="NavigationViewButtonForegroundDisabled" ResourceKey="OnSurfaceDisabledLowBrush" />
      <StaticResource x:Key="NavigationViewButtonBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewButtonBackgroundPointerOver" ResourceKey="PrimaryHoverBrush" />
      <StaticResource x:Key="NavigationViewButtonBackgroundPressed" ResourceKey="PrimaryPressedBrush" />
      <StaticResource x:Key="NavigationViewButtonBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewButtonRippleFeedback" ResourceKey="PrimaryPressedBrush" />
      <StaticResource x:Key="NavigationViewItemBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBackgroundPointerOver" ResourceKey="PrimaryHoverBrush" />
      <StaticResource x:Key="NavigationViewItemBackgroundPressed" ResourceKey="PrimaryPressedBrush" />
      <StaticResource x:Key="NavigationViewItemBackgroundDisabled" ResourceKey="OnSurfaceDisabledLowBrush" />
      <StaticResource x:Key="NavigationViewItemBackgroundSelected" ResourceKey="PrimarySelectedBrush" />
      <StaticResource x:Key="NavigationViewItemBackgroundSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBackgroundSelectedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBackgroundSelectedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemForeground" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="NavigationViewItemForegroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemForegroundPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemForegroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemForegroundSelected" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemForegroundSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemForegroundSelectedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemForegroundSelectedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBorderBrush" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBorderBrushPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBorderBrushPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBorderBrushSelected" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBorderBrushSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBorderBrushSelectedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBorderBrushSelectedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemSeparatorForeground" ResourceKey="OnSurfacePressedBrush" />
      <StaticResource x:Key="NavigationViewItemHeaderForeground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewSelectionIndicatorForeground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemRippleFeedback" ResourceKey="PrimaryPressedBrush" />
      <StaticResource x:Key="TopNavigationViewItemForeground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemForegroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemForegroundPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemForegroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemForegroundSelected" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemForegroundSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemForegroundSelectedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemBackgroundPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemBackgroundSelected" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemBackgroundSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemBackgroundSelectedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemSeparatorForeground" ResourceKey="SystemControlTransparentBrush" />
      <x:String x:Key="PasswordBoxRevealGlyphPathData">M11 0.5C6 0.5 1.73 3.61 0 8C1.73 12.39 6 15.5 11 15.5C16 15.5 20.27 12.39 22 8C20.27 3.61 16 0.5 11 0.5ZM11 13C8.24 13 6 10.76 6 8C6 5.24 8.24 3 11 3C13.76 3 16 5.24 16 8C16 10.76 13.76 13 11 13ZM11 5C9.34 5 8 6.34 8 8C8 9.66 9.34 11 11 11C12.66 11 14 9.66 14 8C14 6.34 12.66 5 11 5Z</x:String>
      <StaticResource x:Key="PasswordBoxRevealButtonForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="PasswordBoxLeadingIconForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="PasswordBoxLeadingIconForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="FilledPasswordBoxBackground" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="FilledPasswordBoxBackgroundPointerOver" ResourceKey="OnSurfaceVariantHoverBrush" />
      <StaticResource x:Key="FilledPasswordBoxBackgroundFocused" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="FilledPasswordBoxBackgroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="FilledPasswordBoxBorderBrush" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="FilledPasswordBoxBorderBrushPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="FilledPasswordBoxBorderBrushFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="FilledPasswordBoxBorderBrushDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="FilledPasswordBoxForeground" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="FilledPasswordBoxForegroundPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="FilledPasswordBoxForegroundFocused" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="FilledPasswordBoxForegroundDisabled" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="FilledPasswordBoxForegroundOpacityDisabled" ResourceKey="LowOpacity" />
      <StaticResource x:Key="FilledPasswordBoxPlaceholderForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="FilledPasswordBoxPlaceholderForegroundPointerOver" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="FilledPasswordBoxPlaceholderForegroundFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="FilledPasswordBoxPlaceholderForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="FilledPasswordBoxRevealButtonForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="FilledPasswordBoxFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <StaticResource x:Key="FilledPasswordBoxFontWeight" ResourceKey="BodyLargeFontWeight" />
      <StaticResource x:Key="FilledPasswordBoxFontSize" ResourceKey="BodyLargeFontSize" />
      <StaticResource x:Key="FilledPasswordBoxCharacterSpacing" ResourceKey="BodyLargeCharacterSpacing" />
      <StaticResource x:Key="OutlinedPasswordBoxBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxBackgroundFocused" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxBorderBrush" ResourceKey="OutlineBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxBorderBrushPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxBorderBrushFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxBorderBrushDisabled" ResourceKey="OnSurfaceDisabledLowBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxForeground" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxForegroundPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxForegroundFocused" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxForegroundDisabled" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxForegroundOpacityDisabled" ResourceKey="LowOpacity" />
      <StaticResource x:Key="OutlinedPasswordBoxPlaceholderForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxPlaceholderForegroundPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxPlaceholderForegroundFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxPlaceholderForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="OutlinedPasswordBoxFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <StaticResource x:Key="OutlinedPasswordBoxFontWeight" ResourceKey="BodyLargeFontWeight" />
      <StaticResource x:Key="OutlinedPasswordBoxFontSize" ResourceKey="BodyLargeFontSize" />
      <StaticResource x:Key="OutlinedPasswordBoxCharacterSpacing" ResourceKey="BodyLargeCharacterSpacing" />
      <CornerRadius x:Key="OutlinedPasswordBoxCornerRadius">4</CornerRadius>
      <x:Double x:Key="OutlinedPasswordBoxMinHeight">58</x:Double>
      <Thickness x:Key="OutlinedPasswordBoxBorderPadding">1</Thickness>
      <Thickness x:Key="OutlinedPasswordBoxBorderThickness">1</Thickness>
      <Thickness x:Key="OutlinedPasswordBoxPadding">16,4,8,4</Thickness>
      <Thickness x:Key="OutlinedPasswordBoxBorderThicknessPointerOver">1</Thickness>
      <Thickness x:Key="OutlinedPasswordBoxBorderPaddingPointerOver">1</Thickness>
      <Thickness x:Key="OutlinedPasswordBoxBorderThicknessFocused">2</Thickness>
      <Thickness x:Key="OutlinedPasswordBoxBorderPaddingFocused">1</Thickness>
      <CornerRadius x:Key="FilledPasswordBoxCornerRadius">4,4,0,0</CornerRadius>
      <x:Double x:Key="FilledPasswordBoxMinHeight">56</x:Double>
      <x:Double x:Key="FilledPasswordBoxBorderHeightPointerOver">2</x:Double>
      <x:Double x:Key="FilledPasswordBoxBorderHeightFocused">2</x:Double>
      <Thickness x:Key="FilledPasswordBoxPadding">16,4,8,4</Thickness>
      <StaticResource x:Key="PipsPagerSelectionIndicatorBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerSelectionIndicatorBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerSelectionIndicatorBackgroundPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerSelectionIndicatorBackgroundSelected" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerSelectionIndicatorBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerSelectionIndicatorBorderBrush" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerSelectionIndicatorBorderBrushPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerSelectionIndicatorBorderBrushPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerSelectionIndicatorBorderBrushSelected" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerSelectionIndicatorBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerSelectionIndicatorForeground" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="PipsPagerSelectionIndicatorForegroundPointerOver" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="PipsPagerSelectionIndicatorForegroundPressed" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="PipsPagerSelectionIndicatorForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="PipsPagerSelectionIndicatorForegroundFocused" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="PipsPagerSelectionIndicatorForegroundSelected" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="MaterialPipsPagerVisualStateEllipseFill" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="MaterialPipsPagerVisualStateEllipseFillPointerOver" ResourceKey="PrimaryHoverBrush" />
      <StaticResource x:Key="MaterialPipsPagerVisualStateEllipseFillPressed" ResourceKey="PrimaryPressedBrush" />
      <StaticResource x:Key="MaterialPipsPagerVisualStateEllipseFillFocused" ResourceKey="PrimaryFocusedBrush" />
      <StaticResource x:Key="PipsPagerNavigationButtonBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerNavigationButtonBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerNavigationButtonBackgroundPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerNavigationButtonBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerNavigationButtonBorderBrush" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerNavigationButtonBorderBrushPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerNavigationButtonBorderBrushPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerNavigationButtonBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="PipsPagerNavigationButtonForeground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="PipsPagerNavigationButtonForegroundPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="PipsPagerNavigationButtonForegroundPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="PipsPagerNavigationButtonForegroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="MaterialPipsPagerNavigationButtonVisualStateEllipseFill" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="MaterialPipsPagerNavigationButtonVisualStateEllipseFillPointerOver" ResourceKey="PrimaryHoverBrush" />
      <StaticResource x:Key="MaterialPipsPagerNavigationButtonVisualStateEllipseFillPressed" ResourceKey="PrimaryPressedBrush" />
      <StaticResource x:Key="MaterialPipsPagerNavigationButtonVisualStateEllipseFillFocused" ResourceKey="PrimaryFocusedBrush" />
      <StaticResource x:Key="MaterialPipsPagerNavigationButtonVisualStateEllipseFillUnfocused" ResourceKey="PrimaryUnfocusedBrush" />
      <x:Double x:Key="PipsPagerHorizontalOrientationButtonWidth">12</x:Double>
      <x:Double x:Key="PipsPagerHorizontalOrientationButtonHeight">12</x:Double>
      <x:Double x:Key="PipsPagerVerticalOrientationButtonWidth">12</x:Double>
      <x:Double x:Key="PipsPagerVerticalOrientationButtonHeight">12</x:Double>
      <Thickness x:Key="PipsPagerButtonBorderThickness">0</Thickness>
      <Thickness x:Key="PipsPagerNavigationButtonBorderThickness">0</Thickness>
      <x:String x:Key="PipsPagerPreviousPageButtonData">M3.33681 0.322148C3.63156 -0.107383 4.36844 -0.107382 4.66319 0.322148L7.89626 5.03356C8.19101 5.46309 7.82257 6 7.23307 6L0.766932 6C0.177427 6 -0.191014 5.46309 0.103739 5.03356L3.33681 0.322148Z</x:String>
      <x:String x:Key="PipsPagerNextPageButtonData">M4.66319 5.67785C4.36844 6.10738 3.63156 6.10738 3.33681 5.67785L0.103738 0.966444C-0.191015 0.536913 0.177425 6.83871e-07 0.766931 6.32335e-07L7.23307 6.70473e-08C7.82257 1.55111e-08 8.19101 0.536912 7.89626 0.966443L4.66319 5.67785Z</x:String>
      <x:Double x:Key="PipsPagerNavigationButtonHeight">40</x:Double>
      <x:Double x:Key="PipsPagerNavigationButtonWidth">40</x:Double>
      <Thickness x:Key="PipsPagerNavigationButtonPadding">4</Thickness>
      <x:Double x:Key="PipsPagerNavigationVisualStatesEllipseWidth">12</x:Double>
      <x:Double x:Key="PipsPagerNavigationVisualStatesEllipseHeight">12</x:Double>
      <x:Double x:Key="PipsPagerSelectedEllipseSize">8</x:Double>
      <x:Double x:Key="PipsPagerNormalEllipseSize">8</x:Double>
      <StaticResource x:Key="ProgressBarForeground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ProgressBarBackground" ResourceKey="SurfaceVariantBrush" />
      <x:Double x:Key="ProgressBarMinWidth">250</x:Double>
      <x:Double x:Key="ProgressBarHeight">4</x:Double>
      <StaticResource x:Key="ProgressRingForeground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ProgressRingBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="RadioButtonForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="RadioButtonForegroundPointerOver" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="RadioButtonForegroundPressed" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="RadioButtonForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseStroke" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseStrokePointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseStrokePressed" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseStrokeDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseCheckedStroke" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseCheckedStrokePointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseCheckedStrokePressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseCheckedStrokeDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseFill" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseFillPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseFillPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseFillDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseCheckedFill" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseCheckedFillPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseCheckedFillPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="RadioButtonOuterEllipseCheckedFillDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="RadioButtonStateCircleBackgroundUnchecked" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="RadioButtonStateCircleBackgroundChecked" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="RadioButtonStateCircleOpacityPointerOver" ResourceKey="HoverOpacity" />
      <StaticResource x:Key="RadioButtonStateCircleOpacityPressed" ResourceKey="PressedOpacity" />
      <StaticResource x:Key="RadioButtonStateCircleOpacityFocused" ResourceKey="FocusedOpacity" />
      <StaticResource x:Key="RadioButtonFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <StaticResource x:Key="RadioButtonFontWeight" ResourceKey="BodySmallFontWeight" />
      <StaticResource x:Key="RadioButtonFontSize" ResourceKey="BodySmallFontSize" />
      <StaticResource x:Key="RadioButtonCharacterSpacing" ResourceKey="BodySmallCharacterSpacing" />
      <GridLength x:Key="RadioButtonGridLength">40</GridLength>
      <x:Double x:Key="RadioButtonWidth">40</x:Double>
      <x:Double x:Key="RadioButtonHeight">40</x:Double>
      <x:Double x:Key="RadioButtonCheckGlyphSize">20</x:Double>
      <x:Double x:Key="RadioButtonMinHeight">40</x:Double>
      <x:Double x:Key="RadioButtonMinWidth">40</x:Double>
      <x:Double x:Key="RadioButtonStrokeThickness">2</x:Double>
      <Thickness x:Key="RadioButtonPadding">4,0,0,0</Thickness>
      <Thickness x:Key="RadioButtonCheckEllipsePadding">5</Thickness>
      <x:Double x:Key="RatingControlHeight">32</x:Double>
      <x:Double x:Key="RatingControlCaptionHeight">32</x:Double>
      <x:Double x:Key="SecondaryRatingControlCaptionHeight">32</x:Double>
      <StaticResource x:Key="RatingControlForeground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="RatingControlForegroundUnselected" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="RatingControlForegroundSelected" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="RatingControlPlaceholderForeground" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="RatingControlPlaceholderForegroundPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="RatingControlForegroundUnselectedPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="RatingControlForegroundSelectedPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="RatingControlForegroundSelectedDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="SecondaryRatingControlForeground" ResourceKey="SecondaryBrush" />
      <StaticResource x:Key="SecondaryRatingControlForegroundUnselected" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="SecondaryRatingControlForegroundSelected" ResourceKey="SecondaryBrush" />
      <StaticResource x:Key="SecondaryRatingControlPlaceholderForeground" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="SecondaryRatingControlPlaceholderForegroundPointerOver" ResourceKey="SecondaryBrush" />
      <StaticResource x:Key="SecondaryRatingControlForegroundUnselectedPointerOver" ResourceKey="SecondaryBrush" />
      <StaticResource x:Key="SecondaryRatingControlForegroundSelectedPointerOver" ResourceKey="SecondaryBrush" />
      <StaticResource x:Key="SecondaryRatingControlForegroundSelectedDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="RatingControlCaptionForeground" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="RatingControlCaptionFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <StaticResource x:Key="RatingControlCaptionStyle" ResourceKey="CaptionMedium" />
      <StaticResource x:Key="RatingControlFontFamily" ResourceKey="SymbolThemeFontFamily" />
      <StaticResource x:Key="SecondaryRatingControlCaptionForeground" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="SecondaryRatingControlCaptionFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <StaticResource x:Key="SecondaryRatingControlCaptionStyle" ResourceKey="CaptionMedium" />
      <Color x:Key="MaterialSliderThumbDisabledColor">#B8B4BC</Color>
      <SolidColorBrush x:Key="MaterialSliderThumbDisabledBrush" Color="{ThemeResource MaterialSliderThumbDisabledColor}" />
      <Thickness x:Key="SliderFocusVisualMargin">-7,0</Thickness>
      <StaticResource x:Key="SliderFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <StaticResource x:Key="SliderFontSize" ResourceKey="LabelMediumFontSize" />
      <StaticResource x:Key="SliderTrackFill" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="SliderTrackFillDisabled" ResourceKey="OnSurfaceSelectedBrush" />
      <StaticResource x:Key="SliderTrackValueFill" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="SliderTrackValueFillDisabled" ResourceKey="SystemControlDisabledChromeDisabledHighBrush" />
      <CornerRadius x:Key="SliderHorizontalFillCornerRadius">4,0,0,4</CornerRadius>
      <CornerRadius x:Key="SliderVerticalFillCornerRadius">0,0,4,4</CornerRadius>
      <x:Double x:Key="SliderTrackThickness">4</x:Double>
      <x:Double x:Key="SliderFillThickness">6</x:Double>
      <StaticResource x:Key="SliderTickBarFill" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="SliderTickBarFillDisabled" ResourceKey="SystemControlDisabledChromeDisabledHighBrush" />
      <StaticResource x:Key="SliderInlineTickBarFill" ResourceKey="OnSurfaceVariantBrush" />
      <x:Double x:Key="SliderTopTickBarHeight">4</x:Double>
      <x:Double x:Key="SliderBottomTickBarHeight">4</x:Double>
      <x:Double x:Key="SliderHorizontalInlineTickBarHeight">2</x:Double>
      <x:Double x:Key="SliderLeftTickBarWidth">4</x:Double>
      <x:Double x:Key="SliderRightTickBarWidth">4</x:Double>
      <x:Double x:Key="SliderVerticalInlineTickBarWidth">2</x:Double>
      <Thickness x:Key="SliderTopTickBarMargin">0,0,0,4</Thickness>
      <Thickness x:Key="SliderBottomTickBarMargin">0,4,0,0</Thickness>
      <Thickness x:Key="SliderLeftTickBarMargin">0,0,4,0</Thickness>
      <Thickness x:Key="SliderRightTickBarMargin">4,0,0,0</Thickness>
      <StaticResource x:Key="SliderThumbBackground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="SliderThumbBackgroundDisabled" ResourceKey="MaterialSliderThumbDisabledBrush" />
      <x:Double x:Key="SliderThumbWidth">20</x:Double>
      <x:Double x:Key="SliderThumbHeight">20</x:Double>
      <x:Double x:Key="SliderThumbCornerRadius">10</x:Double>
      <Thickness x:Key="SliderHorizontalFocusVisualMargin">-14,-6,-14,-6</Thickness>
      <Thickness x:Key="SliderVerticalFocusVisualMargin">-6,-14,-6,-14</Thickness>
      <StaticResource x:Key="SliderTrackCornerRadius" ResourceKey="ControlCornerRadius" />
      <StaticResource x:Key="TextBoxDeleteButtonForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="TextBoxDeleteButtonForegroundPointerOver" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="TextBoxDeleteButtonForegroundPressed" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="TextBoxDeleteButtonForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="TextBoxLeadingIconForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="TextBoxLeadingIconForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="FilledTextBoxBackground" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="FilledTextBoxBackgroundPointerOver" ResourceKey="OnSurfaceVariantHoverBrush" />
      <StaticResource x:Key="FilledTextBoxBackgroundFocused" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="FilledTextBoxBackgroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="FilledTextBoxBorderBrush" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="FilledTextBoxBorderBrushPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="FilledTextBoxBorderBrushFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="FilledTextBoxBorderBrushDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="FilledTextBoxDeleteButtonForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="FilledTextBoxDeleteButtonForegroundPointerOver" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="FilledTextBoxDeleteButtonForegroundFocused" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="FilledTextBoxDeleteButtonForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="FilledTextBoxForeground" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="FilledTextBoxForegroundPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="FilledTextBoxForegroundFocused" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="FilledTextBoxForegroundDisabled" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="FilledTextBoxForegroundOpacityDisabled" ResourceKey="LowOpacity" />
      <StaticResource x:Key="FilledTextBoxPlaceholderForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="FilledTextBoxPlaceholderForegroundPointerOver" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="FilledTextBoxPlaceholderForegroundFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="FilledTextBoxPlaceholderForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="OutlinedTextBoxBorderBrush" ResourceKey="OutlineBrush" />
      <StaticResource x:Key="OutlinedTextBoxBorderBrushPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="OutlinedTextBoxBorderBrushFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="OutlinedTextBoxBorderBrushDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="OutlinedTextBoxForeground" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="OutlinedTextBoxForegroundPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="OutlinedTextBoxForegroundFocused" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="OutlinedTextBoxForegroundDisabled" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="OutlinedTextBoxForegroundOpacityDisabled" ResourceKey="LowOpacity" />
      <StaticResource x:Key="OutlinedTextBoxPlaceholderForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="OutlinedTextBoxPlaceholderForegroundPointerOver" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="OutlinedTextBoxPlaceholderForegroundFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="OutlinedTextBoxPlaceholderForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="OutlinedTextBoxFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <StaticResource x:Key="OutlinedTextBoxFontWeight" ResourceKey="BodyLargeFontWeight" />
      <StaticResource x:Key="OutlinedTextBoxFontSize" ResourceKey="BodyLargeFontSize" />
      <StaticResource x:Key="OutlinedTextBoxCharacterSpacing" ResourceKey="BodyLargeCharacterSpacing" />
      <StaticResource x:Key="FilledTextBoxFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <StaticResource x:Key="FilledTextBoxFontWeight" ResourceKey="BodyLargeFontWeight" />
      <StaticResource x:Key="FilledTextBoxFontSize" ResourceKey="BodyLargeFontSize" />
      <StaticResource x:Key="FilledTextBoxCharacterSpacing" ResourceKey="BodyLargeCharacterSpacing" />
      <StaticResource x:Key="FilledTextBoxBorderThicknessNormal" ResourceKey="TextBoxOutlinedStrokeHeight" />
      <StaticResource x:Key="FilledTextBoxBorderThicknessFocused" ResourceKey="TextBoxFocusStrokeWidth" />
      <x:Double x:Key="MaterialTextBoxClearGlyphWidth">20</x:Double>
      <x:Double x:Key="MaterialTextBoxClearGlyphHeight">20</x:Double>
      <CornerRadius x:Key="MaterialFilledTextBoxCornerRadius">4,4,0,0</CornerRadius>
      <macos:Thickness x:Key="MaterialFilledTextBoxPadding">16,7</macos:Thickness>
      <not_macos:Thickness x:Key="MaterialFilledTextBoxPadding">16</not_macos:Thickness>
      <x:Double x:Key="MaterialFilledTextBoxMinHeight">58</x:Double>
      <x:Double x:Key="MaterialFilledTextBoxBorderHeightFocused">2</x:Double>
      <x:Double x:Key="MaterialOutlinedTextBoxBorderThickness">1</x:Double>
      <CornerRadius x:Key="MaterialOutlinedTextBoxCornerRadius">4</CornerRadius>
      <macos:Thickness x:Key="MaterialOutlinedTextBoxPadding">16,7,14,7</macos:Thickness>
      <not_macos:Thickness x:Key="MaterialOutlinedTextBoxPadding">16,16,14,16</not_macos:Thickness>
      <x:Double x:Key="MaterialOutlinedTextBoxMinHeight">56</x:Double>
      <Thickness x:Key="MaterialOutlinedTextBoxBorderPadding">1</Thickness>
      <x:Double x:Key="MaterialOutlinedTextBoxBorderThicknessFocused">2</x:Double>
      <StaticResource x:Key="TextToggleButtonBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBackgroundPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBackgroundChecked" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBackgroundCheckedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBackgroundCheckedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBackgroundCheckedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBackgroundIndeterminate" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBackgroundIndeterminatePointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBackgroundIndeterminatePressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBackgroundIndeterminateDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonForeground" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextToggleButtonForegroundPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextToggleButtonForegroundPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextToggleButtonForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="TextToggleButtonForegroundChecked" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextToggleButtonForegroundCheckedPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextToggleButtonForegroundCheckedPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextToggleButtonForegroundCheckedDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="TextToggleButtonForegroundIndeterminate" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextToggleButtonForegroundIndeterminatePointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextToggleButtonForegroundIndeterminatePressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="TextToggleButtonForegroundIndeterminateDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="TextToggleButtonFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <StaticResource x:Key="TextToggleButtonFontSize" ResourceKey="LabelLargeFontSize" />
      <StaticResource x:Key="TextToggleButtonBorderBrush" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBorderBrushPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBorderBrushPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBorderBrushChecked" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBorderBrushCheckedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBorderBrushCheckedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBorderBrushCheckedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBorderBrushIndeterminate" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBorderBrushIndeterminatePointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBorderBrushIndeterminatePressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBorderBrushIndeterminateDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TextToggleButtonBorderBrushHoverOverlay" ResourceKey="OnSurfaceHoverBrush" />
      <StaticResource x:Key="TextToggleButtonBorderBrushFocusedOverlay" ResourceKey="OnSurfaceFocusedBrush" />
      <StaticResource x:Key="TextToggleButtonBorderBrushSelectedOverlay" ResourceKey="OnSurfaceFocusedBrush" />
      <StaticResource x:Key="TextToggleButtonFeedbackFocused" ResourceKey="OnSurfaceFocusedBrush" />
      <Thickness x:Key="TextToggleButtonBorderThickness">0</Thickness>
      <CornerRadius x:Key="TextToggleButtonCornerRadius">4</CornerRadius>
      <Thickness x:Key="TextToggleButtonPadding">16,8</Thickness>
      <x:Double x:Key="TextToggleButtonMinHeight">40</x:Double>
      <StaticResource x:Key="IconToggleButtonBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBackgroundPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBackgroundChecked" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBackgroundCheckedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBackgroundCheckedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBackgroundCheckedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBackgroundIndeterminate" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBackgroundIndeterminatePointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBackgroundIndeterminatePressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBackgroundIndeterminateDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonForeground" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="IconToggleButtonForegroundPointerOver" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="IconToggleButtonForegroundPressed" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="IconToggleButtonForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="IconToggleButtonForegroundChecked" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="IconToggleButtonForegroundCheckedPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="IconToggleButtonForegroundCheckedPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="IconToggleButtonForegroundCheckedDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="IconToggleButtonForegroundIndeterminate" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="IconToggleButtonForegroundIndeterminatePointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="IconToggleButtonForegroundIndeterminatePressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="IconToggleButtonForegroundIndeterminateDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="IconToggleButtonBorderBrush" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBorderBrushPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBorderBrushPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBorderBrushChecked" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBorderBrushCheckedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBorderBrushCheckedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBorderBrushCheckedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBorderBrushIndeterminate" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBorderBrushIndeterminatePointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBorderBrushIndeterminatePressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBorderBrushIndeterminateDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="IconToggleButtonBorderBrushHoverOverlay" ResourceKey="OnSurfaceHoverBrush" />
      <StaticResource x:Key="IconToggleButtonBorderBrushFocusedOverlay" ResourceKey="OnSurfaceFocusedBrush" />
      <StaticResource x:Key="IconToggleButtonBorderBrushSelectedOverlay" ResourceKey="OnSurfaceFocusedBrush" />
      <StaticResource x:Key="IconToggleButtonStateCircleFill" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="IconToggleButtonStateCircleOpacityPointerOver" ResourceKey="HoverOpacity" />
      <StaticResource x:Key="IconToggleButtonStateCircleOpacityPressed" ResourceKey="PressedOpacity" />
      <StaticResource x:Key="IconToggleButtonStateCircleOpacityFocused" ResourceKey="FocusedOpacity" />
      <Thickness x:Key="IconToggleButtonBorderThickness">0</Thickness>
      <x:Double x:Key="IconToggleButtonMinHeight">40</x:Double>
      <x:Double x:Key="IconToggleButtonMinWidth">40</x:Double>
      <StaticResource x:Key="ToggleSwitchOffOuterBorderFill" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="ToggleSwitchOffOuterBorderStroke" ResourceKey="OutlineBrush" />
      <StaticResource x:Key="ToggleSwitchOuterBorderStroke" ResourceKey="OutlineBrush" />
      <StaticResource x:Key="ToggleSwitchOuterBorderFill" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOffFill" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOffFillPointerOver" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOffFillFocused" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOffFillPressed" ResourceKey="OnSurfaceVariantBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOffFillDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOnFill" ResourceKey="OnPrimaryBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOnFillPointerOver" ResourceKey="PrimaryContainerBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOnFillFocused" ResourceKey="PrimaryContainerBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOnFillPressed" ResourceKey="PrimaryContainerBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOnFillDisabled" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOnShadowFill" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOnShadowFillPointerOver" ResourceKey="PrimaryHoverBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOnShadowFillFocused" ResourceKey="PrimaryFocusedBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOnShadowFillPressed" ResourceKey="PrimaryPressedBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOffShadowFill" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOffShadowFillPointerOver" ResourceKey="OnSurfaceVariantHoverBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOffShadowFillFocused" ResourceKey="OnSurfaceVariantFocusedBrush" />
      <StaticResource x:Key="ToggleSwitchKnobOffShadowFillPressed" ResourceKey="OnSurfaceVariantPressedBrush" />
      <StaticResource x:Key="ToggleSwitchOnSwitchKnobBoundsFill" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ToggleSwitchKnobBoundsFill" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ToggleSwitchKnobBoundsFillPointerOver" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ToggleSwitchKnobBoundsFillFocused" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ToggleSwitchKnobBoundsFillPressed" ResourceKey="PrimaryBrush" />
      <StaticResource x:Key="ToggleSwitchKnobBoundsFillDisabled" ResourceKey="OnSurfaceDisabledBrush" />
      <StaticResource x:Key="ToggleSwitchOffIconPresenterForeground" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="ToggleSwitchOffIconPresenterForegroundDisabled" ResourceKey="SurfaceVariantBrush" />
      <StaticResource x:Key="ToggleSwitchOnIconPresenterForeground" ResourceKey="OnPrimaryContainerBrush" />
      <StaticResource x:Key="ToggleSwitchOnIconPresenterForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
      <StaticResource x:Key="ToggleSwitchThumb" ResourceKey="SystemControlTransparentBrush" />
      <x:Double x:Key="SwitchKnobWidth">52</x:Double>
      <x:Double x:Key="SwitchKnobIncludingOffShadowWidth">56</x:Double>
      <x:Double x:Key="SwitchKnobHeight">32</x:Double>
      <x:Double x:Key="SwitchKnobRadius">16</x:Double>
      <x:Double x:Key="SwitchKnobStrokeThickness">2</x:Double>
      <x:Double x:Key="SwitchKnobShadowSize">40</x:Double>
      <x:Double x:Key="SmallThumbSize">16</x:Double>
      <x:Double x:Key="MediumThumbSize">24</x:Double>
      <x:Double x:Key="LargeThumbSize">28</x:Double>
      <x:Double x:Key="KnobIconSize">16</x:Double>
      <x:Double x:Key="ToggleSwitchThemeMinWidth">0</x:Double>
      <CornerRadius x:Key="LargeThumbCornerRadius">14</CornerRadius>
      <Thickness x:Key="KnobIconPadding">2</Thickness>
      <Thickness x:Key="KnobOnMargin">2,0,0,0</Thickness>
      <Thickness x:Key="SwitchKnobOnMargin">26,0,0,0</Thickness>
      <Thickness x:Key="SwitchKnobOffMargin">0,0,22,0</Thickness>
      <Thickness x:Key="SwitchKnobOnShadowMargin">20,0,0,0</Thickness>
      <Thickness x:Key="SwitchKnobOffShadowMargin">0,0,20,0</Thickness>
      <StaticResource x:Key="DisplayLargeFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <x:String x:Key="DisplayLargeFontWeight">Normal</x:String>
      <x:Double x:Key="DisplayLargeFontSize">57</x:Double>
      <x:Int32 x:Key="DisplayLargeCharacterSpacing">-17</x:Int32>
      <StaticResource x:Key="DisplayMediumFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <x:String x:Key="DisplayMediumFontWeight">Normal</x:String>
      <x:Double x:Key="DisplayMediumFontSize">45</x:Double>
      <StaticResource x:Key="DisplaySmallFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <x:String x:Key="DisplaySmallFontWeight">Normal</x:String>
      <x:Double x:Key="DisplaySmallFontSize">36</x:Double>
      <StaticResource x:Key="HeadlineLargeFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <x:String x:Key="HeadlineLargeFontWeight">Normal</x:String>
      <x:Double x:Key="HeadlineLargeFontSize">32</x:Double>
      <StaticResource x:Key="HeadlineMediumFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <x:String x:Key="HeadlineMediumFontWeight">Normal</x:String>
      <x:Double x:Key="HeadlineMediumFontSize">28</x:Double>
      <StaticResource x:Key="HeadlineSmallFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <x:String x:Key="HeadlineSmallFontWeight">Normal</x:String>
      <x:Double x:Key="HeadlineSmallFontSize">24</x:Double>
      <StaticResource x:Key="TitleLargeFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <x:String x:Key="TitleLargeFontWeight">Normal</x:String>
      <x:Double x:Key="TitleLargeFontSize">22</x:Double>
      <StaticResource x:Key="TitleMediumFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="TitleMediumFontWeight">Medium</x:String>
      <x:Double x:Key="TitleMediumFontSize">16</x:Double>
      <StaticResource x:Key="TitleSmallFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="TitleSmallFontWeight">Medium</x:String>
      <x:Double x:Key="TitleSmallFontSize">14</x:Double>
      <StaticResource x:Key="LabelLargeFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="LabelLargeFontWeight">Medium</x:String>
      <x:Double x:Key="LabelLargeFontSize">14</x:Double>
      <x:Int32 x:Key="LabelLargeCharacterSpacing">7</x:Int32>
      <StaticResource x:Key="LabelMediumFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="LabelMediumFontWeight">Medium</x:String>
      <x:Double x:Key="LabelMediumFontSize">12</x:Double>
      <x:Int32 x:Key="LabelMediumCharacterSpacing">41</x:Int32>
      <StaticResource x:Key="LabelSmallFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="LabelSmallFontWeight">Medium</x:String>
      <x:Double x:Key="LabelSmallFontSize">11</x:Double>
      <x:Int32 x:Key="LabelSmallCharacterSpacing">45</x:Int32>
      <StaticResource x:Key="LabelExtraSmallFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="LabelExtraSmallFontWeight">Medium</x:String>
      <x:Double x:Key="LabelExtraSmallFontSize">11</x:Double>
      <x:Int32 x:Key="LabelExtraSmallCharacterSpacing">7</x:Int32>
      <StaticResource x:Key="BodyLargeFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="BodyLargeFontWeight">Medium</x:String>
      <x:Double x:Key="BodyLargeFontSize">16</x:Double>
      <x:Int32 x:Key="BodyLargeCharacterSpacing">9</x:Int32>
      <StaticResource x:Key="BodyMediumFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="BodyMediumFontWeight">Medium</x:String>
      <x:Double x:Key="BodyMediumFontSize">14</x:Double>
      <x:Int32 x:Key="BodyMediumCharacterSpacing">17</x:Int32>
      <StaticResource x:Key="BodySmallFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="BodySmallFontWeight">Medium</x:String>
      <x:Double x:Key="BodySmallFontSize">12</x:Double>
      <x:Int32 x:Key="BodySmallCharacterSpacing">33</x:Int32>
      <StaticResource x:Key="CaptionLargeFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="CaptionLargeFontWeight">Medium</x:String>
      <x:Double x:Key="CaptionLargeFontSize">13</x:Double>
      <x:Int32 x:Key="CaptionLargeCharacterSpacing">-3</x:Int32>
      <StaticResource x:Key="CaptionMediumFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="CaptionMediumFontWeight">Medium</x:String>
      <x:Double x:Key="CaptionMediumFontSize">12</x:Double>
      <x:Int32 x:Key="CaptionMediumCharacterSpacing">33</x:Int32>
      <StaticResource x:Key="CaptionSmallFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="CaptionSmallFontWeight">Medium</x:String>
      <x:Double x:Key="CaptionSmallFontSize">11</x:Double>
      <x:Int32 x:Key="CaptionSmallCharacterSpacing">7</x:Int32>
    </ResourceDictionary>
    <ResourceDictionary x:Key="HighContrast">
      <CornerRadius x:Key="MaterialNavigationViewSplitViewCornerRadius">0,14,14,0</CornerRadius>
      <CornerRadius x:Key="MaterialNavigationViewContentGridCornerRadius">14,0,0,14</CornerRadius>
      <x:Double x:Key="MaterialNavigationViewButtonWidth">56</x:Double>
      <CornerRadius x:Key="MaterialNavigationViewButtonCornerRadius">28</CornerRadius>
      <x:Double x:Key="MaterialNavigationViewButtonIconLength">24</x:Double>
      <x:Double x:Key="MaterialNavigationViewButtonIconSymbolFontSize">24</x:Double>
      <Thickness x:Key="MaterialNavigationViewButtonMarginWhenStackedVertically">12,0</Thickness>
      <x:Double x:Key="MaterialNavigationItemHeight">56</x:Double>
      <CornerRadius x:Key="MaterialNavigationViewItemCornerRadius">28</CornerRadius>
      <CornerRadius x:Key="MaterialNavigationViewItemCornerRadiusLeftOnly">28,0,0,28</CornerRadius>
      <Thickness x:Key="MaterialNavigationItemLeftMargin">12,0</Thickness>
      <x:Double x:Key="MaterialNavigationItemIconLength">24</x:Double>
      <Thickness x:Key="MaterialNavigationItemContentMargin">12,0,0,0</Thickness>
      <Thickness x:Key="MaterialNavigationItemContentMarginWithoutIcon">0</Thickness>
      <Thickness x:Key="NavigationViewAutoSuggestBoxMargin">16,0</Thickness>
      <Thickness x:Key="TopNavigationViewAutoSuggestBoxMargin">4,0</Thickness>
      <x:Double x:Key="PaneToggleButtonHeight">56</x:Double>
      <x:Double x:Key="PaneToggleButtonWidth">80</x:Double>
      <x:Double x:Key="NavigationViewCompactPaneLength">80</x:Double>
      <x:Double x:Key="NavigationViewIconBoxWidth">40</x:Double>
      <x:Double x:Key="NavigationViewTopPaneHeight">48</x:Double>
      <x:Double x:Key="NavigationViewAutoSuggestAreaHeight">40</x:Double>
      <x:Double x:Key="TopNavigationViewPaneCustomContentMinWidth">80</x:Double>
      <x:Double x:Key="TopNavigationViewOverflowButtonWidth">40</x:Double>
      <x:Double x:Key="TopNavigationViewOverflowButtonHeight">40</x:Double>
      <x:Double x:Key="TopNavigationViewSettingsButtonWidth">40</x:Double>
      <x:Double x:Key="TopNavigationViewSettingsButtonHeight">40</x:Double>
      <x:Double x:Key="NavigationViewItemOnLeftMinHeight">56</x:Double>
      <x:Double x:Key="NavigationViewPaneHeaderRowMinHeight">56</x:Double>
      <x:Double x:Key="NavigationViewItemOnLeftIconBoxHeight">24</x:Double>
      <x:Double x:Key="NavigationViewSelectionIndicatorWidth">3</x:Double>
      <x:Double x:Key="NavigationViewSelectionIndicatorHeight">24</x:Double>
      <x:Double x:Key="NavigationViewSelectionIndicatorRadius">2</x:Double>
      <x:Double x:Key="NavigationViewItemSeparatorHeight">1</x:Double>
      <x:Double x:Key="TopNavigationViewItemSeparatorWidth">1</x:Double>
      <Thickness x:Key="NavigationViewToggleBorderThickness">0</Thickness>
      <Thickness x:Key="NavigationViewItemBorderThickness">1</Thickness>
      <Thickness x:Key="NavigationViewItemOnLeftIconBoxMargin">3</Thickness>
      <Thickness x:Key="NavigationViewItemButtonMargin">12,0</Thickness>
      <Thickness x:Key="NavigationViewItemInnerHeaderMargin">16,0</Thickness>
      <Thickness x:Key="TopNavigationViewItemInnerHeaderMargin">12,0</Thickness>
      <Thickness x:Key="NavigationViewMinimalHeaderMargin">-24,44,0,0</Thickness>
      <Thickness x:Key="NavigationViewButtonHolderGridMargin">0</Thickness>
      <Thickness x:Key="NavigationViewPaneContentGridMargin">-1,3</Thickness>
      <Thickness x:Key="NavigationViewContentGridBorderThickness">1,1,0,0</Thickness>
      <Thickness x:Key="NavigationViewMinimalContentGridBorderThickness">0,1,0,0</Thickness>
      <Thickness x:Key="TopNavigationViewContentGridBorderThickness">0,1,0,0</Thickness>
      <Thickness x:Key="TopNavigationViewTopNavGridMargin">4,0</Thickness>
      <Thickness x:Key="NavigationViewBorderThickness">1</Thickness>
      <Thickness x:Key="NavigationViewHeaderMargin">56,44,0,0</Thickness>
      <Thickness x:Key="NavigationViewContentPresenterMargin">0</Thickness>
      <Thickness x:Key="NavigationViewContentMargin">0</Thickness>
      <Thickness x:Key="NavigationViewMinimalContentMargin">0</Thickness>
      <Thickness x:Key="TopNavigationViewContentMargin">0</Thickness>
      <Thickness x:Key="NavigationViewPaneTitlePresenterMargin">8,4,0,0</Thickness>
      <Thickness x:Key="NavigationViewItemMargin">0</Thickness>
      <Thickness x:Key="TopNavigationViewItemMargin">0</Thickness>
      <Thickness x:Key="NavigationViewItemSeparatorMargin">0,3,0,4</Thickness>
      <Thickness x:Key="NavigationViewCompactItemSeparatorMargin">0,3,0,4</Thickness>
      <Thickness x:Key="TopNavigationViewItemSeparatorMargin">3,0,4,0</Thickness>
      <Thickness x:Key="TopNavigationViewOverflowButtonMargin">0</Thickness>
      <Thickness x:Key="NavigationViewItemContentPresenterMargin">4,-1,8,-1</Thickness>
      <Thickness x:Key="NavigationViewCompactItemContentPresenterMargin">0,0,0,0</Thickness>
      <Thickness x:Key="TopNavigationViewItemContentPresenterMargin">8,-1,12,-1</Thickness>
      <Thickness x:Key="TopNavigationViewItemContentOnlyContentPresenterMargin">12,0</Thickness>
      <Thickness x:Key="NavigationViewItemExpandChevronMargin">0,0,-14,0</Thickness>
      <Thickness x:Key="TopNavigationViewItemExpandChevronMargin">-16,0,0,0</Thickness>
      <Thickness x:Key="TopNavigationViewItemIconOnlyExpandChevronMargin">0,0,0,0</Thickness>
      <Thickness x:Key="TopNavigationViewItemContentOnlyExpandChevronMargin">-12,0,0,0</Thickness>
      <Thickness x:Key="TopNavigationViewItemOnOverflowContentPresenterMargin">12,0,20,0</Thickness>
      <Thickness x:Key="TopNavigationViewItemOnOverflowNoIconContentPresenterMargin">16,0,20,0</Thickness>
      <Thickness x:Key="TopNavigationViewItemOnOverflowExpandChevronMargin">-4,0,-8,0</Thickness>
      <Thickness x:Key="TopNavigationViewItemOnOverflowExpandChevronPadding">12,0,12,0</Thickness>
      <CornerRadius x:Key="NavigationViewContentGridCornerRadius">8,0,0,0</CornerRadius>
      <CornerRadius x:Key="TopNavigationViewContentGridCornerRadius">0</CornerRadius>
      <CornerRadius x:Key="NavigationViewMinimalContentGridCornerRadius">0</CornerRadius>
      <Thickness x:Key="TopNavigationViewOverflowMenuPadding">0,8</Thickness>
      <Thickness x:Key="NavigationViewItemChildrenMenuFlyoutPadding">0,8</Thickness>
      <x:Double x:Key="NavigationViewItemExpandedGlyphFontSize">8</x:Double>
      <x:String x:Key="NavigationViewItemExpandedGlyph">&#xE70D;</x:String>
      <x:Double x:Key="SplitViewOpenPaneThemeLength">320</x:Double>
      <x:Double x:Key="SplitViewCompactPaneThemeLength">48</x:Double>
      <Thickness x:Key="SplitViewLeftBorderThemeThickness">0,0,1,0</Thickness>
      <Thickness x:Key="SplitViewRightBorderThemeThickness">1,0,0,0</Thickness>
      <StaticResource x:Key="NavigationViewSplitViewLightDismissOverlayBackground" ResourceKey="SystemControlPageBackgroundMediumAltMediumBrush" />
      <x:String x:Key="SplitViewPaneAnimationOpenDuration">00:00:00.2</x:String>
      <x:String x:Key="SplitViewPaneAnimationOpenPreDuration">00:00:00.19999</x:String>
      <x:String x:Key="SplitViewPaneAnimationCloseDuration">00:00:00.1</x:String>
      <CornerRadius x:Key="SplitViewPaneRootCornerRadius">0</CornerRadius>
      <StaticResource x:Key="NavigationViewBackground" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="NavigationViewDefaultPaneBackground" ResourceKey="SystemControlPageBackgroundChromeLowBrush" />
      <StaticResource x:Key="NavigationViewPaneBackground" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="NavigationViewTopPaneBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewDefaultPaneBorderBrush" ResourceKey="SurfaceBrush" />
      <StaticResource x:Key="NavigationViewButtonForeground" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="NavigationViewButtonForegroundPointerOver" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="NavigationViewButtonForegroundPressed" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="NavigationViewButtonForegroundDisabled" ResourceKey="OnSurfaceDisabledLowBrush" />
      <StaticResource x:Key="NavigationViewButtonBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewButtonBackgroundPointerOver" ResourceKey="PrimaryHoverBrush" />
      <StaticResource x:Key="NavigationViewButtonBackgroundPressed" ResourceKey="PrimaryPressedBrush" />
      <StaticResource x:Key="NavigationViewButtonBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewButtonRippleFeedback" ResourceKey="PrimaryPressedBrush" />
      <StaticResource x:Key="NavigationViewItemBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBackgroundPointerOver" ResourceKey="PrimaryHoverBrush" />
      <StaticResource x:Key="NavigationViewItemBackgroundPressed" ResourceKey="PrimaryPressedBrush" />
      <StaticResource x:Key="NavigationViewItemBackgroundDisabled" ResourceKey="OnSurfaceDisabledLowBrush" />
      <StaticResource x:Key="NavigationViewItemBackgroundSelected" ResourceKey="PrimarySelectedBrush" />
      <StaticResource x:Key="NavigationViewItemBackgroundSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBackgroundSelectedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBackgroundSelectedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemForeground" ResourceKey="OnSurfaceBrush" />
      <StaticResource x:Key="NavigationViewItemForegroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemForegroundPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemForegroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemForegroundSelected" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemForegroundSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemForegroundSelectedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemForegroundSelectedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBorderBrush" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBorderBrushPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBorderBrushPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBorderBrushSelected" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBorderBrushSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBorderBrushSelectedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemBorderBrushSelectedDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemSeparatorForeground" ResourceKey="OnSurfacePressedBrush" />
      <StaticResource x:Key="NavigationViewItemHeaderForeground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewSelectionIndicatorForeground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="NavigationViewItemRippleFeedback" ResourceKey="PrimaryPressedBrush" />
      <StaticResource x:Key="TopNavigationViewItemForeground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemForegroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemForegroundPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemForegroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemForegroundSelected" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemForegroundSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemForegroundSelectedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemBackgroundPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemBackgroundSelected" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemBackgroundSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemBackgroundSelectedPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TopNavigationViewItemSeparatorForeground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="DisplayLargeFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <x:String x:Key="DisplayLargeFontWeight">Normal</x:String>
      <x:Double x:Key="DisplayLargeFontSize">57</x:Double>
      <x:Int32 x:Key="DisplayLargeCharacterSpacing">-17</x:Int32>
      <StaticResource x:Key="DisplayMediumFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <x:String x:Key="DisplayMediumFontWeight">Normal</x:String>
      <x:Double x:Key="DisplayMediumFontSize">45</x:Double>
      <StaticResource x:Key="DisplaySmallFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <x:String x:Key="DisplaySmallFontWeight">Normal</x:String>
      <x:Double x:Key="DisplaySmallFontSize">36</x:Double>
      <StaticResource x:Key="HeadlineLargeFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <x:String x:Key="HeadlineLargeFontWeight">Normal</x:String>
      <x:Double x:Key="HeadlineLargeFontSize">32</x:Double>
      <StaticResource x:Key="HeadlineMediumFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <x:String x:Key="HeadlineMediumFontWeight">Normal</x:String>
      <x:Double x:Key="HeadlineMediumFontSize">28</x:Double>
      <StaticResource x:Key="HeadlineSmallFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <x:String x:Key="HeadlineSmallFontWeight">Normal</x:String>
      <x:Double x:Key="HeadlineSmallFontSize">24</x:Double>
      <StaticResource x:Key="TitleLargeFontFamily" ResourceKey="MaterialRegularFontFamily" />
      <x:String x:Key="TitleLargeFontWeight">Normal</x:String>
      <x:Double x:Key="TitleLargeFontSize">22</x:Double>
      <StaticResource x:Key="TitleMediumFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="TitleMediumFontWeight">Medium</x:String>
      <x:Double x:Key="TitleMediumFontSize">16</x:Double>
      <StaticResource x:Key="TitleSmallFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="TitleSmallFontWeight">Medium</x:String>
      <x:Double x:Key="TitleSmallFontSize">14</x:Double>
      <StaticResource x:Key="LabelLargeFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="LabelLargeFontWeight">Medium</x:String>
      <x:Double x:Key="LabelLargeFontSize">14</x:Double>
      <x:Int32 x:Key="LabelLargeCharacterSpacing">7</x:Int32>
      <StaticResource x:Key="LabelMediumFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="LabelMediumFontWeight">Medium</x:String>
      <x:Double x:Key="LabelMediumFontSize">12</x:Double>
      <x:Int32 x:Key="LabelMediumCharacterSpacing">41</x:Int32>
      <StaticResource x:Key="LabelSmallFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="LabelSmallFontWeight">Medium</x:String>
      <x:Double x:Key="LabelSmallFontSize">11</x:Double>
      <x:Int32 x:Key="LabelSmallCharacterSpacing">45</x:Int32>
      <StaticResource x:Key="LabelExtraSmallFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="LabelExtraSmallFontWeight">Medium</x:String>
      <x:Double x:Key="LabelExtraSmallFontSize">11</x:Double>
      <x:Int32 x:Key="LabelExtraSmallCharacterSpacing">7</x:Int32>
      <StaticResource x:Key="BodyLargeFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="BodyLargeFontWeight">Medium</x:String>
      <x:Double x:Key="BodyLargeFontSize">16</x:Double>
      <x:Int32 x:Key="BodyLargeCharacterSpacing">9</x:Int32>
      <StaticResource x:Key="BodyMediumFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="BodyMediumFontWeight">Medium</x:String>
      <x:Double x:Key="BodyMediumFontSize">14</x:Double>
      <x:Int32 x:Key="BodyMediumCharacterSpacing">17</x:Int32>
      <StaticResource x:Key="BodySmallFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="BodySmallFontWeight">Medium</x:String>
      <x:Double x:Key="BodySmallFontSize">12</x:Double>
      <x:Int32 x:Key="BodySmallCharacterSpacing">33</x:Int32>
      <StaticResource x:Key="CaptionLargeFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="CaptionLargeFontWeight">Medium</x:String>
      <x:Double x:Key="CaptionLargeFontSize">13</x:Double>
      <x:Int32 x:Key="CaptionLargeCharacterSpacing">-3</x:Int32>
      <StaticResource x:Key="CaptionMediumFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="CaptionMediumFontWeight">Medium</x:String>
      <x:Double x:Key="CaptionMediumFontSize">12</x:Double>
      <x:Int32 x:Key="CaptionMediumCharacterSpacing">33</x:Int32>
      <StaticResource x:Key="CaptionSmallFontFamily" ResourceKey="MaterialMediumFontFamily" />
      <x:String x:Key="CaptionSmallFontWeight">Medium</x:String>
      <x:Double x:Key="CaptionSmallFontSize">11</x:Double>
      <x:Int32 x:Key="CaptionSmallCharacterSpacing">7</x:Int32>
    </ResourceDictionary>
  </ResourceDictionary.ThemeDictionaries>
  <!--origin: Styles\Controls\v2\Button.xaml-->
  <um:FromNullToValueConverter x:Key="NullToTextButtonMarginConverter" NotNullValue="0,0,2,0" NullValue="0" />
  <x:String x:Key="ButtonVerticalContentAlignment">Center</x:String>
  <x:String x:Key="ButtonHorizontalContentAlignment">Center</x:String>
  <x:String x:Key="ButtonIconHorizontalAlignment">Stretch</x:String>
  <x:String x:Key="ButtonIconVerticalAlignment">Stretch</x:String>
  <x:String x:Key="IconButtonEllipseVerticalAlignment">Stretch</x:String>
  <x:String x:Key="IconButtonEllipseHorizontalAlignment">Stretch</x:String>
  <x:Boolean x:Key="ElevatedButtonIsTintEnabled">True</x:Boolean>
  <Style x:Key="MaterialBaseButtonStyle" TargetType="Button">
    <!-- Start: Label Large Typo -->
    <Setter Property="FontFamily" Value="{ThemeResource MaterialMediumFontFamily}" />
    <Setter Property="FontWeight" Value="{ThemeResource LabelLargeFontWeight}" />
    <Setter Property="FontSize" Value="{ThemeResource LabelLargeFontSize}" />
    <Setter Property="CharacterSpacing" Value="{ThemeResource LabelLargeCharacterSpacing}" />
    <!-- End: Label Large Typo -->
    <Setter Property="MinHeight" Value="{ThemeResource ButtonMinHeight}" />
    <Setter Property="MinWidth" Value="{ThemeResource ButtonMinWidth}" />
    <Setter Property="Padding" Value="{ThemeResource ButtonPadding}" />
    <Setter Property="CornerRadius" Value="{ThemeResource ButtonCornerRadius}" />
    <Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThickness}" />
    <Setter Property="VerticalContentAlignment" Value="{StaticResource ButtonVerticalContentAlignment}" />
    <Setter Property="HorizontalContentAlignment" Value="{StaticResource ButtonHorizontalContentAlignment}" />
    <!-- Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388 -->
    <Setter Property="um:ControlExtensions.Icon" Value="{x:Null}" />
  </Style>
  <Style x:Key="MaterialElevatedButtonStyle" BasedOn="{StaticResource MaterialBaseButtonStyle}" TargetType="Button">
    <Setter Property="Foreground" Value="{ThemeResource ElevatedButtonForeground}" />
    <Setter Property="Background" Value="{ThemeResource ElevatedButtonBackground}" />
    <Setter Property="um:ControlExtensions.Elevation" Value="{ThemeResource ElevatedButtonElevation}" />
    <Setter Property="um:ControlExtensions.TintedBackground" Value="{x:Null}" />
    <Setter Property="um:ControlExtensions.IsTintEnabled" Value="{StaticResource ElevatedButtonIsTintEnabled}" />
    <Setter Property="BorderBrush" Value="{ThemeResource ElevatedButtonBorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <toolkit:ElevatedView x:Name="ElevatedView" Margin="{ThemeResource ElevatedButtonMargin}" Elevation="{Binding Path=(um:ControlExtensions.Elevation), RelativeSource={RelativeSource TemplatedParent}}" CornerRadius="{TemplateBinding CornerRadius}" Background="Transparent">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <VisualState.Setters>
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource ElevatedButtonIconForeground}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource ElevatedButtonBackgroundPointerOver}" />
                    <Setter Target="StateLayer.Background" Value="{ThemeResource ElevatedButtonStateLayerBackgroundPointerOver}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource ElevatedButtonIconForegroundPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ElevatedButtonForegroundPointerOver}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource ElevatedButtonBorderBrushPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource ElevatedButtonBackgroundPressed}" />
                    <Setter Target="StateLayer.Background" Value="{ThemeResource ElevatedButtonStateLayerBackgroundPressed}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource ElevatedButtonIconForegroundPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ElevatedButtonForegroundPressed}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource ElevatedButtonBorderBrushPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource ElevatedButtonBackgroundDisabled}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource ElevatedButtonIconForegroundDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ElevatedButtonForegroundDisabled}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource ElevatedButtonBorderBrushDisabled}" />
                    <Setter Target="ElevatedView.Margin" Value="{ThemeResource ElevatedButtonDisabledMargin}" />
                    <Setter Target="ElevatedView.Elevation" Value="{ThemeResource ElevatedButtonElevationDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource ElevatedButtonBackgroundFocused}" />
                    <Setter Target="StateLayer.Background" Value="{ThemeResource ElevatedButtonStateLayerBackgroundFocused}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource ElevatedButtonIconForegroundFocused}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ElevatedButtonForegroundFocused}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource ElevatedButtonBorderBrushFocused}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerFocused">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource ElevatedButtonBackgroundPointerFocused}" />
                    <Setter Target="StateLayer.Background" Value="{ThemeResource ElevatedButtonStateLayerBackgroundPointerFocused}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource ElevatedButtonIconForegroundPointerFocused}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ElevatedButtonForegroundPointerFocused}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource ElevatedButtonBorderBrushPointerFocused}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="Root" Background="{Binding Path=(um:ControlExtensions.TintedBackground), RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
              <Border x:Name="StateLayer" Background="Transparent" CornerRadius="{TemplateBinding CornerRadius}" />
              <um:Ripple x:Name="Ripple" Feedback="{TemplateBinding Foreground}" FeedbackOpacity="{StaticResource PressedOpacity}" CornerRadius="{TemplateBinding CornerRadius}" Padding="{TemplateBinding Padding}" AutomationProperties.AccessibilityView="Raw" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}">
                <um:Ripple.Content>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="IconPresenter" Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}" MinWidth="{ThemeResource ButtonIconMinWidth}" HorizontalAlignment="{StaticResource ButtonIconHorizontalAlignment}" VerticalAlignment="{StaticResource ButtonIconVerticalAlignment}" Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    <ContentPresenter x:Name="ContentPresenter" Grid.Column="1" Margin="{ThemeResource ButtonContentMargin}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" CharacterSpacing="{TemplateBinding CharacterSpacing}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                  </Grid>
                </um:Ripple.Content>
              </um:Ripple>
            </Grid>
          </toolkit:ElevatedView>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialFilledButtonStyle" BasedOn="{StaticResource MaterialBaseButtonStyle}" TargetType="Button">
    <Setter Property="Foreground" Value="{ThemeResource FilledButtonForeground}" />
    <Setter Property="Background" Value="{ThemeResource FilledButtonBackground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource FilledButtonBorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <toolkit:ElevatedView x:Name="ElevatedView" Margin="{ThemeResource ButtonMargin}" Elevation="{ThemeResource ButtonElevation}" CornerRadius="{TemplateBinding CornerRadius}" Background="Transparent">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <VisualState.Setters>
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource FilledButtonIconForeground}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource FilledButtonBackgroundPointerOver}" />
                    <Setter Target="StateLayer.Background" Value="{ThemeResource FilledButtonStateLayerBackgroundPointerOver}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource FilledButtonIconForegroundPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource FilledButtonForegroundPointerOver}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource FilledButtonBorderBrushPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource FilledButtonBackgroundPressed}" />
                    <Setter Target="StateLayer.Background" Value="{ThemeResource FilledButtonStateLayerBackgroundPressed}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource FilledButtonIconForegroundPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource FilledButtonForegroundPressed}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource FilledButtonBorderBrushPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource FilledButtonBackgroundDisabled}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource FilledButtonIconForegroundDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource FilledButtonForegroundDisabled}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource FilledButtonBorderBrushDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource FilledButtonBackgroundFocused}" />
                    <Setter Target="StateLayer.Background" Value="{ThemeResource FilledButtonStateLayerBackgroundFocused}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource FilledButtonIconForegroundFocused}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource FilledButtonForegroundFocused}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource FilledButtonBorderBrushFocused}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerFocused">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource FilledButtonBackgroundPointerFocused}" />
                    <Setter Target="StateLayer.Background" Value="{ThemeResource FilledButtonStateLayerBackgroundPointerFocused}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource FilledButtonIconForegroundPointerFocused}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource FilledButtonForegroundPointerFocused}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource FilledButtonBorderBrushPointerFocused}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="Root" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
              <Border x:Name="StateLayer" Background="Transparent" CornerRadius="{TemplateBinding CornerRadius}" />
              <um:Ripple x:Name="Ripple" Feedback="{TemplateBinding Foreground}" FeedbackOpacity="{StaticResource PressedOpacity}" CornerRadius="{TemplateBinding CornerRadius}" Padding="{TemplateBinding Padding}" AutomationProperties.AccessibilityView="Raw" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}">
                <um:Ripple.Content>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="IconPresenter" Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}" MinWidth="{ThemeResource ButtonIconMinWidth}" HorizontalAlignment="{StaticResource ButtonIconHorizontalAlignment}" VerticalAlignment="{StaticResource ButtonIconVerticalAlignment}" Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    <ContentPresenter x:Name="ContentPresenter" Grid.Column="1" Margin="{ThemeResource ButtonContentMargin}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" CharacterSpacing="{TemplateBinding CharacterSpacing}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                  </Grid>
                </um:Ripple.Content>
              </um:Ripple>
            </Grid>
          </toolkit:ElevatedView>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialFilledTonalButtonStyle" BasedOn="{StaticResource MaterialBaseButtonStyle}" TargetType="Button">
    <Setter Property="Foreground" Value="{ThemeResource FilledTonalButtonForeground}" />
    <Setter Property="Background" Value="{ThemeResource FilledTonalButtonBackground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource FilledTonalButtonBorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <toolkit:ElevatedView x:Name="ElevatedView" Margin="{ThemeResource ButtonMargin}" Elevation="{ThemeResource ButtonElevation}" CornerRadius="{TemplateBinding CornerRadius}" Background="Transparent">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <VisualState.Setters>
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource FilledTonalButtonIconForeground}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource FilledTonalButtonBackgroundPointerOver}" />
                    <Setter Target="StateLayer.Background" Value="{ThemeResource FilledTonalButtonStateLayerBackgroundPointerOver}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource FilledTonalButtonIconForegroundPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource FilledTonalButtonForegroundPointerOver}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource FilledTonalButtonBorderBrushPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource FilledTonalButtonBackgroundPressed}" />
                    <Setter Target="StateLayer.Background" Value="{ThemeResource FilledTonalButtonStateLayerBackgroundPressed}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource FilledTonalButtonIconForegroundPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource FilledTonalButtonForegroundPressed}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource FilledTonalButtonBorderBrushPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource FilledTonalButtonBackgroundDisabled}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource FilledTonalButtonIconForegroundDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource FilledTonalButtonForegroundDisabled}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource FilledTonalButtonBorderBrushDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource FilledTonalButtonBackgroundFocused}" />
                    <Setter Target="StateLayer.Background" Value="{ThemeResource FilledTonalButtonStateLayerBackgroundFocused}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource FilledTonalButtonIconForegroundFocused}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource FilledTonalButtonForegroundFocused}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource FilledTonalButtonBorderBrushFocused}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerFocused">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource FilledTonalButtonBackgroundPointerFocused}" />
                    <Setter Target="StateLayer.Background" Value="{ThemeResource FilledTonalButtonStateLayerBackgroundPointerFocused}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource FilledTonalButtonIconForegroundPointerFocused}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource FilledTonalButtonForegroundPointerFocused}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource FilledTonalButtonBorderBrushPointerFocused}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="Root" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
              <Border x:Name="StateLayer" Background="Transparent" CornerRadius="{TemplateBinding CornerRadius}" />
              <um:Ripple x:Name="Ripple" Feedback="{TemplateBinding Foreground}" FeedbackOpacity="{StaticResource PressedOpacity}" CornerRadius="{TemplateBinding CornerRadius}" Padding="{TemplateBinding Padding}" AutomationProperties.AccessibilityView="Raw" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}">
                <um:Ripple.Content>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="IconPresenter" Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}" MinWidth="{ThemeResource ButtonIconMinWidth}" HorizontalAlignment="{StaticResource ButtonIconHorizontalAlignment}" VerticalAlignment="{StaticResource ButtonIconVerticalAlignment}" Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    <ContentPresenter x:Name="ContentPresenter" Grid.Column="1" Margin="{ThemeResource ButtonContentMargin}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" CharacterSpacing="{TemplateBinding CharacterSpacing}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                  </Grid>
                </um:Ripple.Content>
              </um:Ripple>
            </Grid>
          </toolkit:ElevatedView>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialOutlinedButtonStyle" BasedOn="{StaticResource MaterialBaseButtonStyle}" TargetType="Button">
    <Setter Property="Foreground" Value="{ThemeResource OutlinedButtonForeground}" />
    <!-- Following  M3 Guidelines and Uno Figma file: -->
    <!-- Background is Optional and Default is Transparent -->
    <Setter Property="Background" Value="{ThemeResource OutlinedButtonBackground}" />
    <Setter Property="BorderThickness" Value="{ThemeResource OutlinedButtonBorderThickness}" />
    <Setter Property="BorderBrush" Value="{ThemeResource OutlinedButtonBorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="Root" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <VisualState.Setters>
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource OutlinedButtonIconForeground}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource OutlinedButtonBackgroundPointerOver}" />
                    <Setter Target="StateLayer.Background" Value="{ThemeResource OutlinedButtonStateLayerBackgroundPointerOver}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource OutlinedButtonIconForegroundPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource OutlinedButtonForegroundPointerOver}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource OutlinedButtonBorderBrushPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource OutlinedButtonBackgroundPressed}" />
                    <Setter Target="StateLayer.Background" Value="{ThemeResource OutlinedButtonStateLayerBackgroundPressed}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource OutlinedButtonIconForegroundPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource OutlinedButtonForegroundPressed}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource OutlinedButtonBorderBrushPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource OutlinedButtonBackgroundDisabled}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource OutlinedButtonIconForegroundDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource OutlinedButtonForegroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource OutlinedButtonBackgroundFocused}" />
                    <Setter Target="StateLayer.Background" Value="{ThemeResource OutlinedButtonStateLayerBackgroundFocused}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource OutlinedButtonIconForegroundFocused}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource OutlinedButtonForegroundFocused}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource OutlinedButtonBorderBrushFocused}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerFocused">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource OutlinedButtonBackgroundPointerFocused}" />
                    <Setter Target="StateLayer.Background" Value="{ThemeResource OutlinedButtonStateLayerBackgroundPointerFocused}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource OutlinedButtonIconForegroundPointerFocused}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource OutlinedButtonForegroundPointerFocused}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource OutlinedButtonBorderBrushPointerFocused}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="StateLayer" Background="Transparent" CornerRadius="{TemplateBinding CornerRadius}" />
            <um:Ripple x:Name="Ripple" Feedback="{TemplateBinding Foreground}" FeedbackOpacity="{StaticResource PressedOpacity}" CornerRadius="{TemplateBinding CornerRadius}" Padding="{TemplateBinding Padding}" AutomationProperties.AccessibilityView="Raw" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}">
              <um:Ripple.Content>
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <ContentPresenter x:Name="IconPresenter" Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}" MinWidth="{ThemeResource ButtonIconMinWidth}" HorizontalAlignment="{StaticResource ButtonIconHorizontalAlignment}" VerticalAlignment="{StaticResource ButtonIconVerticalAlignment}" Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
                  <ContentPresenter x:Name="ContentPresenter" Grid.Column="1" Margin="{ThemeResource ButtonContentMargin}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" CharacterSpacing="{TemplateBinding CharacterSpacing}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                </Grid>
              </um:Ripple.Content>
            </um:Ripple>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialTextButtonStyle" BasedOn="{StaticResource MaterialBaseButtonStyle}" TargetType="Button">
    <Setter Property="Foreground" Value="{ThemeResource TextButtonForeground}" />
    <Setter Property="Background" Value="{ThemeResource TextButtonBackground}" />
    <Setter Property="Padding" Value="{ThemeResource TextButtonPadding}" />
    <Setter Property="BorderBrush" Value="{ThemeResource TextButtonBorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="Root" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <VisualState.Setters>
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource TextButtonIconForeground}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource TextButtonBackgroundPointerOver}" />
                    <Setter Target="StateLayer.Background" Value="{ThemeResource TextButtonStateLayerBackgroundPointerOver}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource TextButtonIconForegroundPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TextButtonForegroundPointerOver}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource TextButtonBorderBrushPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource TextButtonBackgroundPressed}" />
                    <Setter Target="StateLayer.Background" Value="{ThemeResource TextButtonStateLayerBackgroundPressed}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource TextButtonIconForegroundPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TextButtonForegroundPressed}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource TextButtonBorderBrushPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource TextButtonIconForegroundDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TextButtonForegroundDisabled}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource TextButtonBorderBrushDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource TextButtonBackgroundFocused}" />
                    <Setter Target="StateLayer.Background" Value="{ThemeResource TextButtonStateLayerBackgroundFocused}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource TextButtonIconForegroundFocused}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TextButtonForegroundFocused}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource TextButtonBorderBrushFocused}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerFocused">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource TextButtonBackgroundPointerFocused}" />
                    <Setter Target="StateLayer.Background" Value="{ThemeResource TextButtonStateLayerBackgroundPointerFocused}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource TextButtonIconForegroundPointerFocused}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TextButtonForegroundPointerFocused}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource TextButtonBorderBrushPointerFocused}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="StateLayer" Background="Transparent" CornerRadius="{TemplateBinding CornerRadius}" />
            <um:Ripple x:Name="Ripple" Feedback="{TemplateBinding Foreground}" FeedbackOpacity="{StaticResource PressedOpacity}" CornerRadius="{TemplateBinding CornerRadius}" Padding="{TemplateBinding Padding}" AutomationProperties.AccessibilityView="Raw" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}">
              <um:Ripple.Content>
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <ContentPresenter x:Name="IconPresenter" Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}" Margin="{ThemeResource TextButtonIconMargin}" MinWidth="{ThemeResource ButtonIconMinWidth}" HorizontalAlignment="{StaticResource ButtonIconHorizontalAlignment}" VerticalAlignment="{StaticResource ButtonIconVerticalAlignment}" Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
                  <ContentPresenter x:Name="ContentPresenter" Grid.Column="1" Margin="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToTextButtonMarginConverter}, FallbackValue=0, TargetNullValue=0}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" CharacterSpacing="{TemplateBinding CharacterSpacing}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                </Grid>
              </um:Ripple.Content>
            </um:Ripple>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialIconButtonStyle" BasedOn="{StaticResource MaterialBaseButtonStyle}" TargetType="Button">
    <Setter Property="Foreground" Value="{ThemeResource IconButtonForeground}" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="RootGrid" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="HoverOverlay.Opacity" Value="{ThemeResource IconButtonOpacityVisibleState}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="PressedOverlay.Opacity" Value="{ThemeResource IconButtonOpacityVisibleState}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="FocusedOverlay.Opacity" Value="{ThemeResource IconButtonOpacityVisibleState}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource IconButtonForegroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <!-- Ellipse for PointerOver State -->
            <Ellipse x:Name="HoverOverlay" HorizontalAlignment="{StaticResource IconButtonEllipseHorizontalAlignment}" VerticalAlignment="{StaticResource IconButtonEllipseVerticalAlignment}" Fill="{ThemeResource IconButtonEllipseFillPointerOver}" Opacity="{ThemeResource IconButtonOpacityHiddenState}" />
            <!-- Ellipse for Pressed State -->
            <Ellipse x:Name="PressedOverlay" HorizontalAlignment="{StaticResource IconButtonEllipseHorizontalAlignment}" VerticalAlignment="{StaticResource IconButtonEllipseVerticalAlignment}" Fill="{ThemeResource IconButtonEllipseFillPressed}" Opacity="{ThemeResource IconButtonOpacityHiddenState}" />
            <!-- Ellipse for Focused State -->
            <Ellipse x:Name="FocusedOverlay" HorizontalAlignment="{StaticResource IconButtonEllipseHorizontalAlignment}" VerticalAlignment="{StaticResource IconButtonEllipseVerticalAlignment}" Fill="{ThemeResource IconButtonEllipseFillFocused}" Opacity="{ThemeResource IconButtonOpacityHiddenState}" />
            <!-- Content -->
            <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialDefaultButtonStyle" TargetType="Button" BasedOn="{StaticResource MaterialFilledButtonStyle}" />
  <!--origin: Styles\Controls\v2\CalendarDatePicker.xaml-->
  <Style x:Key="MaterialCalendarDatePickerStyle" TargetType="CalendarDatePicker">
    <Setter Property="Foreground" Value="{ThemeResource CalendarDatePickerForeground}" />
    <Setter Property="Background" Value="{ThemeResource CalendarDatePickerBackground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource CalendarDatePickerBorderBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource CalendarDatePickerBorderThemeThickness}" />
    <Setter Property="CalendarViewStyle" Value="{StaticResource MaterialCalendarViewStyle}" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Height" Value="{ThemeResource CalendarDatePickerHeight}" />
    <Setter Property="UseSystemFocusVisuals" Value="{ThemeResource IsApplicationFocusVisualKindReveal}" />
    <not_win:Setter Property="CornerRadius" Value="{ThemeResource CalendarDatePickerCornerRadius}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="CalendarDatePicker">
          <Grid x:Name="Root" Height="{TemplateBinding Height}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBackgroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBorderBrushPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBackgroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBorderBrushPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBackgroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBorderBrushDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerHeaderForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DateText" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerTextForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CalendarGlyph" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerCalendarGlyphForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Unfocused" />
                <VisualState x:Name="PointerFocused" />
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerBackgroundFocused}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DateText" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerTextForegroundSelected}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="HeaderStates">
                <VisualState x:Name="TopHeader" />
                <VisualState x:Name="LeftHeader">
                  <VisualState.Setters>
                    <Setter Target="HeaderContentPresenter.(Grid.Row)" Value="1" />
                    <Setter Target="HeaderContentPresenter.(Grid.Column)" Value="0" />
                    <Setter Target="HeaderContentPresenter.(Grid.ColumnSpan)" Value="1" />
                    <Setter Target="HeaderContentPresenter.Margin" Value="{StaticResource CalendarDatePickerLeftHeaderMargin}" />
                    <Setter Target="HeaderContentPresenter.MaxWidth" Value="{StaticResource CalendarDatePickerLeftHeaderMaxWidth}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <FlyoutBase.AttachedFlyout>
              <Flyout Placement="Bottom" ShouldConstrainToRootBounds="False">
                <Flyout.FlyoutPresenterStyle>
                  <Style TargetType="FlyoutPresenter">
                    <Setter Property="Padding" Value="{ThemeResource CalendarDatePickerFlyoutPresenterPadding}" />
                    <Setter Property="BorderThickness" Value="{ThemeResource CalendarDatePickerFlyoutPresenterMargin}" />
                    <Setter Property="IsDefaultShadowEnabled" Value="True" />
                    <Setter Property="CornerRadius" Value="{ThemeResource CalendarDatePickerFlyoutPresenterCornerRadius}" />
                    <Setter Property="Template">
                      <Setter.Value>
                        <ControlTemplate TargetType="FlyoutPresenter">
                          <ContentPresenter Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" CornerRadius="{TemplateBinding CornerRadius}" />
                        </ControlTemplate>
                      </Setter.Value>
                    </Setter>
                  </Style>
                </Flyout.FlyoutPresenterStyle>
                <CalendarView x:Name="CalendarView" Style="{TemplateBinding CalendarViewStyle}" MinDate="{TemplateBinding MinDate}" MaxDate="{TemplateBinding MaxDate}" IsTodayHighlighted="{TemplateBinding IsTodayHighlighted}" DisplayMode="{TemplateBinding DisplayMode}" FirstDayOfWeek="{TemplateBinding FirstDayOfWeek}" DayOfWeekFormat="{TemplateBinding DayOfWeekFormat}" IsOutOfScopeEnabled="{TemplateBinding IsOutOfScopeEnabled}" IsGroupLabelVisible="{TemplateBinding IsGroupLabelVisible}" CornerRadius="{ThemeResource CalendarDatePickerCalendarViewCornerRadius}" />
              </Flyout>
            </FlyoutBase.AttachedFlyout>
            <Border x:Name="Background" Background="{ThemeResource CalendarDatePickerBackground}" BorderBrush="{ThemeResource CalendarDatePickerBorderBrush}" CornerRadius="{ThemeResource CalendarDatePickerBackgroundCornerRadius}" Control.IsTemplateFocusTarget="True" MinHeight="{ThemeResource CalendarDatePickerBackgroundMinHeight}" />
            <!-- Border -->
            <Rectangle x:Name="BottomBorder" VerticalAlignment="Bottom" Fill="{ThemeResource CalendarDatePickerBottomBorderBrush}" Height="2" />
            <Grid Margin="{ThemeResource CalendarDatePickerContentMargin}" VerticalAlignment="Center">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <!-- Header -->
              <TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Top" Text="{TemplateBinding Header}" Style="{ThemeResource CalendarDatePickerHeaderStyle}" Foreground="{ThemeResource CalendarDatePickerHeaderForeground}" TextWrapping="Wrap" />
              <!-- DateText -->
              <TextBlock x:Name="DateText" Grid.Row="1" Text="{TemplateBinding PlaceholderText}" Style="{ThemeResource CalendarDatePickerTextStyle}" Foreground="{ThemeResource CalendarDatePickerTextForeground}" />
            </Grid>
            <Grid Visibility="Collapsed">
              <FontIcon x:Name="CalendarGlyph" />
              <ContentPresenter x:Name="DescriptionPresenter" />
              <ContentPresenter x:Name="HeaderContentPresenter" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialDefaultCalendarDatePickerStyle" TargetType="CalendarDatePicker" BasedOn="{StaticResource MaterialCalendarDatePickerStyle}" />
  <!--origin: Styles\Controls\v2\CalendarView.xaml-->
  <x:String x:Key="MaterialDownArrowPathData">M0,0L32,0 16,19.745z</x:String>
  <SolidColorBrush x:Key="MaterialCalendarViewTodayForeground" Color="{ThemeResource OnSurfaceColor}" Opacity="0.87" />
  <SolidColorBrush x:Key="MaterialCalendarViewBlackoutForeground" Color="{ThemeResource OnSurfaceColor}" Opacity="0.38" />
  <Style x:Key="MaterialCalendarViewStyle" TargetType="CalendarView">
    <Setter Property="FocusBorderBrush" Value="{ThemeResource PrimaryFocusedBrush}" />
    <Setter Property="SelectedHoverBorderBrush" Value="{ThemeResource PrimaryBrush}" />
    <Setter Property="SelectedPressedBorderBrush" Value="{ThemeResource PrimaryBrush}" />
    <Setter Property="SelectedBorderBrush" Value="{ThemeResource PrimaryBrush}" />
    <Setter Property="HoverBorderBrush" Value="{ThemeResource PrimaryHoverBrush}" />
    <Setter Property="PressedBorderBrush" Value="{ThemeResource PrimaryBrush}" />
    <Setter Property="CalendarItemBorderBrush" Value="{ThemeResource CalendarViewCalendarItemRevealBorderBrush}" />
    <Setter Property="TodayForeground" Value="{StaticResource MaterialCalendarViewTodayForeground}" />
    <Setter Property="BlackoutForeground" Value="{StaticResource MaterialCalendarViewBlackoutForeground}" />
    <Setter Property="SelectedForeground" Value="{ThemeResource OnPrimaryBrush}" />
    <Setter Property="PressedForeground" Value="{ThemeResource CalendarViewPressedForeground}" />
    <Setter Property="OutOfScopeForeground" Value="{ThemeResource CalendarViewOutOfScopeForeground}" />
    <Setter Property="CalendarItemForeground" Value="{ThemeResource CalendarViewCalendarItemForeground}" />
    <Setter Property="OutOfScopeBackground" Value="{ThemeResource CalendarViewOutOfScopeBackground}" />
    <Setter Property="CalendarItemBackground" Value="{ThemeResource CalendarViewCalendarItemRevealBackground}" />
    <Setter Property="Foreground" Value="{ThemeResource OnPrimaryBrush}" />
    <Setter Property="Background" Value="{ThemeResource PrimaryBrush}" />
    <Setter Property="BorderBrush" Value="{ThemeResource SurfaceBrush}" />
    <Setter Property="DayItemFontFamily" Value="{ThemeResource MaterialRegularFontFamily}" />
    <Setter Property="DayItemFontSize" Value="14" />
    <Setter Property="FirstOfMonthLabelFontFamily" Value="{ThemeResource MaterialRegularFontFamily}" />
    <Setter Property="FirstOfMonthLabelFontSize" Value="0" />
    <Setter Property="MonthYearItemFontFamily" Value="{ThemeResource MaterialRegularFontFamily}" />
    <Setter Property="FontFamily" Value="{ThemeResource MaterialRegularFontFamily}" />
    <Setter Property="MonthYearItemFontSize" Value="14" />
    <Setter Property="FirstOfYearDecadeLabelFontFamily" Value="{ThemeResource MaterialRegularFontFamily}" />
    <not_win:Setter Property="CalendarItemBorderThickness" Value="0" />
    <not_win:Setter Property="BorderThickness" Value="0" />
    <win:Setter Property="CalendarItemBorderThickness" Value="2" />
    <win:Setter Property="BorderThickness" Value="1" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
    <not_win:Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <not_win:Setter Property="DayItemCornerRadius" Value="20" />
    <not_win:Setter Property="CalendarItemCornerRadius" Value="40" />
    <not_win:Setter Property="SelectedBackground" Value="{ThemeResource PrimaryBrush}" />
    <not_win:Setter Property="TodaySelectedBackground" Value="{ThemeResource PrimaryBrush}" />
    <not_win:Setter Property="TodayBackground" Value="Transparent" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="CalendarView">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <Border.Resources>
              <Style x:Key="MaterialWeekDayNameStyle" BasedOn="{StaticResource MaterialBodySmall}" TargetType="TextBlock">
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
              </Style>
              <Style x:Key="MaterialNavigationButtonStyle" TargetType="Button">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Background" Value="{ThemeResource CalendarViewNavigationButtonBackground}" />
                <Setter Property="BackgroundSizing" Value="OuterBorderEdge" />
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="Button">
                      <ContentPresenter x:Name="Text" Margin="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Background="{TemplateBinding Background}" BackgroundSizing="{TemplateBinding BackgroundSizing}" BorderBrush="{ThemeResource CalendarViewNavigationButtonBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Content="{TemplateBinding Content}">
                        <VisualStateManager.VisualStateGroups>
                          <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal" />
                            <VisualState x:Name="PointerOver">
                              <VisualState.Setters>
                                <Setter Target="Text.BorderBrush" Value="{ThemeResource CalendarViewNavigationButtonBorderBrushPointerOver}" />
                                <Setter Target="Text.Foreground" Value="{ThemeResource OnPrimaryMediumBrush}" />
                              </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                              <VisualState.Setters>
                                <Setter Target="Text.Foreground" Value="{ThemeResource OnPrimaryLowBrush}" />
                              </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Disabled" />
                          </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                      </ContentPresenter>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
              <Style TargetType="Button" x:Key="MaterialHeaderButtonStyle" BasedOn="{StaticResource MaterialNavigationButtonStyle}">
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="Button">
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="4" />
                          <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="Text" Background="{TemplateBinding Background}" BackgroundSizing="{TemplateBinding BackgroundSizing}" BorderBrush="{ThemeResource CalendarViewNavigationButtonBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" />
                        <Path x:Name="DownArrowGlyph" Data="{StaticResource MaterialDownArrowPathData}" Fill="{TemplateBinding Foreground}" Stretch="Uniform" Height="5" Width="10" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="2" />
                        <VisualStateManager.VisualStateGroups>
                          <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal" />
                            <VisualState x:Name="PointerOver">
                              <VisualState.Setters>
                                <Setter Target="Text.BorderBrush" Value="{ThemeResource CalendarViewNavigationButtonBorderBrushPointerOver}" />
                                <Setter Target="Text.Foreground" Value="{ThemeResource OnPrimaryMediumBrush}" />
                                <Setter Target="DownArrowGlyph.Fill" Value="{ThemeResource OnPrimaryMediumBrush}" />
                              </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                              <VisualState.Setters>
                                <Setter Target="Text.Foreground" Value="{ThemeResource OnPrimaryLowBrush}" />
                                <Setter Target="DownArrowGlyph.Fill" Value="{ThemeResource OnPrimaryLowBrush}" />
                              </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                              <VisualState.Setters>
                                <Setter Target="DownArrowGlyph.Opacity" Value="0" />
                              </VisualState.Setters>
                            </VisualState>
                          </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                      </Grid>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
              <Style x:Key="MaterialScrollViewerStyle" TargetType="ScrollViewer">
                <Setter Property="HorizontalScrollMode" Value="Disabled" />
                <Setter Property="VerticalScrollMode" Value="Enabled" />
                <Setter Property="VerticalSnapPointsType" Value="Optional" />
                <Setter Property="ZoomMode" Value="Disabled" />
                <Setter Property="TabNavigation" Value="Once" />
                <Setter Property="BringIntoViewOnFocusChange" Value="False" />
                <Setter Property="Template" Value="{StaticResource ScrollViewerScrollBarlessTemplate}" />
                <not_win:Setter Property="(uno:ScrollViewer.ShouldFallBackToNativeScrollBars)" Value="False" />
              </Style>
            </Border.Resources>
            <Grid MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.MinViewWidth}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
              <Grid.RowDefinitions>
                <RowDefinition Height="40" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="5*" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Button x:Name="HeaderButton" Padding="12,0,0,0" HorizontalContentAlignment="Left" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.HeaderText}" Foreground="{TemplateBinding Foreground}" IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.HasMoreViews}" Style="{StaticResource MaterialHeaderButtonStyle}" />
                <Button x:Name="PreviousButton" Grid.Column="1" Padding="1" HorizontalContentAlignment="Center" Content="&#xE76B;" FontFamily="{ThemeResource SymbolThemeFontFamily}" Foreground="{TemplateBinding Foreground}" IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.HasMoreContentBefore}" IsTabStop="True" Style="{StaticResource MaterialNavigationButtonStyle}" />
                <Button x:Name="NextButton" Grid.Column="2" Padding="1" HorizontalContentAlignment="Center" Content="&#xE76C;" FontFamily="{ThemeResource SymbolThemeFontFamily}" Foreground="{TemplateBinding Foreground}" IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.HasMoreContentAfter}" IsTabStop="True" Style="{StaticResource MaterialNavigationButtonStyle}" />
              </Grid>
              <Grid x:Name="Views" Grid.Row="1">
                <!--<Grid.Clip>
                                    <RectangleGeometry Rect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ClipRect}" />
                                </Grid.Clip>-->
                <Border x:Name="BackgroundLayer" Background="{TemplateBinding BorderBrush}">
                  <Border.RenderTransform>
                    <ScaleTransform x:Name="BackgroundTransform" CenterX="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CenterX}" CenterY="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CenterY}" />
                  </Border.RenderTransform>
                </Border>
                <Grid x:Name="MonthView">
                  <Grid.RowDefinitions>
                    <RowDefinition Height="38" />
                    <RowDefinition Height="*" />
                  </Grid.RowDefinitions>
                  <Grid.RenderTransform>
                    <ScaleTransform x:Name="MonthViewTransform" CenterX="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CenterX}" CenterY="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CenterY}" />
                  </Grid.RenderTransform>
                  <Grid x:Name="WeekDayNames" Background="{TemplateBinding Background}">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock x:Name="WeekDay1" Style="{StaticResource MaterialWeekDayNameStyle}" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource FirstCharacterConverter}, Path=TemplateSettings.WeekDay1}" />
                    <TextBlock x:Name="WeekDay2" Grid.Column="1" Style="{StaticResource MaterialWeekDayNameStyle}" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource FirstCharacterConverter}, Path=TemplateSettings.WeekDay2}" />
                    <TextBlock x:Name="WeekDay3" Grid.Column="2" Style="{StaticResource MaterialWeekDayNameStyle}" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource FirstCharacterConverter}, Path=TemplateSettings.WeekDay3}" />
                    <TextBlock x:Name="WeekDay4" Grid.Column="3" Style="{StaticResource MaterialWeekDayNameStyle}" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource FirstCharacterConverter}, Path=TemplateSettings.WeekDay4}" />
                    <TextBlock x:Name="WeekDay5" Grid.Column="4" Style="{StaticResource MaterialWeekDayNameStyle}" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource FirstCharacterConverter}, Path=TemplateSettings.WeekDay5}" />
                    <TextBlock x:Name="WeekDay6" Grid.Column="5" Style="{StaticResource MaterialWeekDayNameStyle}" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource FirstCharacterConverter}, Path=TemplateSettings.WeekDay6}" />
                    <TextBlock x:Name="WeekDay7" Grid.Column="6" Style="{StaticResource MaterialWeekDayNameStyle}" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource FirstCharacterConverter}, Path=TemplateSettings.WeekDay7}" />
                  </Grid>
                  <ScrollViewer x:Name="MonthViewScrollViewer" Grid.Row="1" IsFocusEngagementEnabled="True" Style="{StaticResource MaterialScrollViewerStyle}">
                    <CalendarPanel x:Name="MonthViewPanel" />
                  </ScrollViewer>
                </Grid>
                <!-- Uno only: Opacity set to 0 to avoid flicker when changing display mode -->
                <ScrollViewer x:Name="YearViewScrollViewer" IsFocusEngagementEnabled="True" Opacity="0" Style="{StaticResource MaterialScrollViewerStyle}" UseLayoutRounding="False" Visibility="Collapsed">
                  <ScrollViewer.RenderTransform>
                    <ScaleTransform x:Name="YearViewTransform" CenterX="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CenterX}" CenterY="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CenterY}" />
                  </ScrollViewer.RenderTransform>
                  <CalendarPanel x:Name="YearViewPanel" />
                </ScrollViewer>
                <!-- Uno only: Opacity set to 0 to avoid flicker when changing display mode -->
                <ScrollViewer x:Name="DecadeViewScrollViewer" IsFocusEngagementEnabled="True" Opacity="0" Style="{StaticResource MaterialScrollViewerStyle}" UseLayoutRounding="False" Visibility="Collapsed">
                  <ScrollViewer.RenderTransform>
                    <ScaleTransform x:Name="DecadeViewTransform" CenterX="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CenterX}" CenterY="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CenterY}" />
                  </ScrollViewer.RenderTransform>
                  <CalendarPanel x:Name="DecadeViewPanel" />
                </ScrollViewer>
              </Grid>
            </Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WeekDay1" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarViewWeekDayForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WeekDay2" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarViewWeekDayForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WeekDay3" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarViewWeekDayForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WeekDay4" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarViewWeekDayForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WeekDay5" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarViewWeekDayForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WeekDay6" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarViewWeekDayForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WeekDay7" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarViewWeekDayForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="HeaderButtonStates">
                <VisualState x:Name="ViewChanged" />
                <VisualState x:Name="ViewChanging">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HeaderButton" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.167" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DisplayModeStates">
                <VisualState x:Name="Month" />
                <VisualState x:Name="Year">
                  <!-- Begin: Uno only -->
                  <VisualState.Setters>
                    <Setter Target="YearViewScrollViewer.IsHitTestVisible" Value="True" />
                  </VisualState.Setters>
                  <!-- End: Uno only -->
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MonthViewScrollViewer" Storyboard.TargetProperty="IsEnabled">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MonthView" Storyboard.TargetProperty="Opacity">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="0" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="YearViewScrollViewer" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <!-- Begin: Uno only - We changed the default value to avoid flicker, make sure to set it to 1 even if transitions are disabled -->
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="YearViewScrollViewer" Storyboard.TargetProperty="Opacity">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <!-- End: Uno only -->
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Decade">
                  <!-- Begin: Uno only -->
                  <VisualState.Setters>
                    <Setter Target="DecadeViewScrollViewer.IsHitTestVisible" Value="True" />
                  </VisualState.Setters>
                  <!-- End: Uno only -->
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MonthViewScrollViewer" Storyboard.TargetProperty="IsEnabled">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MonthView" Storyboard.TargetProperty="Opacity">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="0" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DecadeViewScrollViewer" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <!-- Begin: Uno only - We changed the default value to avoid flicker, make sure to set it to 1 even if transitions are disabled -->
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DecadeViewScrollViewer" Storyboard.TargetProperty="Opacity">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <!-- End: Uno only -->
                  </Storyboard>
                </VisualState>
                <VisualStateGroup.Transitions>
                  <VisualTransition From="Month" To="Year">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MonthView" Storyboard.TargetProperty="Opacity">
                        <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.233" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="YearViewScrollViewer" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.233" Value="0" />
                        <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.733" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <!-- Uno only: Make sure to set visibility only AFTER opacity -->
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="YearViewScrollViewer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundLayer" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                        <LinearDoubleKeyFrame KeyTime="0:0:0.250" Value="0" />
                        <SplineDoubleKeyFrame KeySpline="0.15,0.64,0.25,1" KeyTime="0:0:0.733" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="Year" To="Month">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="YearViewScrollViewer" Storyboard.TargetProperty="IsHitTestVisible">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="False" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="YearViewScrollViewer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="YearViewScrollViewer" Storyboard.TargetProperty="Opacity">
                        <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.233" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MonthView" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.233" Value="0" />
                        <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.733" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundLayer" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                        <LinearDoubleKeyFrame KeyTime="0:0:0.250" Value="0" />
                        <SplineDoubleKeyFrame KeySpline="0.15,0.64,0.25,1" KeyTime="0:0:0.733" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="Year" To="Decade">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MonthView" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="YearViewScrollViewer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="YearViewScrollViewer" Storyboard.TargetProperty="Opacity">
                        <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.233" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DecadeViewScrollViewer" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.233" Value="0" />
                        <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.733" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <!-- Uno only: Make sure to set visibility only AFTER opacity -->
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DecadeViewScrollViewer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundLayer" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                        <LinearDoubleKeyFrame KeyTime="0:0:0.250" Value="0" />
                        <SplineDoubleKeyFrame KeySpline="0.15,0.64,0.25,1" KeyTime="0:0:0.733" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="Decade" To="Year">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MonthView" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="YearViewScrollViewer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DecadeViewScrollViewer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DecadeViewScrollViewer" Storyboard.TargetProperty="IsHitTestVisible">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="False" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DecadeViewScrollViewer" Storyboard.TargetProperty="Opacity">
                        <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.233" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="YearViewScrollViewer" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.233" Value="0" />
                        <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.733" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundLayer" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                        <LinearDoubleKeyFrame KeyTime="0:0:0.250" Value="0" />
                        <SplineDoubleKeyFrame KeySpline="0.15,0.64,0.25,1" KeyTime="0:0:0.733" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialDefaultCalendarViewStyle" TargetType="CalendarView" BasedOn="{StaticResource MaterialCalendarViewStyle}" />
  <!--origin: Styles\Controls\v2\CheckBox.xaml-->
  <um:FromBoolToValueConverter x:Key="CheckBoxIsCheckedToFocusStateCircleVisible" TrueValue="Visible" FalseValue="Collapsed" NullValue="Visible" />
  <um:FromBoolToValueConverter x:Key="CheckBoxIsCheckedToFocusStateCircleCollapsed" TrueValue="Collapsed" FalseValue="Visible" NullValue="Collapsed" />
  <Style x:Key="MaterialCheckBoxStyle" TargetType="CheckBox">
    <Setter Property="Background" Value="{ThemeResource CheckBoxBackgroundUnchecked}" />
    <Setter Property="Foreground" Value="{ThemeResource CheckBoxForegroundUnchecked}" />
    <!-- Start: Body Small Typo -->
    <Setter Property="FontFamily" Value="{ThemeResource CheckBoxFontFamily}" />
    <Setter Property="FontWeight" Value="{ThemeResource CheckBoxFontWeight}" />
    <Setter Property="FontSize" Value="{ThemeResource CheckBoxFontSize}" />
    <Setter Property="CharacterSpacing" Value="{ThemeResource CheckBoxCharacterSpacing}" />
    <!-- End: Body Small Typo -->
    <Setter Property="BorderBrush" Value="{ThemeResource CheckBoxBorderBrushUnchecked}" />
    <Setter Property="Padding" Value="{ThemeResource CheckBoxCheckAreaPadding}" />
    <Setter Property="CornerRadius" Value="{ThemeResource CheckBoxCheckAreaCornerRadius}" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="MinWidth" Value="0" />
    <Setter Property="MinHeight" Value="{ThemeResource CheckBoxCheckAreaSize}" />
    <Setter Property="UseSystemFocusVisuals" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="CheckBox">
          <Grid x:Name="Root" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CombinedStates">
                <VisualState x:Name="UncheckedNormal">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource CheckBoxBackgroundUnchecked}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource CheckBoxBorderBrushUnchecked}" />
                    <Setter Target="BackgroundBorder.Background" Value="{ThemeResource CheckBoxCheckBackgroundFillUnchecked}" />
                    <Setter Target="BackgroundBorder.BorderBrush" Value="{ThemeResource CheckBoxCheckBackgroundStrokeUnchecked}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource CheckBoxForegroundUnchecked}" />
                    <Setter Target="CheckGlyph.Fill" Value="{ThemeResource CheckBoxGlyphForegroundUnchecked}" />
                    <Setter Target="CheckGlyph.Opacity" Value="0" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="UncheckedPointerOver">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource CheckBoxBackgroundUncheckedPointerOver}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource CheckBoxBorderBrushUncheckedPointerOver}" />
                    <Setter Target="BackgroundBorder.Background" Value="{ThemeResource CheckBoxCheckBackgroundFillUncheckedPointerOver}" />
                    <Setter Target="BackgroundBorder.BorderBrush" Value="{ThemeResource CheckBoxCheckBackgroundStrokeUncheckedPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource CheckBoxForegroundUncheckedPointerOver}" />
                    <Setter Target="CheckGlyph.Fill" Value="{ThemeResource CheckBoxGlyphForegroundUncheckedPointerOver}" />
                    <Setter Target="CheckGlyph.Opacity" Value="0" />
                    <Setter Target="PointerStateCircle.Fill" Value="{ThemeResource CheckBoxStateCircleFillUnchecked}" />
                    <Setter Target="PointerStateCircle.Opacity" Value="{ThemeResource CheckBoxStateCircleOpacityPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="UncheckedPressed">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource CheckBoxBackgroundUncheckedPressed}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource CheckBoxBorderBrushUncheckedPressed}" />
                    <Setter Target="BackgroundBorder.Background" Value="{ThemeResource CheckBoxCheckBackgroundFillUncheckedPressed}" />
                    <Setter Target="BackgroundBorder.BorderBrush" Value="{ThemeResource CheckBoxCheckBackgroundStrokeUncheckedPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource CheckBoxForegroundUncheckedPressed}" />
                    <Setter Target="CheckGlyph.Fill" Value="{ThemeResource CheckBoxGlyphForegroundUncheckedPressed}" />
                    <Setter Target="CheckGlyph.Opacity" Value="0" />
                    <Setter Target="PointerStateCircle.Fill" Value="{ThemeResource CheckBoxStateCircleFillUnchecked}" />
                    <Setter Target="PointerStateCircle.Opacity" Value="{ThemeResource CheckBoxStateCircleOpacityPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="UncheckedDisabled">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource CheckBoxBackgroundUncheckedDisabled}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource CheckBoxBorderBrushUncheckedDisabled}" />
                    <Setter Target="BackgroundBorder.Background" Value="{ThemeResource CheckBoxCheckBackgroundFillUncheckedDisabled}" />
                    <Setter Target="BackgroundBorder.BorderBrush" Value="{ThemeResource CheckBoxCheckBackgroundStrokeUncheckedDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource CheckBoxForegroundUncheckedDisabled}" />
                    <Setter Target="CheckGlyph.Fill" Value="{ThemeResource CheckBoxGlyphForegroundUncheckedDisabled}" />
                    <Setter Target="CheckGlyph.Opacity" Value="0" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CheckedNormal">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource CheckBoxBackgroundChecked}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource CheckBoxBorderBrushChecked}" />
                    <Setter Target="BackgroundBorder.Background" Value="{ThemeResource CheckBoxCheckBackgroundFillChecked}" />
                    <Setter Target="BackgroundBorder.BorderBrush" Value="{ThemeResource CheckBoxCheckBackgroundStrokeChecked}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource CheckBoxForegroundChecked}" />
                    <Setter Target="CheckGlyph.Fill" Value="{ThemeResource CheckBoxGlyphForegroundChecked}" />
                    <Setter Target="CheckGlyph.Opacity" Value="1" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CheckedPointerOver">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource CheckBoxBackgroundCheckedPointerOver}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource CheckBoxBorderBrushCheckedPointerOver}" />
                    <Setter Target="BackgroundBorder.Background" Value="{ThemeResource CheckBoxCheckBackgroundFillCheckedPointerOver}" />
                    <Setter Target="BackgroundBorder.BorderBrush" Value="{ThemeResource CheckBoxCheckBackgroundStrokeCheckedPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource CheckBoxForegroundCheckedPointerOver}" />
                    <Setter Target="CheckGlyph.Fill" Value="{ThemeResource CheckBoxGlyphForegroundCheckedPointerOver}" />
                    <Setter Target="CheckGlyph.Opacity" Value="1" />
                    <Setter Target="PointerStateCircle.Opacity" Value="{ThemeResource CheckBoxStateCircleOpacityPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CheckedPressed">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource CheckBoxBackgroundCheckedPressed}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource CheckBoxBorderBrushCheckedPressed}" />
                    <Setter Target="BackgroundBorder.Background" Value="{ThemeResource CheckBoxCheckBackgroundFillCheckedPressed}" />
                    <Setter Target="BackgroundBorder.BorderBrush" Value="{ThemeResource CheckBoxCheckBackgroundStrokeCheckedPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource CheckBoxForegroundCheckedPressed}" />
                    <Setter Target="CheckGlyph.Fill" Value="{ThemeResource CheckBoxGlyphForegroundCheckedPressed}" />
                    <Setter Target="CheckGlyph.Opacity" Value="1" />
                    <Setter Target="PointerStateCircle.Opacity" Value="{ThemeResource CheckBoxStateCircleOpacityPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CheckedDisabled">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource CheckBoxBackgroundCheckedDisabled}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource CheckBoxBorderBrushCheckedDisabled}" />
                    <Setter Target="BackgroundBorder.Background" Value="{ThemeResource CheckBoxCheckBackgroundFillCheckedDisabled}" />
                    <Setter Target="BackgroundBorder.BorderBrush" Value="{ThemeResource CheckBoxCheckBackgroundStrokeCheckedDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource CheckBoxForegroundCheckedDisabled}" />
                    <Setter Target="CheckGlyph.Fill" Value="{ThemeResource CheckBoxGlyphForegroundCheckedDisabled}" />
                    <Setter Target="CheckGlyph.Opacity" Value="1" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="IndeterminateNormal">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource CheckBoxBackgroundIndeterminate}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource CheckBoxBorderBrushIndeterminate}" />
                    <Setter Target="BackgroundBorder.Background" Value="{ThemeResource CheckBoxCheckBackgroundFillIndeterminate}" />
                    <Setter Target="BackgroundBorder.BorderBrush" Value="{ThemeResource CheckBoxCheckBackgroundStrokeIndeterminate}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource CheckBoxForegroundIndeterminate}" />
                    <Setter Target="HyphenGlyph.Fill" Value="{ThemeResource CheckBoxGlyphForegroundIndeterminate}" />
                    <Setter Target="CheckGlyph.Opacity" Value="0" />
                    <Setter Target="HyphenGlyph.Opacity" Value="1" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="IndeterminatePointerOver">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource CheckBoxBackgroundIndeterminatePointerOver}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource CheckBoxBorderBrushIndeterminatePointerOver}" />
                    <Setter Target="BackgroundBorder.Background" Value="{ThemeResource CheckBoxCheckBackgroundFillIndeterminatePointerOver}" />
                    <Setter Target="BackgroundBorder.BorderBrush" Value="{ThemeResource CheckBoxCheckBackgroundStrokeIndeterminatePointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource CheckBoxForegroundIndeterminatePointerOver}" />
                    <Setter Target="HyphenGlyph.Fill" Value="{ThemeResource CheckBoxGlyphForegroundIndeterminatePointerOver}" />
                    <Setter Target="CheckGlyph.Opacity" Value="0" />
                    <Setter Target="HyphenGlyph.Opacity" Value="1" />
                    <Setter Target="PointerStateCircle.Opacity" Value="{ThemeResource CheckBoxStateCircleOpacityPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="IndeterminatePressed">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource CheckBoxBackgroundIndeterminatePressed}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource CheckBoxBorderBrushIndeterminatePressed}" />
                    <Setter Target="BackgroundBorder.Background" Value="{ThemeResource CheckBoxCheckBackgroundFillIndeterminatePressed}" />
                    <Setter Target="BackgroundBorder.BorderBrush" Value="{ThemeResource CheckBoxCheckBackgroundStrokeIndeterminatePressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource CheckBoxForegroundIndeterminatePressed}" />
                    <Setter Target="HyphenGlyph.Fill" Value="{ThemeResource CheckBoxGlyphForegroundIndeterminatePressed}" />
                    <Setter Target="CheckGlyph.Opacity" Value="0" />
                    <Setter Target="HyphenGlyph.Opacity" Value="1" />
                    <Setter Target="PointerStateCircle.Opacity" Value="{ThemeResource CheckBoxStateCircleOpacityPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="IndeterminateDisabled">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource CheckBoxBackgroundIndeterminateDisabled}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource CheckBoxBorderBrushIndeterminateDisabled}" />
                    <Setter Target="BackgroundBorder.Background" Value="{ThemeResource CheckBoxCheckBackgroundFillIndeterminateDisabled}" />
                    <Setter Target="BackgroundBorder.BorderBrush" Value="{ThemeResource CheckBoxCheckBackgroundStrokeIndeterminateDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource CheckBoxForegroundIndeterminateDisabled}" />
                    <Setter Target="HyphenGlyph.Fill" Value="{ThemeResource CheckBoxGlyphForegroundIndeterminateDisabled}" />
                    <Setter Target="CheckGlyph.Opacity" Value="0" />
                    <Setter Target="HyphenGlyph.Opacity" Value="1" />
                  </VisualState.Setters>
                </VisualState>
                <VisualStateGroup.Transitions>
                  <VisualTransition To="UncheckedPointerOver" GeneratedDuration="{StaticResource MaterialAnimationDuration}" GeneratedEasingFunction="{StaticResource MaterialEaseInOutFunction}" />
                  <VisualTransition To="UncheckedPressed" GeneratedDuration="{StaticResource MaterialAnimationDuration}" GeneratedEasingFunction="{StaticResource MaterialEaseInOutFunction}" />
                  <VisualTransition To="CheckedPointerOver" GeneratedDuration="{StaticResource MaterialAnimationDuration}" GeneratedEasingFunction="{StaticResource MaterialEaseInOutFunction}" />
                  <VisualTransition To="CheckedPressed" GeneratedDuration="{StaticResource MaterialAnimationDuration}" GeneratedEasingFunction="{StaticResource MaterialEaseInOutFunction}" />
                  <VisualTransition To="IndeterminatePointerOver" GeneratedDuration="{StaticResource MaterialAnimationDuration}" GeneratedEasingFunction="{StaticResource MaterialEaseInOutFunction}" />
                  <VisualTransition To="IndeterminatePressed" GeneratedDuration="{StaticResource MaterialAnimationDuration}" GeneratedEasingFunction="{StaticResource MaterialEaseInOutFunction}" />
                </VisualStateGroup.Transitions>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="UncheckedFocusStateCircle.Fill" Value="{ThemeResource CheckBoxStateCircleFillUnchecked}" />
                    <Setter Target="UncheckedFocusStateCircle.Opacity" Value="{ThemeResource CheckBoxStateCircleOpacityFocused}" />
                    <Setter Target="CheckedFocusStateCircle.Fill" Value="{ThemeResource CheckBoxStateCircleFillChecked}" />
                    <Setter Target="CheckedFocusStateCircle.Opacity" Value="{ThemeResource CheckBoxStateCircleOpacityFocused}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerFocused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="{ThemeResource CheckBoxCheckAreaLength}" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Ellipse x:Name="UncheckedFocusStateCircle" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform" Width="{ThemeResource CheckBoxFocusAreaSize}" Height="{ThemeResource CheckBoxFocusAreaSize}" Fill="Transparent" Visibility="{Binding IsChecked, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CheckBoxIsCheckedToFocusStateCircleCollapsed}, TargetNullValue=Collapsed, FallbackValue=Collapsed}" IsHitTestVisible="False" Opacity="0" />
            <Ellipse x:Name="CheckedFocusStateCircle" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform" Width="{ThemeResource CheckBoxFocusAreaSize}" Height="{ThemeResource CheckBoxFocusAreaSize}" Fill="Transparent" Visibility="{Binding IsChecked, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CheckBoxIsCheckedToFocusStateCircleVisible}, TargetNullValue=Collapsed, FallbackValue=Collapsed}" IsHitTestVisible="False" Opacity="0" />
            <Ellipse x:Name="PointerStateCircle" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform" Width="{ThemeResource CheckBoxFocusAreaSize}" Height="{ThemeResource CheckBoxFocusAreaSize}" Fill="Transparent" IsHitTestVisible="False" Opacity="0" />
            <Grid x:Name="CheckBoxContainer" Height="{ThemeResource CheckBoxCheckAreaSize}" Width="{ThemeResource CheckBoxCheckAreaSize}" CornerRadius="{TemplateBinding CornerRadius}">
              <Grid x:Name="BackgroundBorder" Background="{ThemeResource CheckBoxCheckBackgroundFill}" BorderBrush="{ThemeResource CheckBoxCheckBackgroundStroke}" BorderThickness="{ThemeResource CheckBoxCheckAreaBorderThickness}" />
              <Path x:Name="HyphenGlyph" Data="{ThemeResource CheckBoxHyphenGlyphPathData}" Fill="{ThemeResource CheckBoxGlyphForeground}" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Uniform" Width="12" Height="4" Opacity="0" AutomationProperties.AccessibilityView="Raw" mobile:Margin="0,2,0,0" />
              <Path x:Name="CheckGlyph" Data="{ThemeResource CheckBoxCheckGlyphPathData}" Fill="{ThemeResource CheckBoxGlyphForeground}" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Uniform" Width="12" Height="12" Opacity="0" AutomationProperties.AccessibilityView="Raw" mobile:Margin="0,2,0,0" />
            </Grid>
            <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.Column="1" AutomationProperties.AccessibilityView="Raw" TextWrapping="Wrap" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialDefaultCheckBoxStyle" TargetType="CheckBox" BasedOn="{StaticResource MaterialCheckBoxStyle}" />
  <!--origin: Styles\Controls\v2\ComboBox.xaml-->
  <um:FromNullToValueConverter x:Key="NullToContentTranslateYConverter" NotNullValue="5" NullValue="0" />
  <um:FromNullToValueConverter x:Key="NullToVisible" NotNullValue="Collapsed" NullValue="Visible" />
  <um:FromNullToValueConverter x:Key="NullToCollapsed" NotNullValue="Visible" NullValue="Collapsed" />
  <x:String x:Key="ComboBoxUpArrowPathData">M0 0L-5 -5L-10 0H0Z</x:String>
  <x:String x:Key="ComboBoxDownArrowPathData">M0 0L5 5L10 0H0Z</x:String>
  <Style x:Key="MaterialComboBoxItemStyle" TargetType="ComboBoxItem">
    <Setter Property="Background" Value="{ThemeResource ComboBoxItemBackground}" />
    <Setter Property="Foreground" Value="{ThemeResource ComboBoxItemForeground}" />
    <!-- Start: Body Large Typo -->
    <Setter Property="FontFamily" Value="{ThemeResource MaterialMediumFontFamily}" />
    <Setter Property="FontWeight" Value="{ThemeResource BodyLargeFontWeight}" />
    <Setter Property="FontSize" Value="{ThemeResource BodyLargeFontSize}" />
    <Setter Property="CharacterSpacing" Value="{ThemeResource BodyLargeCharacterSpacing}" />
    <!-- End: Body Large Typo -->
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Padding" Value="{ThemeResource ComboBoxPadding}" />
    <Setter Property="Height" Value="{ThemeResource ComboBoxHeight}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBoxItem">
          <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="PressedOverlay.Background" Value="{ThemeResource ComboBoxItemBackgroundPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ComboBoxItemForegroundPointerOver}" />
                    <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource ComboBoxBorderBrushPointerOver}" />
                  </VisualState.Setters>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PressedOverlay" Storyboard.TargetProperty="Opacity" To="1" Duration="{StaticResource MaterialAnimationDuration}">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="PressedOverlay.Background" Value="{ThemeResource ComboBoxItemBackgroundPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ComboBoxItemForegroundPressed}" />
                    <Setter Target="PressedOverlay.BorderBrush" Value="{ThemeResource ComboBoxItemBorderBrushPressed}" />
                    <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource ComboBoxBorderBrushPressed}" />
                  </VisualState.Setters>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PressedOverlay" Storyboard.TargetProperty="Opacity" To="1" Duration="{StaticResource MaterialAnimationDuration}">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.Opacity" Value="1" />
                    <Setter Target="PressedOverlay.Background" Value="{ThemeResource ComboBoxItemBackgroundDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ComboBoxItemForegroundDisabled}" />
                    <Setter Target="PressedOverlay.BorderBrush" Value="{ThemeResource ComboBoxItemBorderBrushDisabled}" />
                    <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource ComboBoxBorderBrushDisabled}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Selected">
                  <VisualState.Setters>
                    <Setter Target="PressedOverlay.Background" Value="{ThemeResource ComboBoxItemBackgroundSelected}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ComboBoxItemForegroundSelected}" />
                    <Setter Target="PressedOverlay.BorderBrush" Value="{ThemeResource ComboBoxItemBorderBrushSelected}" />
                  </VisualState.Setters>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PressedOverlay" Storyboard.TargetProperty="Opacity" To="1" Duration="{StaticResource MaterialAnimationDuration}">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedPointerOver">
                  <VisualState.Setters>
                    <Setter Target="PressedOverlay.Background" Value="{ThemeResource ComboBoxItemBackgroundSelectedPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ComboBoxItemForegroundSelectedPointerOver}" />
                    <Setter Target="PressedOverlay.BorderBrush" Value="{ThemeResource ComboBoxItemBorderBrushSelectedPointerOver}" />
                  </VisualState.Setters>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PressedOverlay" Storyboard.TargetProperty="Opacity" To="1" Duration="{StaticResource MaterialAnimationDuration}">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedDisabled">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.Opacity" Value="1" />
                    <Setter Target="PressedOverlay.Background" Value="{ThemeResource ComboBoxItemBackgroundSelectedDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ComboBoxItemForegroundSelectedDisabled}" />
                    <Setter Target="PressedOverlay.BorderBrush" Value="{ThemeResource ComboBoxItemBorderBrushSelectedDisabled}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="SelectedPressed">
                  <VisualState.Setters>
                    <Setter Target="PressedOverlay.Background" Value="{ThemeResource ComboBoxItemBackgroundSelectedPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ComboBoxItemForegroundSelectedPressed}" />
                    <Setter Target="PressedOverlay.BorderBrush" Value="{ThemeResource ComboBoxItemBorderBrushSelectedPressed}" />
                  </VisualState.Setters>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PressedOverlay" Storyboard.TargetProperty="Opacity" To="1" Duration="{StaticResource MaterialAnimationDuration}">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedUnfocused">
                  <VisualState.Setters>
                    <Setter Target="PressedOverlay.Background" Value="{ThemeResource ComboBoxItemBackgroundSelectedUnfocused}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ComboBoxItemForegroundSelectedUnfocused}" />
                    <Setter Target="PressedOverlay.BorderBrush" Value="{ThemeResource ComboBoxItemBorderBrushSelectedUnfocused}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <!-- Pressed Overlay -->
            <Grid x:Name="PressedOverlay" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{ThemeResource ComboBoxItemBackgroundSelected}" IsHitTestVisible="False" Opacity="0" />
            <!-- ContentPresenter -->
            <ContentPresenter x:Name="ContentPresenter" Padding="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" ContentTransitions="{TemplateBinding ContentTransitions}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialComboBoxStyle" TargetType="ComboBox">
    <Setter Property="Foreground" Value="{ThemeResource ComboBoxForeground}" />
    <Setter Property="Background" Value="{ThemeResource ComboBoxBackground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource ComboBoxBorderBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource ComboBoxBorderThickness}" />
    <Setter Property="Padding" Value="{ThemeResource ComboBoxPadding}" />
    <!-- Start: Body Large Typo -->
    <Setter Property="FontFamily" Value="{ThemeResource MaterialMediumFontFamily}" />
    <Setter Property="FontWeight" Value="{ThemeResource BodyLargeFontWeight}" />
    <Setter Property="FontSize" Value="{ThemeResource BodyLargeFontSize}" />
    <Setter Property="CharacterSpacing" Value="{ThemeResource BodyLargeCharacterSpacing}" />
    <!-- End: Body Large Typo -->
    <Setter Property="MinHeight" Value="{ThemeResource ComboBoxMinHeight}" />
    <Setter Property="TabNavigation" Value="Once" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
    <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
    <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True" />
    <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
    <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="ItemContainerStyle" Value="{StaticResource MaterialComboBoxItemStyle}" />
    <xamarin:Setter Property="uno:ComboBox.DropDownPreferredPlacement" Value="Below" />
    <!-- Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388 -->
    <Setter Property="um:ControlExtensions.Icon" Value="{x:Null}" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <CarouselPanel />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBox">
          <Grid x:Name="RootGrid" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{ThemeResource ComboBoxCornerRadius}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="ComboBoxContent.Background" Value="{ThemeResource ComboBoxBackgroundDisabled}" />
                    <Setter Target="DropDownGlyph_Down.Fill" Value="{ThemeResource OnSurfaceLowBrush}" />
                    <Setter Target="PlaceholderElement.Foreground" Value="{ThemeResource ComboBoxPlaceHolderForegroundDisabled}" />
                    <Setter Target="UpperPlaceholderElement.Foreground" Value="{ThemeResource ComboBoxUpperPlaceHolderForegroundDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ComboBoxForegroundDisabled}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource ComboBoxLeadingIconForegroundDisabled}" />
                    <Setter Target="PopupBorder.Background" Value="{ThemeResource ComboBoxBackgroundDisabled}" />
                    <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource ComboBoxBorderBrushDisabled}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="ComboBoxContent.Background" Value="{ThemeResource ComboBoxBackgroundPointerOver}" />
                    <Setter Target="PopupBorder.Background" Value="{ThemeResource ComboBoxDropDownBackgroundPointerOver}" />
                    <Setter Target="PlaceholderElement.Foreground" Value="{ThemeResource ComboBoxPlaceHolderForegroundPointerOver}" />
                    <Setter Target="UpperPlaceholderElement.Foreground" Value="{ThemeResource ComboBoxUpperPlaceHolderForegroundPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ComboBoxForegroundPointerOver}" />
                    <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource ComboBoxBorderBrushPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="ComboBoxContent.Background" Value="{ThemeResource ComboBoxBackgroundPressed}" />
                    <Setter Target="PopupBorder.Background" Value="{ThemeResource ComboBoxDropDownBackgroundPressed}" />
                    <Setter Target="PlaceholderElement.Foreground" Value="{ThemeResource ComboBoxPlaceHolderForegroundPressed}" />
                    <Setter Target="UpperPlaceholderElement.Foreground" Value="{ThemeResource ComboBoxUpperPlaceHolderForegroundPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ComboBoxForegroundPressed}" />
                    <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource ComboBoxBorderBrushPressed}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="PointerFocused" />
                <VisualState x:Name="FocusedDropDown" />
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="ComboBoxContent.Background" Value="{ThemeResource ComboBoxBackgroundFocused}" />
                    <Setter Target="PopupBorder.Background" Value="{ThemeResource ComboBoxDropDownBackgroundFocused}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ComboBoxForegroundFocused}" />
                    <Setter Target="PlaceholderElement.Foreground" Value="{ThemeResource ComboBoxPlaceHolderForegroundFocused}" />
                    <Setter Target="UpperPlaceholderElement.Foreground" Value="{ThemeResource ComboBoxUpperPlaceHolderForegroundFocused}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ComboBoxForegroundFocused}" />
                    <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource ComboBoxBorderBrushOpened}" />
                    <Setter Target="RootGrid.BorderThickness" Value="{ThemeResource ComboBoxOpenedBorderThickness}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="FocusedPressed">
                  <VisualState.Setters>
                    <Setter Target="ComboBoxContent.Background" Value="{ThemeResource ComboBoxBackgroundFocusedPressed}" />
                    <Setter Target="PopupBorder.Background" Value="{ThemeResource ComboBoxDropDownBackgroundFocusedPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ComboBoxForegroundFocusedPressed}" />
                    <Setter Target="PlaceholderElement.Foreground" Value="{ThemeResource ComboBoxPlaceHolderForegroundFocusedPressed}" />
                    <Setter Target="UpperPlaceholderElement.Foreground" Value="{ThemeResource ComboBoxUpperPlaceHolderForegroundFocusedPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ComboBoxForegroundFocusedPressed}" />
                    <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource ComboBoxBorderBrushOpened}" />
                    <Setter Target="RootGrid.BorderThickness" Value="{ThemeResource ComboBoxOpenedBorderThickness}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Unfocused">
                  <VisualState.Setters>
                    <Setter Target="ComboBoxContent.Background" Value="{ThemeResource ComboBoxBackgroundUnfocused}" />
                    <Setter Target="PopupBorder.Background" Value="{ThemeResource ComboBoxBackgroundUnfocused}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DropDownStates">
                <VisualState x:Name="Opened">
                  <VisualState.Setters>
                    <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource ComboBoxBorderBrushOpened}" />
                    <Setter Target="RootGrid.BorderThickness" Value="{ThemeResource ComboBoxOpenedBorderThickness}" />
                    <Setter Target="UpperPlaceholderElement.Foreground" Value="{ThemeResource ComboBoxUpperPlaceHolderForegroundOpened}" />
                    <Setter Target="DropDownGlyph_Up.Fill" Value="{ThemeResource ComboBoxArrowForegroundOpened}" />
                    <Setter Target="DropDownGlyph_Down.Visibility" Value="Collapsed" />
                    <Setter Target="DropDownGlyph_Up.Visibility" Value="Visible" />
                  </VisualState.Setters>
                  <Storyboard>
                    <SplitOpenThemeAnimation ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" ClosedTargetName="ContentPresenter" ContentTargetName="ScrollViewer" ContentTranslationOffset="0" OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedTargetName="PopupBorder" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Closed">
                  <VisualState.Setters>
                    <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource ComboBoxBorderBrush}" />
                    <Setter Target="RootGrid.BorderThickness" Value="{ThemeResource ComboBoxBorderThickness}" />
                    <Setter Target="DropDownGlyph_Down.Visibility" Value="Visible" />
                    <Setter Target="DropDownGlyph_Up.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                  <Storyboard>
                    <SplitCloseThemeAnimation ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" ClosedTargetName="ContentPresenter" ContentTargetName="ScrollViewer" ContentTranslationDirection="{Binding TemplateSettings.SelectedItemDirection, RelativeSource={RelativeSource Mode=TemplatedParent}}" ContentTranslationOffset="40" OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedTargetName="PopupBorder" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="ComboBoxContent" Padding="{TemplateBinding Padding}">
              <Grid.Resources>
                <!-- Resources added here in order to manage the ContentPresenter TranslateY depending if there is a PlaceholderText or not -->
                <CompositeTransform x:Key="ContentPresenter_CompositeTransformWithPlaceholder" TranslateY="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToContentTranslateYConverter}, TargetNullValue=0, FallbackValue=0}" />
                <CompositeTransform x:Key="ContentPresenter_CompositeTransformWithoutPlaceholder" TranslateY="0" />
                <um:FromEmptyStringToValueConverter x:Key="EmptyToCompositeTransformConverter" NotNullOrEmptyValue="{StaticResource ContentPresenter_CompositeTransformWithPlaceholder}" NullOrEmptyValue="{StaticResource ContentPresenter_CompositeTransformWithoutPlaceholder}" />
              </Grid.Resources>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <!-- Leading Icon -->
              <ContentPresenter x:Name="IconPresenter" Width="{ThemeResource ComboBoxLeadingIconWidth}" Margin="{ThemeResource ComboBoxLeadingIconMargin}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{ThemeResource ComboBoxLeadingIconForeground}" Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />
              <!-- ContentPresenter -->
              <ContentPresenter x:Name="ContentPresenter" Grid.Column="1" MaxLines="1" VerticalAlignment="Center" RenderTransform="{Binding PlaceholderText, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EmptyToCompositeTransformConverter}, TargetNullValue={StaticResource ContentPresenter_CompositeTransformWithoutPlaceholder}, FallbackValue={StaticResource ContentPresenter_CompositeTransformWithoutPlaceholder}}" />
              <!-- PlaceholderElement -->
              <TextBlock x:Name="PlaceholderElement" Grid.Column="1" VerticalAlignment="Center" Visibility="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToVisible}, TargetNullValue=Collapsed, FallbackValue=Collapsed}" Foreground="{ThemeResource ComboBoxPlaceHolderForeground}" IsHitTestVisible="False" MaxLines="1" RenderTransformOrigin="0,0.5" Style="{StaticResource BodyLarge}" Text="{TemplateBinding PlaceholderText}" />
              <TextBlock x:Name="UpperPlaceholderElement" Grid.Column="1" VerticalAlignment="Center" Visibility="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToCollapsed}, TargetNullValue=Collapsed, FallbackValue=Collapsed}" Foreground="{ThemeResource ComboBoxUpperPlaceHolderForeground}" IsHitTestVisible="False" MaxLines="1" RenderTransformOrigin="0,0.5" Style="{StaticResource BodyLarge}" Text="{TemplateBinding PlaceholderText}">
                <TextBlock.RenderTransform>
                  <CompositeTransform x:Name="UpperPlaceholderElement_CompositeTransform" ScaleX="0.7" ScaleY="0.7" TranslateY="-11" />
                </TextBlock.RenderTransform>
              </TextBlock>
              <!-- Down -->
              <Path x:Name="DropDownGlyph_Down" Grid.Column="2" Width="{ThemeResource ComboBoxDownGlyphWidth}" Height="{ThemeResource ComboBoxDownGlyphHeight}" Margin="{ThemeResource ComboBoxDownGlyphMargin}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{StaticResource ComboBoxDownArrowPathData}" Fill="{ThemeResource ComboBoxArrowForeground}" Stretch="Uniform" />
              <!-- Up -->
              <Path x:Name="DropDownGlyph_Up" Grid.Column="2" Width="{ThemeResource ComboBoxUpGlyphWidth}" Height="{ThemeResource ComboBoxUpGlyphHeight}" Margin="{ThemeResource ComboBoxUpGlyphMargin}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{StaticResource ComboBoxUpArrowPathData}" Fill="{ThemeResource ComboBoxArrowForeground}" Stretch="Uniform" Visibility="Collapsed" />
            </Grid>
            <!-- Popup -->
            <Popup x:Name="Popup">
              <Border x:Name="PopupBorder" CornerRadius="{ThemeResource ComboBoxCornerRadius}" Background="{ThemeResource ComboBoxDropDownBackground}">
                <!-- Workaround for Issue #213 where android PopupBorder doesn't get redrawn properly, adds Background, CornerRadius and Border to ScrollViewer -->
                <ScrollViewer x:Name="ScrollViewer" MinWidth="{ThemeResource ComboBoxPopupThemeMinWidth}" AutomationProperties.AccessibilityView="Raw" BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}" CornerRadius="{ThemeResource ComboBoxCornerRadius}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalSnapPointsAlignment="Near" VerticalSnapPointsType="OptionalSingle" ZoomMode="Disabled" Foreground="{ThemeResource ComboBoxDropDownForeground}" BorderBrush="{ThemeResource ComboBoxDropDownBorderBrush}">
                  <ItemsPresenter />
                </ScrollViewer>
              </Border>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialDefaultComboBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource MaterialComboBoxStyle}" />
  <!--origin: Styles\Controls\v2\CommandBar.xaml-->
  <x:Double x:Key="MaterialCommandBarElevation">4</x:Double>
  <x:Double x:Key="MaterialCommandBarHeight">48</x:Double>
  <Style x:Key="MaterialAppBarButtonStyle" TargetType="AppBarButton">
    <Setter Property="Height" Value="{StaticResource MaterialCommandBarHeight}" />
    <Setter Property="Width" Value="{StaticResource MaterialCommandBarHeight}" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Foreground" Value="{ThemeResource OnSurfaceBrush}" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="IsCompact" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="AppBarButton">
          <um:Ripple Feedback="{TemplateBinding Foreground}" FeedbackOpacity="{StaticResource PressedOpacity}">
            <Viewbox x:Name="ContentViewbox" Height="{ThemeResource AppBarButtonContentHeight}" Width="{ThemeResource AppBarButtonContentHeight}" Margin="0,12" HorizontalAlignment="Stretch" AutomationProperties.AccessibilityView="Raw">
              <ContentPresenter x:Name="Content" Content="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" />
            </Viewbox>
          </um:Ripple>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ios:ControlTemplate x:Key="NativeM3CommandBarTemplate" TargetType="CommandBar">
    <!-- We use BorderBrush instead of Background to ensure that semi-transparent background of Grid and NativeCommandBarPresenter don't add up -->
    <Border BorderBrush="{TemplateBinding Background}" BorderThickness="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
      <uuc:NativeCommandBarPresenter Height="44" />
    </Border>
  </ios:ControlTemplate>
  <android:ControlTemplate x:Key="NativeM3CommandBarTemplate" TargetType="CommandBar">
    <uuc:NativeCommandBarPresenter />
  </android:ControlTemplate>
  <ControlTemplate x:Key="MaterialXamlCommandBarTemplate" TargetType="CommandBar">
    <!-- Simplified CommandBar template that adds support for Uno.UI.CommandBarExtensions.NavigationCommand on Windows. -->
    <Grid x:Name="LayoutRoot" win:Height="48" Background="{TemplateBinding Background}">
      <Grid x:Name="ContentRoot" Margin="{TemplateBinding Padding}" Background="{TemplateBinding Background}" Opacity="{TemplateBinding Opacity}">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <!-- note: NavigationCommand is an AppBarButton, not ICommand -->
        <ContentControl Content="{Binding (toolkit:CommandBarExtensions.NavigationCommand), RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding Foreground}" Height="{StaticResource MaterialCommandBarHeight}" Width="{StaticResource MaterialCommandBarHeight}" IsTabStop="False" />
        <!--
					Use a ContentControl rather than a ContentPresenter so that IsEnabled can be set to false
					in the Minimal/HiddenClosed states to remove it from being a tab-stop candidate.
				-->
        <ContentControl x:Name="ContentControl" Grid.Column="1" Margin="16,0" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" IsTabStop="False" />
        <ItemsControl x:Name="PrimaryItemsControl" HorizontalAlignment="Right" MinHeight="{ThemeResource AppBarThemeCompactHeight}" IsTabStop="False" Grid.Column="2">
          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <StackPanel Orientation="Horizontal" />
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>
        </ItemsControl>
      </Grid>
    </Grid>
  </ControlTemplate>
  <Style x:Key="MaterialBaseCommandBarStyle" TargetType="CommandBar">
    <!-- Setting content to empty to avoid getting the datacontext -->
    <Setter Property="Content" Value="" />
    <Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <TextBlock Text="{Binding}" Style="{StaticResource MaterialTitleLarge}" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Background" Value="{ThemeResource SurfaceBrush}" />
    <Setter Property="Foreground" Value="{ThemeResource OnSurfaceBrush}" />
    <android:Setter Property="(toolkit:UIElementExtensions.Elevation)" Value="{StaticResource MaterialCommandBarElevation}" />
    <Setter Property="Height" Value="{StaticResource MaterialCommandBarHeight}" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="OverflowButtonVisibility" Value="Collapsed" />
    <Setter Property="IsDynamicOverflowEnabled" Value="False" />
    <!-- Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388 -->
    <Setter Property="toolkit:CommandBarExtensions.NavigationCommand" Value="{x:Null}" />
    <Setter Property="Template" Value="{StaticResource MaterialXamlCommandBarTemplate}" />
  </Style>
  <Style x:Key="MaterialCommandBarStyle" TargetType="CommandBar" BasedOn="{StaticResource MaterialBaseCommandBarStyle}">
    <ios:Setter Property="Height" Value="NaN" />
    <ios:Setter Property="Template" Value="{StaticResource NativeM3CommandBarTemplate}" />
    <android:Setter Property="Template" Value="{StaticResource NativeM3CommandBarTemplate}" />
  </Style>
  <Style x:Key="MaterialDefaultAppBarButtonStyle" TargetType="AppBarButton" BasedOn="{StaticResource MaterialAppBarButtonStyle}" />
  <Style x:Key="MaterialDefaultCommandBarStyle" TargetType="CommandBar" BasedOn="{StaticResource MaterialCommandBarStyle}" />
  <!--origin: Styles\Controls\v2\ContentDialog.xaml-->
  <x:Double x:Key="MaterialContentDialogMinWidth">288</x:Double>
  <x:Double x:Key="MaterialContentDialogMinHeight">132</x:Double>
  <x:Double x:Key="MaterialContentDialogMaxWidth">560</x:Double>
  <x:Double x:Key="MaterialContentDialogMaxHeight">560</x:Double>
  <Thickness x:Key="MaterialContentDialogEdgeMargin">56</Thickness>
  <Thickness x:Key="MaterialContentDialogPanelPadding">24</Thickness>
  <CornerRadius x:Key="MaterialContentDialogCornerRadius">28</CornerRadius>
  <GridLength x:Key="MaterialContentDialogButtonSpacing">8</GridLength>
  <Thickness x:Key="MaterialContentDialogTitleToContentMargin">0,0,0,16</Thickness>
  <Thickness x:Key="MaterialContentDialogCommandSpaceToContentMargin">0,24,0,0</Thickness>
  <StaticResource x:Key="MaterialContentDialogBackground" ResourceKey="SurfaceBrush" />
  <StaticResource x:Key="MaterialContentDialogSmokeLayerBackground" ResourceKey="OnSurfaceLowBrush" />
  <StaticResource x:Key="MaterialContentDialogTitleForeground" ResourceKey="OnSurfaceBrush" />
  <StaticResource x:Key="MaterialContentDialogContentForeground" ResourceKey="OnSurfaceVariantBrush" />
  <Style x:Key="MaterialContentDialogButtonStyle" TargetType="Button" BasedOn="{StaticResource MaterialTextButtonStyle}">
    <Setter Property="HorizontalAlignment" Value="Right" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
  </Style>
  <Style x:Key="MaterialContentDialogDefaultButtonStyle" TargetType="Button" BasedOn="{StaticResource MaterialFilledButtonStyle}">
    <Setter Property="HorizontalAlignment" Value="Right" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
  </Style>
  <Style x:Key="MaterialContentDialogStyle" TargetType="ContentDialog">
    <Setter Property="Background" Value="{StaticResource MaterialContentDialogBackground}" />
    <Setter Property="Foreground" Value="{StaticResource MaterialContentDialogContentForeground}" />
    <Setter Property="CornerRadius" Value="{StaticResource MaterialContentDialogCornerRadius}" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="PrimaryButtonStyle" Value="{StaticResource MaterialContentDialogButtonStyle}" />
    <Setter Property="SecondaryButtonStyle" Value="{StaticResource MaterialContentDialogButtonStyle}" />
    <Setter Property="CloseButtonStyle" Value="{StaticResource MaterialContentDialogButtonStyle}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ContentDialog">
          <Border x:Name="Container">
            <!-- DialogSpace/CommandSpace are reserved name from the control implementation. -->
            <!-- `Title` is toggled from the impl; and `CommandSpace`, via visual-states -->
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="DialogShowingStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition To="DialogHidden" />
                  <VisualTransition To="DialogShowing" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="DialogHidden" />
                <VisualState x:Name="DialogShowing">
                  <VisualState.Setters>
                    <Setter Target="PrimaryButton.IsTabStop" Value="True" />
                    <Setter Target="SecondaryButton.IsTabStop" Value="True" />
                    <Setter Target="CloseButton.IsTabStop" Value="True" />
                    <Setter Target="LayoutRoot.Visibility" Value="Visible" />
                    <Setter Target="RealBackgroundElement.TabFocusNavigation" Value="Cycle" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="DialogShowingWithoutSmokeLayer">
                  <VisualState.Setters>
                    <Setter Target="PrimaryButton.IsTabStop" Value="True" />
                    <Setter Target="SecondaryButton.IsTabStop" Value="True" />
                    <Setter Target="CloseButton.IsTabStop" Value="True" />
                    <Setter Target="LayoutRoot.Visibility" Value="Visible" />
                    <Setter Target="LayoutRoot.Background" Value="{x:Null}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DialogSizingStates">
                <VisualState x:Name="DefaultDialogSizing" />
                <VisualState x:Name="FullDialogSizing" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ButtonsVisibilityStates">
                <VisualState x:Name="AllVisible" />
                <VisualState x:Name="NoneVisible">
                  <VisualState.Setters>
                    <Setter Target="CommandSpace.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PrimaryVisible">
                  <VisualState.Setters>
                    <Setter Target="FirstSpacer.Width" Value="0" />
                    <Setter Target="SecondaryButton.Visibility" Value="Collapsed" />
                    <Setter Target="SecondSpacer.Width" Value="0" />
                    <Setter Target="CloseButton.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="SecondaryVisible">
                  <VisualState.Setters>
                    <Setter Target="PrimaryButton.Visibility" Value="Collapsed" />
                    <Setter Target="FirstSpacer.Width" Value="0" />
                    <Setter Target="SecondSpacer.Width" Value="0" />
                    <Setter Target="CloseButton.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CloseVisible">
                  <VisualState.Setters>
                    <Setter Target="PrimaryButton.Visibility" Value="Collapsed" />
                    <Setter Target="FirstSpacer.Width" Value="0" />
                    <Setter Target="SecondaryButton.Visibility" Value="Collapsed" />
                    <Setter Target="SecondSpacer.Width" Value="0" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PrimaryAndSecondaryVisible">
                  <VisualState.Setters>
                    <Setter Target="SecondSpacer.Width" Value="0" />
                    <Setter Target="CloseButton.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PrimaryAndCloseVisible">
                  <VisualState.Setters>
                    <Setter Target="FirstSpacer.Width" Value="0" />
                    <Setter Target="SecondaryButton.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="SecondaryAndCloseVisible">
                  <VisualState.Setters>
                    <Setter Target="PrimaryButton.Visibility" Value="Collapsed" />
                    <Setter Target="FirstSpacer.Width" Value="0" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DefaultButtonStates">
                <VisualState x:Name="NoDefaultButton" />
                <VisualState x:Name="PrimaryAsDefaultButton">
                  <VisualState.Setters>
                    <Setter Target="PrimaryButton.Style" Value="{StaticResource MaterialContentDialogDefaultButtonStyle}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="SecondaryAsDefaultButton">
                  <VisualState.Setters>
                    <Setter Target="SecondaryButton.Style" Value="{StaticResource MaterialContentDialogDefaultButtonStyle}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CloseAsDefaultButton">
                  <VisualState.Setters>
                    <Setter Target="CloseButton.Style" Value="{StaticResource MaterialContentDialogDefaultButtonStyle}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DialogBorderStates" />
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="LayoutRoot">
              <Rectangle x:Name="SmokeLayerBackground" Fill="{StaticResource MaterialContentDialogSmokeLayerBackground}" />
              <!-- workaround: BackgroundElement is hidden, because it has an undesired shadow that the control impl applies. -->
              <Border x:Name="BackgroundElement" Opacity="0" Visibility="Collapsed" />
              <toolkit:ElevatedView x:Name="RealBackgroundElement" Background="{TemplateBinding Background}" BackgroundSizing="InnerBorderEdge" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Elevation="3" FlowDirection="{TemplateBinding FlowDirection}" MaxWidth="{StaticResource MaterialContentDialogMaxWidth}" MaxHeight="{StaticResource MaterialContentDialogMaxHeight}" Margin="{StaticResource MaterialContentDialogEdgeMargin}" HorizontalAlignment="Center" VerticalAlignment="Center">
                <toolkit:ElevatedView.RenderTransform>
                  <ScaleTransform x:Name="ScaleTransform" />
                </toolkit:ElevatedView.RenderTransform>
                <Grid>
                  <!--
										workaround: this holder enforce a min-size when the content isnt enough, but allows for
										the dialog to shrink below min-size if the screen dictates (better than being clipped).
										- min-size on RealBackgroundElement will clip the dialog when the screen is too small
										- min-size on DialogSpace will prevent Title from being centered when screen is too small
									-->
                  <Border x:Name="MinSizeHolder" MinWidth="{StaticResource MaterialContentDialogMinWidth}" MinHeight="{StaticResource MaterialContentDialogMinHeight}" />
                  <Grid x:Name="DialogSpace" Margin="{StaticResource MaterialContentDialogPanelPadding}">
                    <Grid.RowDefinitions>
                      <!-- 0: Title, 1: Content, 2: CommandSpace -->
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="*" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <ContentControl Grid.Row="0" x:Name="Title" Content="{TemplateBinding Title}" ContentTemplate="{TemplateBinding TitleTemplate}" Foreground="{StaticResource MaterialContentDialogTitleForeground}" FontFamily="{ThemeResource MaterialRegularFontFamily}" FontSize="{StaticResource HeadlineSmallFontSize}" FontWeight="{ThemeResource HeadlineSmallFontWeight}" Margin="{StaticResource MaterialContentDialogTitleToContentMargin}" HorizontalAlignment="Center" VerticalAlignment="Top" IsTabStop="False">
                      <ContentControl.Template>
                        <ControlTemplate TargetType="ContentControl">
                          <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" MaxLines="2" TextWrapping="Wrap" Margin="{TemplateBinding Padding}" />
                        </ControlTemplate>
                      </ContentControl.Template>
                    </ContentControl>
                    <ScrollViewer Grid.Row="1" x:Name="ContentScrollViewer" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled" ZoomMode="Disabled" IsTabStop="False">
                      <ContentPresenter x:Name="Content" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Foreground="{TemplateBinding Foreground}" FontFamily="{ThemeResource MaterialRegularFontFamily}" FontSize="{ThemeResource BodyMediumFontSize}" FontWeight="{ThemeResource BodyMediumFontWeight}" TextWrapping="Wrap" />
                    </ScrollViewer>
                    <Grid x:Name="CommandSpace" Grid.Row="2" Margin="{StaticResource MaterialContentDialogCommandSpaceToContentMargin}" HorizontalAlignment="Right" VerticalAlignment="Bottom" XYFocusKeyboardNavigation="Enabled">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="CloseColumn" Width="Auto" />
                        <ColumnDefinition x:Name="SecondSpacer" Width="{StaticResource MaterialContentDialogButtonSpacing}" />
                        <ColumnDefinition x:Name="SecondaryColumn" Width="Auto" />
                        <ColumnDefinition x:Name="FirstSpacer" Width="{StaticResource MaterialContentDialogButtonSpacing}" />
                        <ColumnDefinition x:Name="PrimaryColumn" Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <Button Grid.Column="0" x:Name="CloseButton" Content="{TemplateBinding CloseButtonText}" IsTabStop="False" ElementSoundMode="FocusOnly" Style="{TemplateBinding CloseButtonStyle}" />
                      <Button Grid.Column="2" x:Name="SecondaryButton" Content="{TemplateBinding SecondaryButtonText}" IsEnabled="{TemplateBinding IsSecondaryButtonEnabled}" IsTabStop="False" ElementSoundMode="FocusOnly" Style="{TemplateBinding SecondaryButtonStyle}" />
                      <Button Grid.Column="4" x:Name="PrimaryButton" Content="{TemplateBinding PrimaryButtonText}" IsEnabled="{TemplateBinding IsPrimaryButtonEnabled}" IsTabStop="False" ElementSoundMode="FocusOnly" Style="{TemplateBinding PrimaryButtonStyle}" />
                    </Grid>
                  </Grid>
                </Grid>
              </toolkit:ElevatedView>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialDefaultContentDialogStyle" TargetType="ContentDialog" BasedOn="{StaticResource MaterialContentDialogStyle}" />
  <!--origin: Styles\Controls\v2\DatePicker.xaml-->
  <Style x:Key="MaterialDatePickerFlyoutButtonStyle" TargetType="Button">
    <Setter Property="Background" Value="{ThemeResource DatePickerFlyoutButtonBackground}" />
    <Setter Property="Padding" Value="{ThemeResource DatePickerFlyoutButtonPadding}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
            <!-- Label -->
            <ContentPresenter x:Name="ContentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" />
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver" />
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="RootGrid.Opacity" Value="{ThemeResource DatePickerFlyoutButtonOpacityPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="RootGrid.Opacity" Value="{ThemeResource DatePickerFlyoutButtonOpacityDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <not_win:Style x:Key="MaterialDatePickerFlyoutPresenterStyle" TargetType="DatePickerFlyoutPresenter">
    <Setter Property="Width" Value="{ThemeResource DatePickerFlyoutPresenterWidth}" />
    <Setter Property="MinWidth" Value="{ThemeResource DatePickerFlyoutPresenterMinWidth}" />
    <Setter Property="MaxHeight" Value="{ThemeResource DatePickerFlyoutPresenterMaxHeight}" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="FontFamily" Value="{ThemeResource DatePickerFlyoutPresenterFontFamily}" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="FontSize" Value="{ThemeResource DatePickerFlyoutPresenterFontSize}" />
    <Setter Property="Background" Value="{ThemeResource DatePickerFlyoutPresenterBackground}" />
    <Setter Property="AutomationProperties.AutomationId" Value="DatePickerFlyoutPresenter" />
    <Setter Property="BorderThickness" Value="{ThemeResource DatePickerFlyoutBorderThickness}" />
    <Setter Property="BorderBrush" Value="{ThemeResource DatePickerFlyoutPresenterBorderBrush}" />
    <Setter Property="CornerRadius" Value="{ThemeResource DatePickerFlyoutPresenterCornerRadius}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="DatePickerFlyoutPresenter">
          <toolkit:ElevatedView MaxHeight="{TemplateBinding MaxHeight}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Elevation="{ThemeResource DatePickerFlyoutElevation}" ShadowColor="{StaticResource ShadowColor}">
            <Border x:Name="Background">
              <Grid x:Name="ContentPanel">
                <Grid.RowDefinitions>
                  <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid x:Name="PickerHostGrid">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="DayColumn" Width="78*" />
                    <ColumnDefinition x:Name="FirstSpacerColumn" Width="Auto" />
                    <ColumnDefinition x:Name="MonthColumn" Width="132*" />
                    <ColumnDefinition x:Name="SecondSpacerColumn" Width="Auto" />
                    <ColumnDefinition x:Name="YearColumn" Width="78*" />
                  </Grid.ColumnDefinitions>
                  <Rectangle x:Name="HighlightRect" Grid.Column="0" Grid.ColumnSpan="5" Height="{ThemeResource DatePickerFlyoutPresenterHighlightHeight}" VerticalAlignment="Center" Fill="{ThemeResource DatePickerFlyoutPresenterHighlightFill}" />
                  <Rectangle x:Name="FirstPickerSpacing" Grid.Column="1" Width="{ThemeResource DatePickerSpacerThemeWidth}" HorizontalAlignment="Center" Fill="{ThemeResource DatePickerFlyoutPresenterSpacerFill}" />
                  <Rectangle x:Name="SecondPickerSpacing" Grid.Column="3" Width="{ThemeResource DatePickerSpacerThemeWidth}" HorizontalAlignment="Center" Fill="{ThemeResource DatePickerFlyoutPresenterSpacerFill}" />
                </Grid>
                <Grid x:Name="AcceptDismissHostGrid" Height="{ThemeResource DatePickerFlyoutPresenterAcceptDismissHostGridHeight}" VerticalAlignment="Bottom" Background="{TemplateBinding Background}">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <Rectangle Grid.ColumnSpan="3" Height="{ThemeResource DatePickerSpacerThemeWidth}" VerticalAlignment="Top" Fill="{ThemeResource DatePickerFlyoutPresenterSpacerFill}" />
                  <Button x:Name="DismissButton" x:Uid="DatePickerFlyoutDismissButton" Grid.Column="1" HorizontalAlignment="Right" Content="CANCEL" Style="{StaticResource MaterialTextButtonStyle}" />
                  <Button x:Name="AcceptButton" x:Uid="DatePickerFlyoutAcceptButton" Grid.Column="2" HorizontalAlignment="Right" Content="OK" Style="{StaticResource MaterialTextButtonStyle}" />
                </Grid>
              </Grid>
            </Border>
          </toolkit:ElevatedView>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </not_win:Style>
  <Style x:Key="MaterialDatePickerStyle" TargetType="DatePicker">
    <Setter Property="Background" Value="{ThemeResource DatePickerButtonBackground}" />
    <Setter Property="Foreground" Value="{ThemeResource DatePickerButtonForeground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource DatePickerButtonBorderBrush}" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="Height" Value="{ThemeResource DatePickerHeight}" />
    <Setter Property="CornerRadius" Value="{ThemeResource DatePickerCornerRadius}" />
    <not_win:Setter Property="FlyoutPresenterStyle" Value="{StaticResource MaterialDatePickerFlyoutPresenterStyle}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="DatePicker">
          <!-- Root Grid -->
          <Grid x:Name="LayoutRoot">
            <!-- Flyout Button -->
            <Button x:Name="FlyoutButton" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" IsEnabled="{TemplateBinding IsEnabled}" Style="{StaticResource MaterialDatePickerFlyoutButtonStyle}" UseSystemFocusVisuals="{TemplateBinding UseSystemFocusVisuals}">
              <Grid x:Name="ContentButton" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
                <!-- Border -->
                <Rectangle x:Name="BottomBorder" Height="{ThemeResource DatePickerButtonBottomBorderHeight}" VerticalAlignment="Bottom" Fill="{TemplateBinding BorderBrush}" />
                <!-- Header -->
                <TextBlock x:Name="HeaderTextBlock" Margin="{ThemeResource DatePickerButtonHeaderMargin}" HorizontalAlignment="Stretch" VerticalAlignment="Top" Foreground="{TemplateBinding Foreground}" Style="{StaticResource MaterialBodySmall}" Text="{TemplateBinding Header}" TextWrapping="Wrap" />
                <Grid x:Name="FlyoutButtonContentGrid" Height="{ThemeResource DatePickerButtonContentHeight}" Margin="{ThemeResource DatePickerButtonContentMargin}" VerticalAlignment="Top">
                  <!-- DateText -->
                  <TextBlock x:Name="DateText" Foreground="{ThemeResource DatePickerButtonDateTextForeground}" Style="{StaticResource MaterialBodyMedium}" Text="{Binding SelectedDate, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource StringFormatConverter}, ConverterParameter=' {0:d}'}" />
                  <!-- PlaceholderText -->
                  <TextBlock x:Name="PlaceholderText" Margin="{ThemeResource DatePickerButtonPlaceholderMargin}" Foreground="{ThemeResource DatePickerPlaceholderTextForeground}" Style="{StaticResource MaterialBodyMedium}" Text="{TemplateBinding Header}" Visibility="Collapsed" />
                  <!-- Removing this cause trouble with the DatePicker code -->
                  <TextBlock x:Name="DayTextBlock" Opacity="0" />
                </Grid>
              </Grid>
            </Button>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="DateText.Foreground" Value="{ThemeResource DatePickerButtonDateTextForegroundPointerOver}" />
                    <Setter Target="HeaderTextBlock.Foreground" Value="{ThemeResource DatePickerButtonForegroundPointerOver}" />
                    <Setter Target="ContentButton.Background" Value="{ThemeResource DatePickerButtonBackgroundPointerOver}" />
                    <Setter Target="BottomBorder.Fill" Value="{ThemeResource DatePickerButtonBorderBrushPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="DateText.Foreground" Value="{ThemeResource DatePickerButtonDateTextForegroundPressed}" />
                    <Setter Target="HeaderTextBlock.Foreground" Value="{ThemeResource DatePickerButtonForegroundPressed}" />
                    <Setter Target="ContentButton.Background" Value="{ThemeResource DatePickerButtonBackgroundPressed}" />
                    <Setter Target="BottomBorder.Fill" Value="{ThemeResource DatePickerButtonBorderBrushPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="DateText.Foreground" Value="{ThemeResource DatePickerButtonDateTextForegroundDisabled}" />
                    <Setter Target="HeaderTextBlock.Foreground" Value="{ThemeResource DatePickerButtonForegroundDisabled}" />
                    <Setter Target="ContentButton.Background" Value="{ThemeResource DatePickerButtonBackgroundDisabled}" />
                    <Setter Target="BottomBorder.Fill" Value="{ThemeResource DatePickerButtonBorderBrushDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="HasDateStates">
                <VisualState x:Name="HasDate" />
                <VisualState x:Name="HasNoDate">
                  <VisualState.Setters>
                    <Setter Target="DateText.Visibility" Value="Collapsed" />
                    <Setter Target="PlaceholderText.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialDefaultDatePickerStyle" TargetType="DatePicker" BasedOn="{StaticResource MaterialDatePickerStyle}" />
  <!--origin: Styles\Controls\v2\FloatingActionButton.xaml-->
  <Style x:Key="MaterialFabStyle" TargetType="Button">
    <Setter Property="Background" Value="{ThemeResource FabBackground}" />
    <Setter Property="Foreground" Value="{ThemeResource FabForeground}" />
    <Setter Property="FontFamily" Value="{ThemeResource MaterialMediumFontFamily}" />
    <Setter Property="FontSize" Value="{ThemeResource LabelLargeFontSize}" />
    <Setter Property="FontWeight" Value="{ThemeResource LabelLargeFontWeight}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="CornerRadius" Value="{ThemeResource MaterialFabCornerRadius}" />
    <Setter Property="Padding" Value="{ThemeResource MaterialFabPadding}" />
    <!-- Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388 -->
    <Setter Property="um:ControlExtensions.Icon" Value="{x:Null}" />
    <Setter Property="um:ControlExtensions.IconHeight" Value="{ThemeResource MaterialFabContentWidthOrHeight}" />
    <Setter Property="um:ControlExtensions.IconWidth" Value="{ThemeResource MaterialFabContentWidthOrHeight}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid>
            <toolkit:ElevatedView x:Name="ElevatedView" Margin="0,0,6,6" Background="Transparent" CornerRadius="{TemplateBinding CornerRadius}" Elevation="6">
              <um:Ripple x:Name="Ripple" CornerRadius="{TemplateBinding CornerRadius}" Feedback="{TemplateBinding Foreground}" FeedbackOpacity="{StaticResource PressedOpacity}">
                <Grid x:Name="Root" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding Background}">
                  <StackPanel x:Name="ContentPanel" Padding="{TemplateBinding Padding}" Orientation="Horizontal">
                    <!-- Icon -->
                    <Viewbox Width="{Binding Path=(um:ControlExtensions.IconWidth), RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=(um:ControlExtensions.IconHeight), RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
                      <ContentPresenter x:Name="IconPresenter" Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Viewbox>
                    <!-- Icon/Content spacing -->
                    <Border Visibility="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyToCollapsed}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
                      <Border Width="{ThemeResource MaterialFabIconTextPadding}" Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />
                    </Border>
                    <!-- Content -->
                    <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" />
                  </StackPanel>
                  <Border x:Name="StateOverlay" />
                </Grid>
              </um:Ripple>
            </toolkit:ElevatedView>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="StateOverlay.Background" Value="{ThemeResource FabStateOverlayBackgroundPointerOver}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource FabForegroundPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource FabForegroundPointerOver}" />
                    <Setter Target="Root.Background" Value="{ThemeResource FabBackgroundPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="StateOverlay.Background" Value="{ThemeResource FabStateOverlayBackgroundPressed}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource FabForegroundPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource FabForegroundPressed}" />
                    <Setter Target="Root.Background" Value="{ThemeResource FabBackgroundPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource FabForegroundDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource FabForegroundDisabled}" />
                    <Setter Target="Root.Background" Value="{ThemeResource FabBackgroundDisabled}" />
                    <Setter Target="StateOverlay.Background" Value="{ThemeResource FabStateOverlayBackgroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="StateOverlay.Background" Value="{ThemeResource FabStateOverlayBackgroundFocused}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerFocused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialSurfaceFabStyle" BasedOn="{StaticResource MaterialFabStyle}" TargetType="Button">
    <Setter Property="Background" Value="{ThemeResource FabSurfaceBackground}" />
    <Setter Property="Foreground" Value="{ThemeResource FabSurfaceForeground}" />
    <Setter Property="FontFamily" Value="{ThemeResource MaterialMediumFontFamily}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="CornerRadius" Value="{ThemeResource MaterialFabCornerRadius}" />
    <Setter Property="Padding" Value="{ThemeResource MaterialFabPadding}" />
    <!-- Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388 -->
    <Setter Property="um:ControlExtensions.Icon" Value="{x:Null}" />
    <Setter Property="um:ControlExtensions.IconHeight" Value="{ThemeResource MaterialFabContentWidthOrHeight}" />
    <Setter Property="um:ControlExtensions.IconWidth" Value="{ThemeResource MaterialFabContentWidthOrHeight}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid>
            <toolkit:ElevatedView x:Name="ElevatedView" Margin="0,0,6,6" Background="Transparent" CornerRadius="{TemplateBinding CornerRadius}" Elevation="6">
              <um:Ripple x:Name="Ripple" CornerRadius="{TemplateBinding CornerRadius}" Feedback="{TemplateBinding Foreground}" FeedbackOpacity="{StaticResource PressedOpacity}">
                <Grid x:Name="Root" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding Background}">
                  <StackPanel x:Name="ContentPanel" Padding="{TemplateBinding Padding}" Orientation="Horizontal">
                    <!-- Icon -->
                    <Viewbox Width="{Binding Path=(um:ControlExtensions.IconWidth), RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=(um:ControlExtensions.IconHeight), RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
                      <ContentPresenter x:Name="IconPresenter" Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Viewbox>
                    <!-- Icon/Content spacing -->
                    <Border Visibility="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyToCollapsed}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
                      <Border Width="{ThemeResource MaterialFabIconTextPadding}" Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />
                    </Border>
                    <!-- Content -->
                    <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" />
                  </StackPanel>
                  <Border x:Name="StateOverlay" />
                </Grid>
              </um:Ripple>
            </toolkit:ElevatedView>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="StateOverlay.Background" Value="{ThemeResource FabSurfaceStateOverlayBackgroundPointerOver}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource FabSurfaceForegroundPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource FabSurfaceForegroundPointerOver}" />
                    <Setter Target="Root.Background" Value="{ThemeResource FabSurfaceBackgroundPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="StateOverlay.Background" Value="{ThemeResource FabSurfaceStateOverlayBackgroundPressed}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource FabSurfaceForegroundPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource FabSurfaceForegroundPressed}" />
                    <Setter Target="Root.Background" Value="{ThemeResource FabSurfaceBackgroundPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource FabSurfaceForegroundDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource FabSurfaceForegroundDisabled}" />
                    <Setter Target="Root.Background" Value="{ThemeResource FabSurfaceBackgroundDisabled}" />
                    <Setter Target="StateOverlay.Background" Value="{ThemeResource FabSurfaceStateOverlayBackgroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="StateOverlay.Background" Value="{ThemeResource FabSurfaceStateOverlayBackgroundFocused}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerFocused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialSecondaryFabStyle" BasedOn="{StaticResource MaterialFabStyle}" TargetType="Button">
    <Setter Property="Background" Value="{ThemeResource FabSecondaryBackground}" />
    <Setter Property="Foreground" Value="{ThemeResource FabSecondaryForeground}" />
    <Setter Property="FontFamily" Value="{ThemeResource MaterialMediumFontFamily}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="CornerRadius" Value="{ThemeResource MaterialFabCornerRadius}" />
    <Setter Property="Padding" Value="{ThemeResource MaterialFabPadding}" />
    <!-- Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388 -->
    <Setter Property="um:ControlExtensions.Icon" Value="{x:Null}" />
    <Setter Property="um:ControlExtensions.IconHeight" Value="{ThemeResource MaterialFabContentWidthOrHeight}" />
    <Setter Property="um:ControlExtensions.IconWidth" Value="{ThemeResource MaterialFabContentWidthOrHeight}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid>
            <toolkit:ElevatedView x:Name="ElevatedView" Margin="0,0,6,6" Background="Transparent" CornerRadius="{TemplateBinding CornerRadius}" Elevation="6">
              <um:Ripple x:Name="Ripple" CornerRadius="{TemplateBinding CornerRadius}" Feedback="{TemplateBinding Foreground}" FeedbackOpacity="{StaticResource PressedOpacity}">
                <Grid x:Name="Root" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding Background}">
                  <StackPanel x:Name="ContentPanel" Padding="{TemplateBinding Padding}" Orientation="Horizontal">
                    <!-- Icon -->
                    <Viewbox Width="{Binding Path=(um:ControlExtensions.IconWidth), RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=(um:ControlExtensions.IconHeight), RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
                      <ContentPresenter x:Name="IconPresenter" Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Viewbox>
                    <!-- Icon/Content spacing -->
                    <Border Visibility="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyToCollapsed}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
                      <Border Width="{ThemeResource MaterialFabIconTextPadding}" Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />
                    </Border>
                    <!-- Content -->
                    <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" />
                  </StackPanel>
                  <Border x:Name="StateOverlay" />
                </Grid>
              </um:Ripple>
            </toolkit:ElevatedView>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource FabSecondaryForegroundPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource FabSecondaryForegroundPointerOver}" />
                    <Setter Target="Root.Background" Value="{ThemeResource FabSecondaryBackgroundPointerOver}" />
                    <Setter Target="StateOverlay.Background" Value="{ThemeResource FabSecondaryStateOverlayBackgroundPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource FabSecondaryForegroundPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource FabSecondaryForegroundPressed}" />
                    <Setter Target="Root.Background" Value="{ThemeResource FabSecondaryBackgroundPressed}" />
                    <Setter Target="StateOverlay.Background" Value="{ThemeResource FabSecondaryStateOverlayBackgroundPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource FabSecondaryForegroundDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource FabSecondaryForegroundDisabled}" />
                    <Setter Target="Root.Background" Value="{ThemeResource FabSecondaryBackgroundDisabled}" />
                    <Setter Target="StateOverlay.Background" Value="{ThemeResource FabSecondaryStateOverlayBackgroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="StateOverlay.Background" Value="{ThemeResource FabSecondaryStateOverlayBackgroundFocused}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerFocused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialTertiaryFabStyle" BasedOn="{StaticResource MaterialFabStyle}" TargetType="Button">
    <Setter Property="Background" Value="{ThemeResource FabTertiaryBackground}" />
    <Setter Property="Foreground" Value="{ThemeResource FabTertiaryForeground}" />
    <Setter Property="FontFamily" Value="{ThemeResource MaterialMediumFontFamily}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="CornerRadius" Value="{ThemeResource MaterialFabCornerRadius}" />
    <Setter Property="Padding" Value="{ThemeResource MaterialFabPadding}" />
    <!-- Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388 -->
    <Setter Property="um:ControlExtensions.Icon" Value="{x:Null}" />
    <Setter Property="um:ControlExtensions.IconHeight" Value="{ThemeResource MaterialFabContentWidthOrHeight}" />
    <Setter Property="um:ControlExtensions.IconWidth" Value="{ThemeResource MaterialFabContentWidthOrHeight}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid>
            <toolkit:ElevatedView x:Name="ElevatedView" Margin="0,0,6,6" Background="Transparent" CornerRadius="{TemplateBinding CornerRadius}" Elevation="6">
              <um:Ripple x:Name="Ripple" CornerRadius="{TemplateBinding CornerRadius}" Feedback="{TemplateBinding Foreground}" FeedbackOpacity="{StaticResource PressedOpacity}">
                <Grid x:Name="Root" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding Background}">
                  <StackPanel x:Name="ContentPanel" Padding="{TemplateBinding Padding}" Orientation="Horizontal">
                    <!-- Icon -->
                    <Viewbox Width="{Binding Path=(um:ControlExtensions.IconWidth), RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=(um:ControlExtensions.IconHeight), RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
                      <ContentPresenter x:Name="IconPresenter" Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Viewbox>
                    <!-- Icon/Content spacing -->
                    <Border Visibility="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyToCollapsed}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
                      <Border Width="{ThemeResource MaterialFabIconTextPadding}" Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />
                    </Border>
                    <!-- Content -->
                    <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" />
                  </StackPanel>
                  <Border x:Name="StateOverlay" />
                </Grid>
              </um:Ripple>
            </toolkit:ElevatedView>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource FabTertiaryForegroundPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource FabTertiaryForegroundPointerOver}" />
                    <Setter Target="Root.Background" Value="{ThemeResource FabTertiaryBackgroundPointerOver}" />
                    <Setter Target="StateOverlay.Background" Value="{ThemeResource FabTertiaryStateOverlayBackgroundPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource FabTertiaryForegroundPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource FabTertiaryForegroundPressed}" />
                    <Setter Target="Root.Background" Value="{ThemeResource FabTertiaryBackgroundPressed}" />
                    <Setter Target="StateOverlay.Background" Value="{ThemeResource FabTertiaryStateOverlayBackgroundPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource FabTertiaryForegroundDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource FabTertiaryForegroundDisabled}" />
                    <Setter Target="Root.Background" Value="{ThemeResource FabTertiaryBackgroundDisabled}" />
                    <Setter Target="StateOverlay.Background" Value="{ThemeResource FabTertiaryStateOverlayBackgroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="StateOverlay.Background" Value="{ThemeResource FabTertiaryStateOverlayBackgroundFocused}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerFocused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialSmallFabStyle" BasedOn="{StaticResource MaterialFabStyle}" TargetType="Button">
    <Setter Property="CornerRadius" Value="{ThemeResource MaterialSmallFabCornerRadius}" />
    <Setter Property="Padding" Value="{ThemeResource MaterialSmallFabPadding}" />
    <Setter Property="um:ControlExtensions.IconHeight" Value="{ThemeResource MaterialSmallFabContentWidthOrHeight}" />
    <Setter Property="um:ControlExtensions.IconWidth" Value="{ThemeResource MaterialSmallFabContentWidthOrHeight}" />
  </Style>
  <Style x:Key="MaterialSurfaceSmallFabStyle" BasedOn="{StaticResource MaterialSurfaceFabStyle}" TargetType="Button">
    <Setter Property="CornerRadius" Value="{ThemeResource MaterialSmallFabCornerRadius}" />
    <Setter Property="Padding" Value="{ThemeResource MaterialSmallFabPadding}" />
    <Setter Property="um:ControlExtensions.IconHeight" Value="{ThemeResource MaterialSmallFabContentWidthOrHeight}" />
    <Setter Property="um:ControlExtensions.IconWidth" Value="{ThemeResource MaterialSmallFabContentWidthOrHeight}" />
  </Style>
  <Style x:Key="MaterialSecondarySmallFabStyle" BasedOn="{StaticResource MaterialSecondaryFabStyle}" TargetType="Button">
    <Setter Property="CornerRadius" Value="{ThemeResource MaterialSmallFabCornerRadius}" />
    <Setter Property="Padding" Value="{ThemeResource MaterialSmallFabPadding}" />
    <Setter Property="um:ControlExtensions.IconHeight" Value="{ThemeResource MaterialSmallFabContentWidthOrHeight}" />
    <Setter Property="um:ControlExtensions.IconWidth" Value="{ThemeResource MaterialSmallFabContentWidthOrHeight}" />
  </Style>
  <Style x:Key="MaterialTertiarySmallFabStyle" BasedOn="{StaticResource MaterialTertiaryFabStyle}" TargetType="Button">
    <Setter Property="CornerRadius" Value="{ThemeResource MaterialSmallFabCornerRadius}" />
    <Setter Property="Padding" Value="{ThemeResource MaterialSmallFabPadding}" />
    <Setter Property="um:ControlExtensions.IconHeight" Value="{ThemeResource MaterialSmallFabContentWidthOrHeight}" />
    <Setter Property="um:ControlExtensions.IconWidth" Value="{ThemeResource MaterialSmallFabContentWidthOrHeight}" />
  </Style>
  <Style x:Key="MaterialLargeFabStyle" BasedOn="{StaticResource MaterialFabStyle}" TargetType="Button">
    <Setter Property="CornerRadius" Value="{ThemeResource MaterialLargeFabCornerRadius}" />
    <Setter Property="Padding" Value="{ThemeResource MaterialLargeFabPadding}" />
    <Setter Property="um:ControlExtensions.IconHeight" Value="{ThemeResource MaterialLargeFabContentWidthOrHeight}" />
    <Setter Property="um:ControlExtensions.IconWidth" Value="{ThemeResource MaterialLargeFabContentWidthOrHeight}" />
  </Style>
  <Style x:Key="MaterialSurfaceLargeFabStyle" BasedOn="{StaticResource MaterialSurfaceFabStyle}" TargetType="Button">
    <Setter Property="CornerRadius" Value="{ThemeResource MaterialLargeFabCornerRadius}" />
    <Setter Property="Padding" Value="{ThemeResource MaterialLargeFabPadding}" />
    <Setter Property="um:ControlExtensions.IconHeight" Value="{ThemeResource MaterialLargeFabContentWidthOrHeight}" />
    <Setter Property="um:ControlExtensions.IconWidth" Value="{ThemeResource MaterialLargeFabContentWidthOrHeight}" />
  </Style>
  <Style x:Key="MaterialSecondaryLargeFabStyle" BasedOn="{StaticResource MaterialSecondaryFabStyle}" TargetType="Button">
    <Setter Property="CornerRadius" Value="{ThemeResource MaterialLargeFabCornerRadius}" />
    <Setter Property="Padding" Value="{ThemeResource MaterialLargeFabPadding}" />
    <Setter Property="um:ControlExtensions.IconHeight" Value="{ThemeResource MaterialLargeFabContentWidthOrHeight}" />
    <Setter Property="um:ControlExtensions.IconWidth" Value="{ThemeResource MaterialLargeFabContentWidthOrHeight}" />
  </Style>
  <Style x:Key="MaterialTertiaryLargeFabStyle" BasedOn="{StaticResource MaterialTertiaryFabStyle}" TargetType="Button">
    <Setter Property="CornerRadius" Value="{ThemeResource MaterialLargeFabCornerRadius}" />
    <Setter Property="Padding" Value="{ThemeResource MaterialLargeFabPadding}" />
    <Setter Property="um:ControlExtensions.IconHeight" Value="{ThemeResource MaterialLargeFabContentWidthOrHeight}" />
    <Setter Property="um:ControlExtensions.IconWidth" Value="{ThemeResource MaterialLargeFabContentWidthOrHeight}" />
  </Style>
  <!--origin: Styles\Controls\v2\Flyout.xaml-->
  <x:String x:Key="MaterialFlyoutCheckGlyphPathStyle">M30.561941,0L31.997,1.393004 10.467954,23.597999 0,15.350999 1.2379759,13.780992 10.287961,20.909952z</x:String>
  <x:String x:Key="MaterialFlyoutRightArrowPathStyle">M0,0L25.194,16 0,32z</x:String>
  <x:Double x:Key="MaterialFlyoutPresenterMinWidth">112</x:Double>
  <x:Double x:Key="MaterialFlyoutPresenterMaxWidth">280</x:Double>
  <x:Double x:Key="MaterialFlyoutMenuItemHeight">48</x:Double>
  <x:Double x:Key="MaterialFlyoutMenuItemIconHeight">16</x:Double>
  <x:Double x:Key="MaterialFlyoutMenuItemIconWidth">16</x:Double>
  <x:Double x:Key="MaterialFlyoutMenuToggleCheckGlyphWidth">16</x:Double>
  <x:Double x:Key="MaterialFlyoutMenuToggleCheckGlyphHeight">16</x:Double>
  <x:Double x:Key="MaterialFlyoutMenuSeparatorHeight">1</x:Double>
  <GridLength x:Key="MaterialFlyoutMenuItemRightMargin">38</GridLength>
  <Style x:Key="MaterialFlyoutPresenterStyle" TargetType="FlyoutPresenter">
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="MinWidth" Value="NaN" />
    <Setter Property="MinHeight" Value="NaN" />
    <Setter Property="MaxWidth" Value="NaN" />
    <Setter Property="MaxHeight" Value="NaN" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="FlyoutPresenter">
          <Border HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
            <Border.Transitions>
              <TransitionCollection>
                <PaneThemeTransition Edge="Bottom" />
              </TransitionCollection>
            </Border.Transitions>
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialContentFlyoutPresenterStyle" TargetType="FlyoutPresenter">
    <Setter Property="Foreground" Value="{ThemeResource OnSurfaceBrush}" />
    <Setter Property="Background" Value="{ThemeResource SurfaceBrush}" />
    <!--  Start: Label Large Typo  -->
    <Setter Property="FontSize" Value="{ThemeResource LabelLargeFontSize}" />
    <Setter Property="FontWeight" Value="{ThemeResource LabelLargeFontWeight}" />
    <Setter Property="FontFamily" Value="{ThemeResource MaterialMediumFontFamily}" />
    <!--  End: Label Large Typo  -->
    <Setter Property="MinWidth" Value="{StaticResource MaterialFlyoutPresenterMinWidth}" />
    <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
    <Setter Property="Margin" Value="16" />
    <Setter Property="CornerRadius" Value="4" />
    <Setter Property="Margin" Value="16,0" />
  </Style>
  <Style x:Key="MaterialMenuFlyoutPresenterStyle" TargetType="MenuFlyoutPresenter">
    <Setter Property="Foreground" Value="{ThemeResource OnSurfaceBrush}" />
    <Setter Property="Background" Value="{ThemeResource SurfaceBrush}" />
    <!--  Start: Label Large Typo  -->
    <Setter Property="FontSize" Value="{ThemeResource LabelLargeFontSize}" />
    <Setter Property="FontWeight" Value="{ThemeResource LabelLargeFontWeight}" />
    <Setter Property="FontFamily" Value="{ThemeResource MaterialMediumFontFamily}" />
    <!--  End: Label Large Typo  -->
    <Setter Property="MinWidth" Value="{StaticResource MaterialFlyoutPresenterMinWidth}" />
    <Setter Property="MaxWidth" Value="{StaticResource MaterialFlyoutPresenterMaxWidth}" />
    <Setter Property="CornerRadius" Value="4" />
    <Setter Property="Margin" Value="0,0" />
  </Style>
  <Style x:Key="MaterialMenuFlyoutItemStyle" TargetType="MenuFlyoutItem">
    <Setter Property="Foreground" Value="{ThemeResource OnSurfaceBrush}" />
    <Setter Property="Background" Value="{ThemeResource SurfaceBrush}" />
    <Setter Property="Height" Value="{StaticResource MaterialFlyoutMenuItemHeight}" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="MenuFlyoutItem">
          <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <Storyboard>
                    <PointerUpThemeAnimation Storyboard.TargetName="LayoutRoot" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="CommonStatesOverlay.Background" Value="{ThemeResource OnSurfaceHoverBrush}" />
                  </VisualState.Setters>
                  <Storyboard>
                    <PointerUpThemeAnimation Storyboard.TargetName="LayoutRoot" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="CommonStatesOverlay.Background" Value="{ThemeResource OnSurfacePressedBrush}" />
                  </VisualState.Setters>
                  <Storyboard>
                    <PointerDownThemeAnimation Storyboard.TargetName="LayoutRoot" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="TextBlock.Opacity" Value="{StaticResource DisabledOpacity}" />
                    <Setter Target="IconRoot.Opacity" Value="{StaticResource DisabledOpacity}" />
                    <Setter Target="KeyboardAcceleratorTextBlock.Opacity" Value="{StaticResource DisabledOpacity}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="CommonStatesOverlay.Background" Value="{ThemeResource OnSurfaceFocusedBrush}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerFocused" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckPlaceholderStates">
                <VisualState x:Name="NoPlaceholder" />
                <VisualState x:Name="CheckPlaceholder" />
                <VisualState x:Name="IconPlaceholder">
                  <VisualState.Setters>
                    <Setter Target="IconRoot.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CheckAndIconPlaceholder">
                  <VisualState.Setters>
                    <Setter Target="IconRoot.Margin" Value="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}" />
                    <Setter Target="IconRoot.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="KeyboardAcceleratorTextVisibility">
                <VisualState x:Name="KeyboardAcceleratorTextCollapsed" />
                <VisualState x:Name="KeyboardAcceleratorTextVisible">
                  <VisualState.Setters>
                    <Setter Target="KeyboardAcceleratorTextBlock.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="{StaticResource MaterialFlyoutMenuItemRightMargin}" />
              <ColumnDefinition Width="Auto" MinWidth="16" />
              <ColumnDefinition Width="12" />
            </Grid.ColumnDefinitions>
            <Viewbox x:Name="IconRoot" Width="{StaticResource MaterialFlyoutMenuItemIconWidth}" Margin="12,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="Collapsed">
              <ContentPresenter x:Name="IconContent" Content="{TemplateBinding Icon}" Foreground="{ThemeResource OnSurfaceVariantBrush}" />
            </Viewbox>
            <TextBlock x:Name="TextBlock" Grid.Column="1" Margin="12,0,0,0" VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" Style="{StaticResource MaterialLabelLarge}" Text="{TemplateBinding Text}" />
            <!--  Mobile devices do not support keyboard shortcuts  -->
            <Grid Grid.Column="3" android:Visibility="Collapsed" ios:Visibility="Collapsed">
              <TextBlock x:Name="KeyboardAcceleratorTextBlock" MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KeyboardAcceleratorTextMinWidth}" VerticalAlignment="Center" AutomationProperties.AccessibilityView="Raw" Foreground="{ThemeResource OnSurfaceVariantBrush}" Style="{StaticResource MaterialLabelLarge}" Text="{TemplateBinding KeyboardAcceleratorTextOverride}" TextAlignment="Right" Visibility="Collapsed" />
            </Grid>
            <!--  Overlay  -->
            <Border x:Name="CommonStatesOverlay" Grid.Column="0" Grid.ColumnSpan="5" Background="Transparent" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialToggleMenuFlyoutItemStyle" TargetType="ToggleMenuFlyoutItem">
    <Setter Property="Foreground" Value="{ThemeResource OnSurfaceBrush}" />
    <Setter Property="Background" Value="{ThemeResource SurfaceBrush}" />
    <Setter Property="Height" Value="{StaticResource MaterialFlyoutMenuItemHeight}" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleMenuFlyoutItem">
          <Grid x:Name="LayoutRoot" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <Storyboard>
                    <PointerUpThemeAnimation Storyboard.TargetName="AnimationRoot" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="CommonStatesOverlay.Background" Value="{ThemeResource OnSurfaceHoverBrush}" />
                  </VisualState.Setters>
                  <Storyboard>
                    <PointerUpThemeAnimation Storyboard.TargetName="AnimationRoot" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="CommonStatesOverlay.Background" Value="{ThemeResource OnSurfacePressedBrush}" />
                  </VisualState.Setters>
                  <Storyboard>
                    <PointerDownThemeAnimation Storyboard.TargetName="AnimationRoot" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="TextBlock.Opacity" Value="{StaticResource DisabledOpacity}" />
                    <Setter Target="IconRoot.Opacity" Value="{StaticResource DisabledOpacity}" />
                    <Setter Target="CheckGlyph.Opacity" Value="{StaticResource DisabledOpacity}" />
                    <Setter Target="KeyboardAcceleratorTextBlock.Opacity" Value="{StaticResource DisabledOpacity}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Unchecked" />
                <VisualState x:Name="Checked">
                  <VisualState.Setters>
                    <Setter Target="CheckGlyph.Opacity" Value="1" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="UncheckedWithIcon">
                  <VisualState.Setters>
                    <Setter Target="TextBlock.Margin" Value="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}" />
                    <Setter Target="IconRoot.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CheckedWithIcon">
                  <VisualState.Setters>
                    <Setter Target="TextBlock.Margin" Value="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}" />
                    <Setter Target="IconRoot.Visibility" Value="Visible" />
                    <Setter Target="CheckGlyph.Opacity" Value="1" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="CommonStatesOverlay.Background" Value="{ThemeResource OnSurfaceFocusedBrush}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerFocused" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="KeyboardAcceleratorTextVisibility">
                <VisualState x:Name="KeyboardAcceleratorTextCollapsed" />
                <VisualState x:Name="KeyboardAcceleratorTextVisible">
                  <VisualState.Setters>
                    <Setter Target="KeyboardAcceleratorTextBlock.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="AnimationRoot">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="{StaticResource MaterialFlyoutMenuItemRightMargin}" />
                <ColumnDefinition Width="Auto" MinWidth="16" />
                <ColumnDefinition Width="12" />
              </Grid.ColumnDefinitions>
              <Path x:Name="CheckGlyph" Width="{StaticResource MaterialFlyoutMenuToggleCheckGlyphWidth}" Height="{StaticResource MaterialFlyoutMenuToggleCheckGlyphHeight}" VerticalAlignment="Center" Margin="12,0" Data="{StaticResource MaterialFlyoutCheckGlyphPathStyle}" Fill="{ThemeResource OnSurfaceVariantBrush}" Opacity="0" Stretch="Uniform" />
              <Viewbox x:Name="IconRoot" Grid.Column="1" Width="{StaticResource MaterialFlyoutMenuItemIconWidth}" Height="{StaticResource MaterialFlyoutMenuItemIconHeight}" HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="Collapsed">
                <ContentPresenter x:Name="IconContent" Content="{TemplateBinding Icon}" Foreground="{ThemeResource OnSurfaceVariantBrush}" />
              </Viewbox>
              <TextBlock x:Name="TextBlock" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="{TemplateBinding Foreground}" Style="{StaticResource MaterialLabelLarge}" Text="{TemplateBinding Text}" />
              <!--  Mobile devices do not support keyboard shortcuts  -->
              <Grid Grid.Column="3" android:Visibility="Collapsed" ios:Visibility="Collapsed">
                <TextBlock x:Name="KeyboardAcceleratorTextBlock" VerticalAlignment="Center" AutomationProperties.AccessibilityView="Raw" Foreground="{ThemeResource OnSurfaceVariantBrush}" Style="{StaticResource MaterialLabelLarge}" Text="{TemplateBinding KeyboardAcceleratorTextOverride}" TextAlignment="Right" Visibility="{Binding KeyboardAcceleratorTextOverride, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />
              </Grid>
            </Grid>
            <!--  Overlay  -->
            <Border x:Name="CommonStatesOverlay" Background="Transparent" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialMenuFlyoutSubItemStyle" TargetType="MenuFlyoutSubItem">
    <Setter Property="Foreground" Value="{ThemeResource OnSurfaceBrush}" />
    <Setter Property="Background" Value="{ThemeResource SurfaceBrush}" />
    <Setter Property="Height" Value="{StaticResource MaterialFlyoutMenuItemHeight}" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="MenuFlyoutSubItem">
          <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="CommonStatesOverlay.Background" Value="{ThemeResource OnSurfaceHoverBrush}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="CommonStatesOverlay.Background" Value="{ThemeResource OnSurfacePressedBrush}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="SubMenuOpened">
                  <VisualState.Setters>
                    <Setter Target="CommonStatesOverlay.Background" Value="{ThemeResource OnSurfaceSelectedBrush}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="TextBlock.Opacity" Value="{StaticResource DisabledOpacity}" />
                    <Setter Target="IconRoot.Opacity" Value="{StaticResource DisabledOpacity}" />
                    <Setter Target="SubItemChevron.Opacity" Value="{StaticResource DisabledOpacity}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="CommonStatesOverlay.Background" Value="{ThemeResource OnSurfaceFocusedBrush}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerFocused" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckPlaceholderStates">
                <VisualState x:Name="NoPlaceholder" />
                <VisualState x:Name="CheckPlaceholder">
                  <VisualState.Setters>
                    <Setter Target="TextBlock.Margin" Value="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="IconPlaceholder">
                  <VisualState.Setters>
                    <Setter Target="TextBlock.Margin" Value="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}" />
                    <Setter Target="IconRoot.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CheckAndIconPlaceholder">
                  <VisualState.Setters>
                    <Setter Target="TextBlock.Margin" Value="{ThemeResource MenuFlyoutItemDoublePlaceholderThemeThickness}" />
                    <Setter Target="IconRoot.Margin" Value="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}" />
                    <Setter Target="IconRoot.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Margin="12,0,0,0">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Viewbox x:Name="IconRoot" Grid.Column="0" Width="{StaticResource MaterialFlyoutMenuItemIconWidth}" Height="{StaticResource MaterialFlyoutMenuItemIconHeight}" HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="Collapsed">
                <ContentPresenter x:Name="IconContent" Content="{TemplateBinding Icon}" Foreground="{ThemeResource OnSurfaceVariantBrush}" />
              </Viewbox>
              <TextBlock x:Name="TextBlock" Grid.Column="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="{TemplateBinding Foreground}" Style="{StaticResource MaterialLabelLarge}" Text="{TemplateBinding Text}" />
              <Path x:Name="SubItemChevron" Grid.Column="1" Width="6" Height="10" Margin="54,4,16,0" VerticalAlignment="Center" Data="{StaticResource MaterialFlyoutRightArrowPathStyle}" Fill="{ThemeResource OnSurfaceVariantBrush}" Stretch="Uniform" />
            </Grid>
            <!--  Overlay  -->
            <Border x:Name="CommonStatesOverlay" Background="Transparent" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialMenuFlyoutSeparatorStyle" TargetType="MenuFlyoutSeparator">
    <Setter Property="Background" Value="{ThemeResource SurfaceVariantBrush}" />
    <Setter Property="Padding" Value="0,8" />
    <Setter Property="Height" Value="{StaticResource MaterialFlyoutMenuSeparatorHeight}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="MenuFlyoutSeparator">
          <Rectangle Height="{TemplateBinding Height}" Margin="{TemplateBinding Padding}" Fill="{TemplateBinding Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialDefaultFlyoutPresenterStyle" TargetType="FlyoutPresenter" BasedOn="{StaticResource MaterialFlyoutPresenterStyle}" />
  <Style x:Key="MaterialDefaultMenuFlyoutPresenterStyle" TargetType="MenuFlyoutPresenter" BasedOn="{StaticResource MaterialMenuFlyoutPresenterStyle}" />
  <Style x:Key="MaterialDefaultMenuFlyoutItemStyle" TargetType="MenuFlyoutItem" BasedOn="{StaticResource MaterialMenuFlyoutItemStyle}" />
  <Style x:Key="MaterialDefaultToggleMenuFlyoutItemStyle" TargetType="ToggleMenuFlyoutItem" BasedOn="{StaticResource MaterialToggleMenuFlyoutItemStyle}" />
  <Style x:Key="MaterialDefaultMenuFlyoutSubItemStyle" TargetType="MenuFlyoutSubItem" BasedOn="{StaticResource MaterialMenuFlyoutSubItemStyle}" />
  <Style x:Key="MaterialDefaultMenuFlyoutSeparatorStyle" TargetType="MenuFlyoutSeparator" BasedOn="{StaticResource MaterialMenuFlyoutSeparatorStyle}" />
  <!--origin: Styles\Controls\v2\HyperlinkButton.xaml-->
  <Style x:Key="MaterialHyperlinkButtonStyle" TargetType="HyperlinkButton">
    <Setter Property="Foreground" Value="{ThemeResource HyperlinkButtonForeground}" />
    <Setter Property="Padding" Value="{ThemeResource HyperlinkButtonPadding}" />
    <Setter Property="FontSize" Value="{ThemeResource HyperlinkButtonFontSize}" />
    <Setter Property="FontFamily" Value="{ThemeResource HyperlinkButtonFontFamily}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="HyperlinkButton">
          <Grid Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource HyperlinkButtonForeground}" />
                    <Setter Target="Content.Background" Value="{ThemeResource HyperlinkButtonBackground}" />
                    <Setter Target="Content.BorderBrush" Value="{ThemeResource HyperlinkButtonBorderBrush}" />
                    <Setter Target="Content.Opacity" Value="{ThemeResource HyperlinkButtonBackgroundOpacity}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource HyperlinkButtonForegroundPointerOver}" />
                    <Setter Target="Content.Background" Value="{ThemeResource HyperlinkButtonBackgroundPointerOver}" />
                    <Setter Target="Content.BorderBrush" Value="{ThemeResource HyperlinkButtonBorderBrushPointerOver}" />
                    <Setter Target="Content.Opacity" Value="{ThemeResource HyperlinkButtonBackgroundOpacityPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource HyperlinkButtonForegroundPressed}" />
                    <Setter Target="Content.Background" Value="{ThemeResource HyperlinkButtonBackgroundPressed}" />
                    <Setter Target="Content.BorderBrush" Value="{ThemeResource HyperlinkButtonBorderBrushPressed}" />
                    <Setter Target="Content.Opacity" Value="{ThemeResource HyperlinkButtonBackgroundOpacityPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource HyperlinkButtonForegroundDisabled}" />
                    <Setter Target="Content.BorderBrush" Value="{ThemeResource HyperlinkButtonBorderBrushDisabled}" />
                    <Setter Target="Content.Background" Value="{ThemeResource HyperlinkButtonBackgroundDisabled}" />
                    <Setter Target="Content.Opacity" Value="{ThemeResource HyperlinkButtonBackgroundOpacityDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
                <VisualState x:Name="PointerFocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="Content" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" MinHeight="{TemplateBinding MinHeight}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}">
              <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Top" TextWrapping="Wrap" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialSecondaryHyperlinkButtonStyle" TargetType="HyperlinkButton" BasedOn="{StaticResource MaterialHyperlinkButtonStyle}">
    <Setter Property="Foreground" Value="{ThemeResource SecondaryBrush}" />
  </Style>
  <Style x:Key="MaterialDefaultHyperlinkButtonStyle" TargetType="HyperlinkButton" BasedOn="{StaticResource MaterialHyperlinkButtonStyle}" />
  <!--origin: Styles\Controls\v2\ListView.xaml-->
  <Style x:Key="MaterialListViewItemStyle" TargetType="ListViewItem">
    <Setter Property="FontFamily" Value="{ThemeResource MaterialRegularFontFamily}" />
    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
    <Setter Property="Background" Value="{ThemeResource ListViewItemBackground}" />
    <Setter Property="Foreground" Value="{ThemeResource ListViewItemForeground}" />
    <Setter Property="TabNavigation" Value="Local" />
    <Setter Property="IsHoldingEnabled" Value="True" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}" />
    <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}" />
    <Setter Property="AllowDrop" Value="False" />
    <Setter Property="UseSystemFocusVisuals" Value="True" />
    <Setter Property="FocusVisualMargin" Value="0" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="FocusVisualPrimaryBrush" Value="{ThemeResource ListViewItemFocusVisualPrimaryBrush}" />
    <Setter Property="FocusVisualPrimaryThickness" Value="2" />
    <Setter Property="FocusVisualSecondaryBrush" Value="{ThemeResource ListViewItemFocusVisualSecondaryBrush}" />
    <Setter Property="FocusVisualSecondaryThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListViewItem">
          <Grid x:Name="ContentBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <Storyboard>
                    <win:PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PrimaryHoverBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <win:PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PrimaryPressedBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <win:PointerDownThemeAnimation TargetName="ContentPresenter" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Opacity" Duration="0:0:0" To="1" />
                    <DoubleAnimation Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PrimarySelectedBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <win:PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PointerOverSelected">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Opacity" Duration="0:0:0" To="1" />
                    <DoubleAnimation Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PrimaryPressedBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <win:PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PressedSelected">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Opacity" Duration="0:0:0" To="1" />
                    <DoubleAnimation Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PrimaryPressedBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <win:PointerDownThemeAnimation TargetName="ContentPresenter" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DisabledStates">
                <VisualState x:Name="Enabled" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="{ThemeResource ListViewItemDisabledThemeOpacity}" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="MultiSelectStates">
                <VisualState x:Name="MultiSelectDisabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform" Storyboard.TargetProperty="X">
                      <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                      <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="-32" KeySpline="0.1,0.9,0.2,1" />
                    </DoubleAnimationUsingKeyFrames>
                    <win:DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform" Storyboard.TargetProperty="X">
                      <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                      <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="32" KeySpline="0.1,0.9,0.2,1" />
                    </win:DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform" Storyboard.TargetProperty="X">
                      <EasingDoubleKeyFrame KeyTime="0:0:0" Value="32" />
                      <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1" />
                    </DoubleAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.333" Value="Collapsed" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MultiSelectEnabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform" Storyboard.TargetProperty="X">
                      <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32" />
                      <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1" />
                    </DoubleAnimationUsingKeyFrames>
                    <win:DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform" Storyboard.TargetProperty="X">
                      <EasingDoubleKeyFrame KeyTime="0:0:0" Value="32" />
                      <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1" />
                    </win:DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform" Storyboard.TargetProperty="X">
                      <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32" />
                      <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1" />
                    </DoubleAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterGrid" Storyboard.TargetProperty="Margin">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="32,0,0,0" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DataVirtualizationStates">
                <VisualState x:Name="DataAvailable" />
                <VisualState x:Name="DataPlaceholder">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderRect" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ReorderHintStates">
                <VisualState x:Name="NoReorderHint" />
                <VisualState x:Name="BottomReorderHint">
                  <Storyboard>
                    <win:DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Direction="Bottom" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="TopReorderHint">
                  <Storyboard>
                    <win:DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Direction="Top" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="RightReorderHint">
                  <Storyboard>
                    <win:DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Direction="Right" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="LeftReorderHint">
                  <Storyboard>
                    <win:DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Direction="Left" />
                  </Storyboard>
                </VisualState>
                <VisualStateGroup.Transitions>
                  <VisualTransition To="NoReorderHint" GeneratedDuration="0:0:0.2" />
                </VisualStateGroup.Transitions>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DragStates">
                <VisualState x:Name="NotDragging" />
                <VisualState x:Name="Dragging">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="{ThemeResource ListViewItemDragThemeOpacity}" />
                    <win:DragItemThemeAnimation TargetName="ContentBorder" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DraggingTarget">
                  <Storyboard>
                    <win:DropTargetItemThemeAnimation TargetName="ContentBorder" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MultipleDraggingPrimary">
                  <Storyboard>
                    <!-- These two Opacity animations are required - the FadeInThemeAnimations
										 on the same elements animate an internal Opacity. -->
                    <DoubleAnimation Storyboard.TargetName="MultiArrangeOverlayBackground" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                    <DoubleAnimation Storyboard.TargetName="MultiArrangeOverlayText" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                    <DoubleAnimation Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="{ThemeResource ListViewItemDragThemeOpacity}" />
                    <win:FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground" />
                    <win:FadeInThemeAnimation TargetName="MultiArrangeOverlayText" />
                    <win:DragItemThemeAnimation TargetName="ContentBorder" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MultipleDraggingSecondary">
                  <Storyboard>
                    <win:FadeOutThemeAnimation TargetName="ContentBorder" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DraggedPlaceholder">
                  <Storyboard>
                    <win:FadeOutThemeAnimation TargetName="ContentBorder" />
                  </Storyboard>
                </VisualState>
                <VisualStateGroup.Transitions>
                  <VisualTransition To="NotDragging" GeneratedDuration="0:0:0.2" />
                </VisualStateGroup.Transitions>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="BorderBackground" IsHitTestVisible="False" Fill="{ThemeResource SystemControlHighlightListAccentLowBrush}" Opacity="0" Control.IsTemplateFocusTarget="True" />
            <Grid x:Name="ContentPresenterGrid" Background="Transparent" Margin="0,0,0,0">
              <Grid.RenderTransform>
                <TranslateTransform x:Name="ContentPresenterTranslateTransform" />
              </Grid.RenderTransform>
              <ContentPresenter x:Name="ContentPresenter" ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplate="{TemplateBinding ContentTemplate}" xamarin:ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" />
            </Grid>
            <!-- The 'Xg' text simulates the amount of space one line of text will occupy.
						  In the DataPlaceholder state, the Content is not loaded yet so we
						  approximate the size of the item using placeholder text. -->
            <TextBlock x:Name="PlaceholderTextBlock" Opacity="0" Text="Xg" Foreground="{x:Null}" Margin="{TemplateBinding Padding}" IsHitTestVisible="False" AutomationProperties.AccessibilityView="Raw" />
            <Rectangle x:Name="PlaceholderRect" Visibility="Collapsed" Fill="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" />
            <Rectangle x:Name="MultiArrangeOverlayBackground" IsHitTestVisible="False" Opacity="0" Fill="{ThemeResource ListViewItemDragBackgroundThemeBrush}" Grid.ColumnSpan="2" />
            <Border x:Name="MultiSelectSquare" BorderBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" BorderThickness="2" Width="20" Height="20" Margin="12,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" Visibility="Collapsed">
              <Border.Clip>
                <RectangleGeometry Rect="0,0,20,20">
                  <win:RectangleGeometry.Transform>
                    <TranslateTransform x:Name="MultiSelectClipTransform" />
                  </win:RectangleGeometry.Transform>
                </RectangleGeometry>
              </Border.Clip>
              <Border.RenderTransform>
                <TranslateTransform x:Name="MultiSelectCheckBoxTransform" />
              </Border.RenderTransform>
              <FontIcon x:Name="MultiSelectCheck" FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE73E;" FontSize="16" Foreground="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" Visibility="Collapsed" Opacity="0" />
            </Border>
            <TextBlock x:Name="MultiArrangeOverlayText" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DragItemsCount}" Foreground="{ThemeResource ListViewItemDragForegroundThemeBrush}" FontFamily="{ThemeResource MaterialRegularFontFamily}" FontSize="26.667" IsHitTestVisible="False" Opacity="0" TextWrapping="Wrap" TextTrimming="WordEllipsis" Margin="18,9,0,0" AutomationProperties.AccessibilityView="Raw" Grid.ColumnSpan="2" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialListViewStyle" TargetType="ListView">
    <Setter Property="ItemContainerStyle" Value="{StaticResource MaterialListViewItemStyle}" />
  </Style>
  <Style x:Key="MaterialDefaultListViewItemStyle" TargetType="ListViewItem" BasedOn="{StaticResource MaterialListViewItemStyle}" />
  <Style x:Key="MaterialDefaultListViewStyle" TargetType="ListView" BasedOn="{StaticResource MaterialListViewStyle}" />
  <!--origin: Styles\Controls\v2\MediaPlayerElement.xaml-->
  <x:String x:Key="AspectRatioPathData">m19,12h-2v3h-3v2h5v-5Zm-12-3h3v-2h-5v5h2v-3Zm14-6H3c-1.1,0-2,.9-2,2v14c0,1.1.9,2,2,2h18c1.1,0,2-.9,2-2V5c0-1.1-.9-2-2-2Zm0,16.01H3V4.99h18v14.02Z</x:String>
  <x:String x:Key="AudioTracksSelectionPathData">m16.76,13.81c.08.08.12.17.12.27v4.54c0,.11-.04.2-.12.27-.07.07-.16.11-.26.11s-.19-.04-.26-.11l-1.39-1.4h-.59c-.1,0-.19-.04-.26-.11-.07-.08-.11-.17-.11-.27v-1.51c0-.11.04-.2.11-.27s.16-.11.26-.11h.59l1.39-1.4c.07-.07.16-.11.26-.11h0c.1-.01.19.03.26.1Zm1.87,1.74v-.05c-.04-.15-.08-.3-.13-.44-.04-.12-.09-.23-.13-.32,0-.02-.02-.04-.03-.06-.03-.06-.08-.11-.14-.15-.06-.04-.12-.06-.19-.06-.1,0-.19.04-.26.11s-.11.16-.11.27c0,.03,0,.07.02.13.02.05.04.1.06.16l.07.17s.02.05.03.07c.01.03.02.05.02.07.05.15.09.3.12.46.04.15.05.31.05.47s-.02.31-.05.47c-.03.16-.07.31-.12.46,0,.01-.01.03-.02.04,0,.02-.02.05-.03.09,0,.02-.02.04-.02.06-.02.04-.03.07-.05.11l-.06.17s-.02.09-.02.13c0,.1.04.19.11.27.07.07.16.11.26.11.07,0,.13-.02.19-.05.06-.04.11-.09.14-.15.06-.11.11-.24.16-.38.05-.15.09-.29.13-.44.04-.15.07-.3.09-.45v-.03c.02-.14.04-.27.04-.38,0-.12-.01-.26-.04-.41-.02-.15-.05-.3-.09-.45Zm.37-10.54H5c-1.11,0-2,.91-2,2.02v8.48c0,1.11.89,2.02,2,2.02h7.53v-1.51H4.5V6.52h15v5.45h1.5v-4.94c0-1.11-.9-2.02-2-2.02Zm.96,9.5v.02c-.03-.07-.06-.15-.1-.24l-.02-.05c-.03-.08-.07-.15-.11-.22-.05-.09-.11-.16-.18-.22-.07-.06-.14-.09-.23-.09-.11,0-.2.04-.27.11s-.11.16-.11.27c0,.05,0,.09.02.12.02.03.04.06.06.1.1.16.17.32.23.47.09.25.15.51.19.77.04.26.06.53.06.8s-.02.53-.06.8c-.04.26-.1.52-.19.77-.04.1-.08.19-.12.27-.05.08-.1.16-.15.25-.01.02-.02.05-.03.08v.09c0,.11.04.2.11.27.07.07.16.11.27.11.09,0,.16-.03.23-.09s.12-.13.18-.22c.05-.09.1-.18.13-.27.04-.09.07-.18.09-.24.11-.3.19-.6.23-.9.05-.31.07-.62.07-.93s-.02-.62-.07-.93-.12-.61-.23-.9Z</x:String>
  <x:String x:Key="CCSelectionOffPathData">m19,4H5c-1.11,0-2,.9-2,2v12c0,1.1.89,2,2,2h14c1.1,0,2-.9,2-2V6c0-1.1-.9-2-2-2Zm-8,7h-1.5v-.5h-2v3h2v-.5h1.5v1c0,.55-.45,1-1,1h-3c-.55,0-1-.45-1-1v-4c0-.55.45-1,1-1h3c.55,0,1,.45,1,1v1Zm7,0h-1.5v-.5h-2v3h2v-.5h1.5v1c0,.55-.45,1-1,1h-3c-.55,0-1-.45-1-1v-4c0-.55.45-1,1-1h3c.55,0,1,.45,1,1v1Z</x:String>
  <x:String x:Key="CCSelectionOnPathData">m19.5,5.5v13H4.5V5.5h15Zm-.5-1.5H5c-1.11,0-2,.9-2,2v12c0,1.1.89,2,2,2h14c1.1,0,2-.9,2-2V6c0-1.1-.9-2-2-2Zm-8,7h-1.5v-.5h-2v3h2v-.5h1.5v1c0,.55-.45,1-1,1h-3c-.55,0-1-.45-1-1v-4c0-.55.45-1,1-1h3c.55,0,1,.45,1,1v1Zm7,0h-1.5v-.5h-2v3h2v-.5h1.5v1c0,.55-.45,1-1,1h-3c-.55,0-1-.45-1-1v-4c0-.55.45-1,1-1h3c.55,0,1,.45,1,1v1Z</x:String>
  <x:String x:Key="ChromeCastPathData">m21,3H3c-1.1,0-2,.9-2,2v3h2v-3h18v14h-7v2h7c1.1,0,2-.9,2-2V5c0-1.1-.9-2-2-2ZM1,18v3h3c0-1.66-1.34-3-3-3Zm0-4v2c2.76,0,5,2.24,5,5h2c0-3.87-3.13-7-7-7Zm0-4v2c4.97,0,9,4.03,9,9h2c0-6.08-4.93-11-11-11Z</x:String>
  <x:String x:Key="CompactOverlayPathData">m4,5.11c-2.16,0-2,2-2,2v12.89c0,1.1.9,2,2,2h13.47s1.91.13,1.91-2H4V5.11ZM20,2h-12c-1.1,0-2,.9-2,2v12c0,1.1.9,2,2,2h12c1.1,0,2-.9,2-2V4c0-1.1-.9-2-2-2Zm-6.4,11.3c-.66.49-1.6.02-1.6-.8v-5c0-.82.94-1.29,1.6-.8l3.33,2.5c.53.4.53,1.2,0,1.6l-3.33,2.5Z</x:String>
  <x:String x:Key="ExitFullScreenPathData">m4,16.57h3.43v3.43h2.29v-5.71H4v2.29Zm3.43-9.14h-3.43v2.29h5.71v-5.71h-2.29v3.43Zm6.86,12.57h2.29v-3.43h3.43v-2.29h-5.71v5.71Zm2.29-12.57v-3.43h-2.29v5.71h5.71v-2.29h-3.43Z</x:String>
  <x:String x:Key="FastForwardPathData">m5.5,16.82c-.63.46-1.5,0-1.5-.81V7.99c0-.8.87-1.27,1.5-.81l5.5,4.01c.54.39.54,1.22,0,1.61l-5.5,4.01Zm7.08-8.83v8.02c0,.8.87,1.27,1.5.81l5.5-4.01c.54-.39.54-1.22,0-1.61l-5.5-4.01c-.63-.46-1.5,0-1.5.81Z</x:String>
  <x:String x:Key="FullScreenPathData">m6.29,14.29h-2.29v5.71h5.71v-2.29h-3.43v-3.43Zm-2.29-4.57h2.29v-3.43h3.43v-2.29H4v5.71Zm13.71,8h-3.43v2.29h5.71v-5.71h-2.29v3.43Zm-3.43-13.71v2.29h3.43v3.43h2.29v-5.71h-5.71Z</x:String>
  <x:String x:Key="MutePathData">m16.18,12.59l-2.3-2.3v-.56c0-.7.74-1.13,1.21-.62.71.75,1.14,1.77,1.14,2.88,0,.21-.02.4-.05.59Zm-1.64-6.66c-.38-.16-.66-.52-.66-.94v-.06c0-.6.56-1.05,1.13-.84,3.19,1.21,5.45,4.29,5.45,7.9,0,1.41-.35,2.74-.97,3.9l-1.42-1.42c.32-.77.51-1.6.51-2.48,0-2.73-1.67-5.08-4.04-6.07Zm-2.54,4.88l8.46,8.46-1.19,1.19-1.92-1.93c-.7.57-1.49,1.03-2.34,1.36-.56.22-1.12-.23-1.12-.84v-.06c0-.41.28-.77.66-.94.52-.23,1.01-.52,1.46-.87l-3.99-3.99v4.06c0,.91-1.15,1.3-1.73.66l-2.97-2.82c-.18-.18-.42-.28-.66-.28h-2.69c-.52,0-.94-.42-.94-.94v-3.76c0-.52.42-.94.94-.94h4.05L3.54,4.73l1.19-1.19,7.27,7.27Zm0-2.4l-2.16-1.92.42-.39c.75-.64,1.79-.21,1.75.72v1.59Z</x:String>
  <x:String x:Key="NextTrackPathData">m16,7c0-.55.45-1,1-1s1,.45,1,1v10c0,.55-.45,1-1,1s-1-.45-1-1V7Zm-8.42,9.92l5.77-4.1c.56-.4.56-1.24,0-1.63l-5.77-3.89c-.66-.47-1.58,0-1.58.82v7.99c0,.81.91,1.28,1.58.82Z</x:String>
  <x:String x:Key="PausePathData">m9,15c0,.55.45,1,1,1s1-.45,1-1v-6c0-.55-.45-1-1-1s-1,.45-1,1v6Zm3-13C6.48,2,2,6.48,2,12s4.48,10,10,10,10-4.48,10-10S17.52,2,12,2Zm0,18c-4.41,0-8-3.59-8-8s3.59-8,8-8,8,3.59,8,8-3.59,8-8,8Zm1-5c0,.55.45,1,1,1s1-.45,1-1v-6c0-.55-.45-1-1-1s-1,.45-1,1v6Z</x:String>
  <x:String x:Key="PlayPathData">m8.52,6.15c-.66-.41-1.52.05-1.52.82v10.06c0,.77.86,1.23,1.52.82l8.03-5.03c.61-.38.61-1.26,0-1.64l-8.03-5.03Z</x:String>
  <x:String x:Key="PlaybackRatePathData">m18.18,13.66c.14-.53.22-1.08.22-1.66s-.08-1.13-.22-1.66c-.15-.55-.36-1.06-.64-1.54-.56-.97-1.37-1.78-2.34-2.34-.48-.28-1-.49-1.54-.64-.53-.14-1.08-.22-1.66-.22s-1.13.08-1.66.22l-.41-1.55c.66-.18,1.36-.27,2.07-.27s1.41.09,2.07.27c.68.18,1.33.45,1.93.8,1.21.7,2.22,1.71,2.93,2.93.35.6.62,1.25.8,1.93.18.66.27,1.36.27,2.07s-.09,1.41-.27,2.07c-.18.68-.45,1.33-.8,1.93-.7,1.21-1.71,2.22-2.93,2.93-.6.35-1.25.62-1.93.8-.66.18-1.36.27-2.07.27s-1.41-.09-2.07-.27l.41-1.55c.53.14,1.08.22,1.66.22s1.13-.08,1.66-.22c.55-.15,1.06-.36,1.54-.64.97-.56,1.78-1.37,2.34-2.34.28-.48.49-1,.64-1.54Zm-9.38-7.2l-.8-1.38c-1.21.7-2.22,1.71-2.93,2.93l1.38.8c.56-.97,1.37-1.78,2.34-2.34Zm-2.98,3.89c-.14.53-.22,1.08-.22,1.66s.08,1.13.22,1.66l-1.55.41c-.18-.66-.27-1.36-.27-2.07s.09-1.41.27-2.07l1.55.41Zm.64,4.86l-1.38.8c.7,1.21,1.71,2.22,2.93,2.93l.8-1.38c-.97-.56-1.78-1.37-2.34-2.34Zm7.75-2.82l-3.08,2.19c-.35.25-.84,0-.84-.44v-4.26c0-.43.49-.69.84-.44l3.08,2.08c.3.21.3.66,0,.87Z</x:String>
  <x:String x:Key="PreviousTrackPathData">m7,6c-.55,0-1,.45-1,1v10c0,.55.45,1,1,1s1-.45,1-1V7c0-.55-.45-1-1-1Zm3.66,6.82l5.77,4.07c.66.47,1.58,0,1.58-.82v-8.07c0-.81-.91-1.28-1.58-.82l-5.77,4c-.56.4-.56,1.24,0,1.63Z</x:String>
  <x:String x:Key="RepeatPathData">m12,4.23v-1.74c0-.43-.54-.65-.85-.34l-2.79,2.71c-.2.19-.2.5,0,.69l2.79,2.71c.31.31.85.09.85-.34v-1.74c3.31,0,6,2.61,6,5.83,0,.72-.14,1.42-.39,2.06-.16.4-.1.87.22,1.17l.05.05c.45.44,1.21.36,1.47-.21.42-.94.66-1.98.66-3.07,0-4.29-3.58-7.77-8-7.77Zm0,13.6c-3.31,0-6-2.61-6-5.83,0-.72.14-1.42.39-2.06.16-.4.1-.87-.22-1.17l-.05-.05c-.45-.44-1.21-.36-1.47.21-.42.94-.66,1.98-.66,3.07,0,4.29,3.58,7.77,8,7.77v1.74c0,.43.54.65.85.34l2.79-2.71c.2-.19.2-.5,0-.69l-2.79-2.71c-.31-.31-.85-.09-.85.34v1.74Z</x:String>
  <x:String x:Key="RepeatOnePathData">m12,4.23v-1.74c0-.43-.54-.65-.85-.34l-2.79,2.71c-.2.19-.2.5,0,.69l2.79,2.71c.31.31.85.09.85-.34v-1.74c3.31,0,6,2.61,6,5.83,0,.72-.14,1.42-.39,2.06-.16.4-.1.87.22,1.17l.05.05c.45.44,1.21.36,1.47-.21.42-.94.66-1.98.66-3.07,0-4.29-3.58-7.77-8-7.77Zm0,13.6c-3.31,0-6-2.61-6-5.83,0-.72.14-1.42.39-2.06.16-.4.1-.87-.22-1.17l-.05-.05c-.45-.44-1.21-.36-1.47.21-.42.94-.66,1.98-.66,3.07,0,4.29,3.58,7.77,8,7.77v1.74c0,.43.54.65.85.34l2.79-2.71c.2-.19.2-.5,0-.69l-2.79-2.71c-.31-.31-.85-.09-.85.34v1.74Zm.66-3.93h-.85v-3.26l-1.01.31v-.69l1.77-.63h.09v4.27Z</x:String>
  <x:String x:Key="RewindPathData">m11.41,16.01c0,.8-.87,1.27-1.5.81l-5.5-4.01c-.54-.39-.54-1.22,0-1.61l5.5-4.01c.63-.46,1.5,0,1.5.81v8.02Zm1.58-3.21l5.5,4.01c.63.46,1.5,0,1.5-.81V7.99c0-.8-.87-1.27-1.5-.81l-5.5,4.01c-.54.39-.54,1.22,0,1.61Z</x:String>
  <x:String x:Key="SkipBackwardPathData">m11.97,5.51v-2.51c0-.45-.54-.67-.86-.35l-3.81,3.51c-.2.2-.2.51,0,.71l3.81,3.53c.32.31.86.09.86-.35v-2.53c3.32,0,6.02,2.69,6.02,6s-2.7,6-6.02,6c-2.98,0-5.46-2.17-5.94-5-.09-.54-.53-1-1.09-1s-1.01.45-.94,1c.49,3.95,3.87,7,7.97,7,4.44,0,8.03-3.58,8.03-8s-3.59-8-8.03-8Zm3.15,8.6c0,.32-.03.6-.1.82-.07.22-.17.42-.29.57-.12.15-.28.26-.45.33-.17.07-.37.1-.59.1s-.41-.03-.59-.1c-.18-.07-.33-.18-.46-.33-.13-.15-.23-.34-.3-.57-.07-.23-.11-.5-.11-.82v-.74c0-.32.03-.6.1-.82.07-.22.17-.42.29-.57.12-.15.28-.26.45-.33.17-.07.37-.1.59-.1s.41.03.59.1c.18.07.33.18.46.33.13.15.23.34.3.57.07.23.11.5.11.82v.74Zm-.88-1.3s0-.03,0-.04c-.03-.13-.07-.23-.12-.31s-.11-.14-.19-.17c-.06-.02-.11-.04-.17-.05-.02,0-.05,0-.08,0-.06,0-.11,0-.17.02-.01,0-.03,0-.04.01-.01,0-.03.01-.04.02-.07.03-.14.09-.19.17-.05.08-.09.18-.12.31-.03.13-.04.29-.04.48v.97c0,.19,0,.35.04.48.03.13.07.24.12.32.05.08.11.14.19.17.08.03.16.05.25.05.04,0,.08,0,.12-.01.05,0,.09-.02.13-.04.07-.03.14-.09.19-.17s.09-.19.11-.32c.02-.13.04-.29.04-.48v-.97h0c0-.15,0-.28-.02-.39,0-.02,0-.04,0-.05Zm-3.4,3.06h-.85v-3.26l-1.01.31v-.69l1.77-.63h.09v4.27Z</x:String>
  <x:String x:Key="SkipForwardPathData">m12.03,3v2.51c-4.44,0-8.03,3.58-8.03,8s3.59,8,8.03,8c4.1,0,7.47-3.05,7.97-7,.07-.55-.39-1-.94-1s-.99.45-1.09,1c-.48,2.84-2.96,5-5.94,5-3.32,0-6.02-2.69-6.02-6s2.7-6,6.02-6v2.53c0,.45.54.67.86.35l3.81-3.53c.2-.2.2-.51,0-.71l-3.81-3.51c-.32-.31-.86-.09-.86.35Zm1.74,8.5h.02s.02,0,.02,0c.21,0,1.43-.02,1.42,1.82v.74c0,1.84-1.21,1.82-1.42,1.82h-.02s-.02,0-.02,0c-.19,0-1.42.02-1.42-1.82v-.74c0-1.84,1.22-1.82,1.42-1.82Zm.03,3.7c.38,0,.59-.26.59-1.03v-.97c0-.75-.22-1.01-.6-1.01s-.59.26-.59,1.01v.97c0,.77.22,1.03.6,1.03Zm-4.42-.54c0,.37.33.54.62.54.44,0,.65-.27.65-.59,0-.22-.05-.64-.7-.64h-.45v-.66h.46c.22,0,.63-.07.63-.59h0c0-.05,0-.54-.58-.54-.26,0-.57.14-.57.48h-.85c0-.81.78-1.16,1.4-1.16,1.39,0,1.44,1.01,1.44,1.22,0,.6-.54.87-.65.92.26.1.71.34.71,1,0,.79-.64,1.25-1.51,1.25-.55,0-1.45-.26-1.45-1.23h.85Z</x:String>
  <x:String x:Key="StopPathData">m18,7.5v9c0,.83-.67,1.5-1.5,1.5H7.5c-.83,0-1.5-.67-1.5-1.5V7.5c0-.83.67-1.5,1.5-1.5h9c.83,0,1.5.67,1.5,1.5Z</x:String>
  <x:String x:Key="VolumePathData">m4,9.17c-.55,0-1,.42-1,.94v3.78c0,.52.45.94,1,.94h2.59c.27,0,.52.1.71.28l3,2.83c.63.6,1.71.17,1.71-.67V6.72c0-.84-1.08-1.26-1.71-.67l-3,2.83c-.19.18-.44.28-.71.28h-2.59Zm12.5,2.83c0-1.12-.46-2.14-1.21-2.9-.51-.51-1.29-.08-1.29.62v4.56c0,.7.78,1.13,1.29.62.75-.76,1.21-1.77,1.21-2.9Zm-1.3-7.95c-.6-.22-1.2.24-1.2.84v.06c0,.42.29.78.7.94,2.52,1,4.3,3.36,4.3,6.1s-1.77,5.1-4.3,6.1c-.41.16-.7.52-.7.94v.06c0,.61.6,1.06,1.2.84,3.39-1.22,5.8-4.32,5.8-7.95s-2.41-6.73-5.8-7.95Z</x:String>
  <Style x:Key="MaterialMediaTransportControlsStyle" TargetType="MediaTransportControls">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Background" Value="Red" />
    <Setter Property="FlowDirection" Value="LeftToRight" />
    <Setter Property="Margin" Value="{ThemeResource MediaTransportControlsMargin}" />
    <Setter Property="MaxWidth" Value="{ThemeResource MediaTransportControlsMaxWidth}" />
    <Setter Property="MinWidth" Value="{ThemeResource MediaTransportControlsMinWidth}" />
    <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
    <Setter Property="IsFastForwardButtonVisible" Value="False" />
    <Setter Property="IsFastForwardEnabled" Value="False" />
    <Setter Property="IsFastRewindButtonVisible" Value="False" />
    <Setter Property="IsFastRewindEnabled" Value="False" />
    <Setter Property="IsNextTrackButtonVisible" Value="False" />
    <Setter Property="IsPreviousTrackButtonVisible" Value="False" />
    <Setter Property="IsRepeatButtonVisible" Value="False" />
    <Setter Property="IsSkipBackwardButtonVisible" Value="False" />
    <Setter Property="IsSkipForwardButtonVisible" Value="False" />
    <Setter Property="IsPlaybackRateButtonVisible" Value="False" />
    <Setter Property="IsStopButtonVisible" Value="False" />
    <Setter Property="IsTextScaleFactorEnabled" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="MediaTransportControls">
          <Grid x:Name="RootGrid" Background="Transparent">
            <Grid.Resources>
              <!-- New AppBar button style 40x40 pixels in size -->
              <Style x:Key="MediaTransportControlsAppBarButtonStyle" TargetType="AppBarButton" BasedOn="{StaticResource DefaultAppBarButtonStyle}">
                <Setter Property="Height" Value="{ThemeResource MediaTransportControlsAppBarButtonHeight}" />
                <Setter Property="Width" Value="{ThemeResource MediaTransportControlsAppBarButtonWidth}" />
                <Setter Property="Foreground" Value="{ThemeResource MediaTransportControlsAppBarButtonBrush}" />
                <Setter Property="AllowFocusOnInteraction" Value="True" />
              </Style>
              <!-- New AppBarToggle button style 40x40 pixels in size -->
              <Style x:Key="AppBarToggleButtonStyle" TargetType="AppBarToggleButton" BasedOn="{StaticResource DefaultAppBarToggleButtonStyle}">
                <Setter Property="Height" Value="{ThemeResource MediaTransportControlsAppBarButtonHeight}" />
                <Setter Property="Width" Value="{ThemeResource MediaTransportControlsAppBarButtonWidth}" />
                <Setter Property="Foreground" Value="{ThemeResource MediaTransportControlsAppBarButtonBrush}" />
                <Setter Property="AllowFocusOnInteraction" Value="True" />
              </Style>
              <!-- New CommandBar Style -->
              <Style x:Key="MediaTransportControlsCommandBarStyle" TargetType="CommandBar" BasedOn="{StaticResource DefaultCommandBarStyle}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="DefaultLabelPosition" Value="Collapsed" />
              </Style>
              <!-- Style for Error Message text -->
              <Style x:Key="MediaTextBlockStyle" TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Foreground" Value="{ThemeResource MediaTransportControlsFillMediaText}" />
                <Setter Property="FontSize" Value="{ThemeResource MTCMediaFontSize}" />
                <Setter Property="FontFamily" Value="{ThemeResource MTCMediaFontFamily}" />
                <Setter Property="Style" Value="{ThemeResource CaptionTextBlockStyle}" />
                <Setter Property="IsTextScaleFactorEnabled" Value="False" />
              </Style>
              <!-- Style for Volume Flyout used in Media Transport Controls -->
              <Style x:Key="FlyoutStyle" TargetType="FlyoutPresenter" BasedOn="{StaticResource DefaultFlyoutPresenterStyle}">
                <Setter Property="Background" Value="{ThemeResource MediaTransportControlsFlyoutBackground}" />
                <Setter Property="CornerRadius" Value="0" />
                <Setter Property="Padding" Value="0" />
              </Style>
              <Style x:Key="MediaSliderStyle" TargetType="Slider" BasedOn="{StaticResource DefaultSliderStyle}" />
              <Style x:Key="MediaControlAppBarButtonStyle" TargetType="AppBarButton" BasedOn="{StaticResource DefaultAppBarButtonStyle}" />
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
              <!-- ControlPanel Visibility states -->
              <VisualStateGroup x:Name="ControlPanelVisibilityStates">
                <VisualState x:Name="ControlPanelFadeIn">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ControlPanel_ControlPanelVisibilityStates_Border">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                      <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetProperty="Y" Storyboard.TargetName="TranslateVertical" From="50" To="0.5" Duration="0:0:0.3" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="ControlPanelFadeOut">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ControlPanel_ControlPanelVisibilityStates_Border">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                      <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="ControlPanel_ControlPanelVisibilityStates_Border">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="False" />
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetProperty="Y" Storyboard.TargetName="TranslateVertical" From="0.5" To="50" Duration="0:0:0.7" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <!--
								ControlPanel Visibility states
								Media state visual states
							-->
              <VisualStateGroup x:Name="MediaStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Buffering">
                  <VisualState.Setters>
                    <Setter Target="BufferingProgressBar.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Loading">
                  <VisualState.Setters>
                    <Setter Target="BufferingProgressBar.Visibility" Value="Visible" />
                  </VisualState.Setters>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="ProgressSlider" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                    <DoubleAnimation Storyboard.TargetName="MediaControlsCommandBar" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Error">
                  <VisualState.Setters>
                    <Setter Target="ErrorBorder.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard />
                </VisualState>
              </VisualStateGroup>
              <!--
								Media state visual states
								Audio Selection Button visibility states
							-->
              <VisualStateGroup x:Name="AudioSelectionAvailablityStates">
                <VisualState x:Name="AudioSelectionAvailable">
                  <VisualState.Setters>
                    <Setter Target="AudioTracksSelectionButton.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="AudioSelectionUnavailable" />
              </VisualStateGroup>
              <!--
								Video volume visibility states
								Closed Captioning Selection Button visibility states
							-->
              <VisualStateGroup x:Name="CCSelectionAvailablityStates">
                <VisualState x:Name="CCSelectionAvailable">
                  <VisualState.Setters>
                    <Setter Target="CCSelectionButton.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CCSelectionUnavailable" />
              </VisualStateGroup>
              <!--
								Closed Captioning  visibility states
								Focus states
							-->
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <!-- UNO TODO: There's no element called 'FocusVisualWhite', which presumably fails silently on Windows, but causes a compile-time error on Uno -->
                    <!--<DoubleAnimation Storyboard.TargetName="FocusVisualWhite"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="FocusVisualBlack"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />-->
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused" />
                <VisualState x:Name="PointerFocused" />
              </VisualStateGroup>
              <!-- Focus states -->
              <VisualStateGroup x:Name="MediaTransportControlMode">
                <VisualState x:Name="NormalMode" />
                <VisualState x:Name="CompactMode">
                  <VisualState.Setters>
                    <Setter Target="LeftSidePlayBorder.Visibility" Value="Visible" />
                    <Setter Target="TimeTextGrid.Visibility" Value="Collapsed" />
                    <Setter Target="MediaTransportControls_Command_Border.(Grid.Column)" Value="2" />
                    <Setter Target="MediaTransportControls_Command_Border.(Grid.Row)" Value="1" />
                    <Setter Target="ControlPanelGrid.Height" Value="48" />
                    <Setter Target="MediaControlsCommandBar.Margin" Value="0" />
                    <Setter Target="PlayPauseButton.Visibility" Value="Collapsed" />
                    <Setter Target="ProgressSlider.Margin" Value="{ThemeResource MediaTransportControlsProgressSliderCompactMargin}" />
                    <Setter Target="ControlPanelGrid.Padding" Value="3" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <!-- PlayPause states -->
              <VisualStateGroup x:Name="PlayPauseStates">
                <VisualState x:Name="PlayState" />
                <VisualState x:Name="PauseState">
                  <VisualState.Setters>
                    <Setter Target="PlayPauseSymbolLeft.Data" Value="{ThemeResource PausePathData}" />
                    <Setter Target="PlayPauseSymbol.Data" Value="{ThemeResource PausePathData}" />
                    <!-- UNO TODO: Missing glyph -->
                    <Setter Target="PlayPauseSymbolLeft.Data" Value="{ThemeResource PausePathData}" />
                    <Setter Target="PlayPauseSymbol.Data" Value="{ThemeResource PausePathData}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <!-- VolumeMute states -->
              <VisualStateGroup x:Name="VolumeMuteStates">
                <VisualState x:Name="VolumeState" />
                <VisualState x:Name="MuteState">
                  <VisualState.Setters>
                    <Setter Target="InnerVolumeMuteSymbol.Data" Value="{ThemeResource MutePathData}" />
                    <Setter Target="OuterVolumeMuteSymbol.Data" Value="{ThemeResource MutePathData}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <!-- FullWindow states -->
              <VisualStateGroup x:Name="FullWindowStates">
                <VisualState x:Name="NonFullWindowState" />
                <VisualState x:Name="FullWindowState">
                  <VisualState.Setters>
                    <Setter Target="FullWindowSymbol.Data" Value="{ThemeResource ExitFullScreenPathData}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <!-- Repeat states -->
              <VisualStateGroup x:Name="RepeatStates">
                <VisualState x:Name="RepeatNoneState" />
                <VisualState x:Name="RepeatOneState">
                  <VisualState.Setters>
                    <Setter Target="RepeatSymbol.Data" Value="{ThemeResource RepeatOnePathData}" />
                    <Setter Target="RepeatButton.IsChecked" Value="True" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="RepeatAllState">
                  <VisualState.Setters>
                    <Setter Target="RepeatButton.IsChecked" Value="True" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="ControlPanel_ControlPanelVisibilityStates_Border">
              <Grid x:Name="ControlPanelGrid" Background="{ThemeResource MediaTransportControlsPanelBackground}" VerticalAlignment="Bottom" RenderTransformOrigin="0.5,0.5" BorderBrush="{ThemeResource MediaTransportControlsBorderBrush}" BorderThickness="{ThemeResource MediaTransportControlsBorderThickness}">
                <Grid.RenderTransform>
                  <TranslateTransform x:Name="TranslateVertical" />
                </Grid.RenderTransform>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="*" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <!--<Grid x:Name="FocusVisualWhite"
									  Background="Transparent"/>
								<Grid x:Name="FocusVisualBlack"
									  Background="Transparent" />-->
                <Border x:Name="ErrorBorder" Width="320" Height="96" Grid.ColumnSpan="3" HorizontalAlignment="Center" Background="{ThemeResource MediaTransportControlsPanelBackground}" Visibility="Collapsed">
                  <TextBlock x:Name="ErrorTextBlock" Style="{StaticResource CaptionTextBlockStyle}" TextWrapping="WrapWholeWords" Margin="12" />
                </Border>
                <Border x:Name="MediaTransportControls_Timeline_Border" Grid.Column="1" Grid.Row="1">
                  <Grid x:Name="MediaTransportControls_Timeline_Grid">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Slider x:Name="ProgressSlider" Margin="7,2,7,1" MinWidth="80" Height="{ThemeResource MediaTransportControlsSliderHeight}" VerticalAlignment="Center" IsThumbToolTipEnabled="False" />
                    <ProgressBar x:Name="BufferingProgressBar" Height="4" IsIndeterminate="True" IsHitTestVisible="False" VerticalAlignment="Top" Margin="0,2,0,0" Visibility="Collapsed" />
                    <Grid x:Name="TimeTextGrid" Margin="7,0,7,2" Grid.Row="1" Height="16">
                      <TextBlock x:Name="TimeElapsedElement" Style="{StaticResource MaterialCaptionMedium}" Margin="0" Text="00:00" HorizontalAlignment="Left" VerticalAlignment="Bottom" Foreground="{ThemeResource MediaTransportControlsFillTimeElapsedText}" />
                      <TextBlock x:Name="TimeRemainingElement" Style="{StaticResource MaterialCaptionMedium}" Text="00:00" HorizontalAlignment="Right" VerticalAlignment="Bottom" Foreground="{ThemeResource MediaTransportControlsFillTimeElapsedText}" />
                    </Grid>
                  </Grid>
                </Border>
                <Border x:Name="LeftSidePlayBorder" Grid.Column="0" Grid.Row="1" Visibility="Collapsed">
                  <AppBarButton x:Name="PlayPauseButtonOnLeft" Margin="0" VerticalAlignment="Center" Style="{StaticResource MediaTransportControlsAppBarButtonStyle}">
                    <AppBarButton.Resources>
                      <Thickness x:Key="AppBarButtonInnerBorderMargin">5</Thickness>
                      <Thickness x:Key="AppBarButtonContentViewboxCollapsedMargin">0,12</Thickness>
                    </AppBarButton.Resources>
                    <AppBarButton.Icon>
                      <PathIcon x:Name="PlayPauseSymbolLeft" Data="{StaticResource PlayPathData}" />
                    </AppBarButton.Icon>
                  </AppBarButton>
                </Border>
                <Border x:Name="MediaTransportControls_Command_Border" Grid.Column="1" Grid.Row="2">
                  <CommandBar x:Name="MediaControlsCommandBar" Margin="0,3" Style="{StaticResource MediaTransportControlsCommandBarStyle}" IsDynamicOverflowEnabled="False">
                    <CommandBar.Resources>
                      <Thickness x:Key="AppBarButtonInnerBorderMargin">5</Thickness>
                      <Thickness x:Key="AppBarButtonContentViewboxCollapsedMargin">0,12</Thickness>
                      <x:Double x:Key="AppBarThemeCompactHeight">40</x:Double>
                      <x:Double x:Key="AppBarMoreButtonColumnMinWidth">0</x:Double>
                    </CommandBar.Resources>
                    <CommandBar.PrimaryCommands>
                      <!--
												All MediaTransportControlsHelper.DropoutOrder properties have the not_win: prefix for now
												because that property requires at least WinAppSDK v1.2. We are still on 1.1.0 for Material and 1.1.5 for Toolkit.
											-->
                      <AppBarButton x:Name="VolumeMuteButton" Height="{ThemeResource MediaTransportControlsAppBarButtonHeight}" Width="{ThemeResource MediaTransportControlsAppBarButtonWidth}" Style="{StaticResource AppBarButtonStyle}" Foreground="{ThemeResource MediaTransportControlsAppBarButtonBrush}" AllowFocusOnInteraction="True" not_win:MediaTransportControlsHelper.DropoutOrder="19">
                        <AppBarButton.Flyout>
                          <Flyout x:Name="VolumeFlyout" FlyoutPresenterStyle="{StaticResource FlyoutStyle}" contract8Present:ShouldConstrainToRootBounds="False">
                            <StackPanel Orientation="Horizontal" Padding="3,11">
                              <AppBarButton x:Name="AudioMuteButton" Style="{StaticResource MediaTransportControlsAppBarButtonStyle}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <AppBarButton.Resources>
                                  <Thickness x:Key="AppBarButtonContentViewboxCollapsedMargin">0,12</Thickness>
                                  <Thickness x:Key="AppBarButtonInnerBorderMargin">5</Thickness>
                                </AppBarButton.Resources>
                                <AppBarButton.Icon>
                                  <PathIcon x:Name="InnerVolumeMuteSymbol" Data="{StaticResource VolumePathData}" />
                                </AppBarButton.Icon>
                              </AppBarButton>
                              <Slider x:Name="VolumeSlider" Value="50" IsThumbToolTipEnabled="False" Height="{ThemeResource MediaTransportControlsSliderHeight}" Width="{ThemeResource MediaTransportControlsSliderWidth}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="12,0,8,0" />
                              <TextBlock x:Name="VolumeValue" Style="{StaticResource MediaTextBlockStyle}" Text="{Binding ElementName=VolumeSlider, Path=Value}" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Right" Width="24" Margin="8,0,16,0" />
                            </StackPanel>
                          </Flyout>
                        </AppBarButton.Flyout>
                        <AppBarButton.Icon>
                          <PathIcon x:Name="OuterVolumeMuteSymbol" Data="{StaticResource VolumePathData}" />
                        </AppBarButton.Icon>
                      </AppBarButton>
                      <AppBarButton x:Name="CCSelectionButton" Style="{StaticResource MediaTransportControlsAppBarButtonStyle}" not_win:MediaTransportControlsHelper.DropoutOrder="15" Visibility="Collapsed">
                        <AppBarButton.Icon>
                          <PathIcon Data="{StaticResource CCSelectionOffPathData}" />
                        </AppBarButton.Icon>
                      </AppBarButton>
                      <AppBarButton x:Name="AudioTracksSelectionButton" Style="{StaticResource MediaTransportControlsAppBarButtonStyle}" not_win:MediaTransportControlsHelper.DropoutOrder="13" Visibility="Collapsed">
                        <AppBarButton.Icon>
                          <PathIcon Data="{StaticResource AudioTracksSelectionPathData}" />
                        </AppBarButton.Icon>
                      </AppBarButton>
                      <AppBarSeparator x:Name="LeftSeparator" Height="0" Width="0" Margin="0,0" />
                      <AppBarButton x:Name="StopButton" Style="{StaticResource MediaTransportControlsAppBarButtonStyle}" not_win:MediaTransportControlsHelper.DropoutOrder="7" Visibility="Collapsed">
                        <AppBarButton.Icon>
                          <PathIcon Data="{StaticResource StopPathData}" />
                        </AppBarButton.Icon>
                      </AppBarButton>
                      <AppBarButton x:Name="SkipBackwardButton" Style="{StaticResource MediaTransportControlsAppBarButtonStyle}" not_win:MediaTransportControlsHelper.DropoutOrder="5" Visibility="Collapsed">
                        <AppBarButton.Icon>
                          <PathIcon Data="{StaticResource SkipBackwardPathData}" />
                        </AppBarButton.Icon>
                      </AppBarButton>
                      <AppBarButton x:Name="PreviousTrackButton" Style="{StaticResource MediaTransportControlsAppBarButtonStyle}" not_win:MediaTransportControlsHelper.DropoutOrder="3" Visibility="Collapsed">
                        <AppBarButton.Icon>
                          <PathIcon Data="{StaticResource PreviousTrackPathData}" />
                        </AppBarButton.Icon>
                      </AppBarButton>
                      <AppBarButton x:Name="RewindButton" Style="{StaticResource MediaTransportControlsAppBarButtonStyle}" not_win:MediaTransportControlsHelper.DropoutOrder="1" Visibility="Collapsed">
                        <AppBarButton.Icon>
                          <PathIcon Data="{StaticResource RewindPathData}" />
                        </AppBarButton.Icon>
                      </AppBarButton>
                      <AppBarButton x:Name="PlayPauseButton" Style="{StaticResource MediaTransportControlsAppBarButtonStyle}" not_win:MediaTransportControlsHelper.DropoutOrder="23">
                        <AppBarButton.Icon>
                          <PathIcon x:Name="PlayPauseSymbol" Data="{StaticResource PlayPathData}" />
                        </AppBarButton.Icon>
                      </AppBarButton>
                      <AppBarButton x:Name="FastForwardButton" Style="{StaticResource MediaTransportControlsAppBarButtonStyle}" not_win:MediaTransportControlsHelper.DropoutOrder="1" Visibility="Collapsed">
                        <AppBarButton.Icon>
                          <PathIcon Data="{StaticResource FastForwardPathData}" />
                        </AppBarButton.Icon>
                      </AppBarButton>
                      <AppBarButton x:Name="NextTrackButton" Style="{StaticResource MediaTransportControlsAppBarButtonStyle}" not_win:MediaTransportControlsHelper.DropoutOrder="3" Visibility="Collapsed">
                        <AppBarButton.Icon>
                          <PathIcon Data="{StaticResource NextTrackPathData}" />
                        </AppBarButton.Icon>
                      </AppBarButton>
                      <AppBarButton x:Name="SkipForwardButton" Style="{StaticResource MediaTransportControlsAppBarButtonStyle}" not_win:MediaTransportControlsHelper.DropoutOrder="5" Visibility="Collapsed">
                        <AppBarButton.Icon>
                          <PathIcon Data="{StaticResource SkipForwardPathData}" />
                        </AppBarButton.Icon>
                      </AppBarButton>
                      <AppBarButton x:Name="PlaybackRateButton" Style="{StaticResource MediaTransportControlsAppBarButtonStyle}" not_win:MediaTransportControlsHelper.DropoutOrder="10" Visibility="Collapsed">
                        <AppBarButton.Icon>
                          <PathIcon Data="{StaticResource PlaybackRatePathData}" />
                        </AppBarButton.Icon>
                      </AppBarButton>
                      <AppBarSeparator x:Name="RightSeparator" Height="0" Width="0" Margin="0,0" />
                      <AppBarToggleButton x:Name="RepeatButton" Style="{StaticResource AppBarToggleButtonStyle}" not_win:MediaTransportControlsHelper.DropoutOrder="1" Visibility="Collapsed">
                        <AppBarToggleButton.Icon>
                          <PathIcon x:Name="RepeatSymbol" Data="{StaticResource RepeatPathData}" />
                        </AppBarToggleButton.Icon>
                      </AppBarToggleButton>
                      <AppBarButton x:Name="ZoomButton" Style="{StaticResource MediaTransportControlsAppBarButtonStyle}" not_win:MediaTransportControlsHelper.DropoutOrder="9">
                        <AppBarButton.Icon>
                          <PathIcon Data="{StaticResource AspectRatioPathData}" />
                        </AppBarButton.Icon>
                      </AppBarButton>
                      <AppBarButton x:Name="CastButton" Style="{StaticResource MediaTransportControlsAppBarButtonStyle}" not_win:MediaTransportControlsHelper.DropoutOrder="11">
                        <AppBarButton.Icon>
                          <PathIcon Data="{StaticResource ChromeCastPathData}" />
                        </AppBarButton.Icon>
                      </AppBarButton>
                      <AppBarButton x:Name="CompactOverlayButton" Style="{StaticResource MediaTransportControlsAppBarButtonStyle}" not_win:MediaTransportControlsHelper.DropoutOrder="24" Visibility="Collapsed">
                        <AppBarButton.Icon>
                          <PathIcon Data="{StaticResource CompactOverlayPathData}" />
                        </AppBarButton.Icon>
                      </AppBarButton>
                      <AppBarButton x:Name="FullWindowButton" Style="{StaticResource MediaTransportControlsAppBarButtonStyle}" not_win:MediaTransportControlsHelper.DropoutOrder="17">
                        <AppBarButton.Icon>
                          <PathIcon x:Name="FullWindowSymbol" Data="{StaticResource FullScreenPathData}" />
                        </AppBarButton.Icon>
                      </AppBarButton>
                    </CommandBar.PrimaryCommands>
                  </CommandBar>
                </Border>
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialDefaultMediaTransportControlsStyle" TargetType="MediaTransportControls" BasedOn="{StaticResource MaterialMediaTransportControlsStyle}" />
  <!--origin: Styles\Controls\v2\NavigationView.xaml-->
  <Style x:Key="ResetDefaultSplitViewStyle" TargetType="SplitView">
    <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewDefaultPaneBorderBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource SplitViewLeftBorderThemeThickness}" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="OpenPaneLength" Value="{ThemeResource SplitViewOpenPaneThemeLength}" />
    <Setter Property="CompactPaneLength" Value="{ThemeResource SplitViewCompactPaneThemeLength}" />
    <Setter Property="PaneBackground" Value="{ThemeResource NavigationViewDefaultPaneBackground}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="SplitView">
          <Grid Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="DisplayModeStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition From="Closed" To="OpenOverlayLeft">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform" Storyboard.TargetProperty="TranslateX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLength}" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.35" KeySpline="0.1,0.9 0.2,1.0" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneLength}" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.35" KeySpline="0.1,0.9 0.2,1.0" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.35" KeySpline="0.1,0.9 0.2,1.0" Value="1.0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="Closed" To="OpenOverlayRight">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Right" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Left" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform" Storyboard.TargetProperty="TranslateX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneLength}" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.35" KeySpline="0.1,0.9 0.2,1.0" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLength}" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.35" KeySpline="0.1,0.9 0.2,1.0" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.35" KeySpline="0.1,0.9 0.2,1.0" Value="1.0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="ClosedCompactLeft" To="OpenCompactOverlayLeft">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactPaneGridLength, FallbackValue=0}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.35" KeySpline="0.1,0.9 0.2,1.0" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.35" KeySpline="0.1,0.9 0.2,1.0" Value="1.0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="ClosedCompactRight" To="OpenCompactOverlayRight">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="*" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition2" Storyboard.TargetProperty="Width">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactPaneGridLength, FallbackValue=0}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Right" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Left" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneLengthMinusCompactLength}" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.35" KeySpline="0.1,0.9 0.2,1.0" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.35" KeySpline="0.1,0.9 0.2,1.0" Value="1.0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="OpenOverlayLeft" To="Closed">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform" Storyboard.TargetProperty="TranslateX">
                        <SplineDoubleKeyFrame KeyTime="0:0:0.12" KeySpline="0.1,0.9 0.2,1.0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLength}" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                        <SplineDoubleKeyFrame KeyTime="0:0:0.12" KeySpline="0.1,0.9 0.2,1.0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneLength}" />
                      </DoubleAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.12" KeySpline="0.1,0.9 0.2,1.0" Value="0.0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="OpenOverlayRight" To="Closed">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Right" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Left" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform" Storyboard.TargetProperty="TranslateX">
                        <SplineDoubleKeyFrame KeyTime="0:0:0.12" KeySpline="0.1,0.9 0.2,1.0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneLength}" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                        <SplineDoubleKeyFrame KeyTime="0:0:0.12" KeySpline="0.1,0.9 0.2,1.0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLength}" />
                      </DoubleAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.12" KeySpline="0.1,0.9 0.2,1.0" Value="0.0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="OpenCompactOverlayLeft" To="ClosedCompactLeft">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactPaneGridLength, FallbackValue=0}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.12" KeySpline="0.1,0.9 0.2,1.0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                      </DoubleAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.12" KeySpline="0.1,0.9 0.2,1.0" Value="0.0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="OpenCompactOverlayRight" To="ClosedCompactRight">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="*" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition2" Storyboard.TargetProperty="Width">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactPaneGridLength, FallbackValue=0}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Right" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Left" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.12" KeySpline="0.1,0.9 0.2,1.0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneLengthMinusCompactLength}" />
                      </DoubleAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.12" KeySpline="0.1,0.9 0.2,1.0" Value="0.0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="OpenInlineLeft" To="Closed">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="{ThemeResource SplitViewPaneAnimationCloseDuration}" Value="Collapsed" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="{ThemeResource SplitViewPaneAnimationCloseDuration}" Value="Collapsed" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="2" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="0" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                        <DiscreteObjectKeyFrame KeyTime="{ThemeResource SplitViewPaneAnimationCloseDuration}" Value="2" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                        <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0" KeyTime="{ThemeResource SplitViewPaneAnimationCloseDuration}" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform" Storyboard.TargetProperty="TranslateX">
                        <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0" KeyTime="{ThemeResource SplitViewPaneAnimationCloseDuration}" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLength}" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentTransform" Storyboard.TargetProperty="TranslateX">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneLength}" />
                        <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0" KeyTime="{ThemeResource SplitViewPaneAnimationCloseDuration}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="Closed" To="OpenInlineLeft">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform" Storyboard.TargetProperty="TranslateX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLength}" />
                        <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0" KeyTime="{ThemeResource SplitViewPaneAnimationOpenDuration}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames FillBehavior="Stop" Storyboard.TargetName="ContentTransform" Storyboard.TargetProperty="TranslateX">
                        <LinearDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLength}" />
                        <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0" KeyTime="{ThemeResource SplitViewPaneAnimationOpenPreDuration}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLength}" />
                        <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0" KeyTime="{ThemeResource SplitViewPaneAnimationOpenDuration}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="ClosedCompactLeft" To="OpenInlineLeft">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames FillBehavior="Stop" Storyboard.TargetName="ContentTransform" Storyboard.TargetProperty="TranslateX">
                        <LinearDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                        <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0" KeyTime="{ThemeResource SplitViewPaneAnimationOpenPreDuration}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                        <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0" KeyTime="{ThemeResource SplitViewPaneAnimationOpenDuration}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="OpenInlineLeft" To="ClosedCompactLeft">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactPaneGridLength, FallbackValue=0}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames FillBehavior="Stop" Storyboard.TargetName="ContentTransform" Storyboard.TargetProperty="TranslateX">
                        <LinearDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneLengthMinusCompactLength}" />
                        <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0" KeyTime="{ThemeResource SplitViewPaneAnimationOpenPreDuration}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="TranslateX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                        <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0" KeyTime="{ThemeResource SplitViewPaneAnimationOpenDuration}" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Closed" />
                <VisualState x:Name="ClosedCompactLeft">
                  <VisualState.Setters>
                    <Setter Target="ColumnDefinition1.Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactPaneGridLength, FallbackValue=0}" />
                    <Setter Target="ContentRoot.Grid.Column" Value="1" />
                    <Setter Target="ContentRoot.Grid.ColumnSpan" Value="1" />
                    <Setter Target="PaneRoot.Visibility" Value="Visible" />
                    <Setter Target="PaneClipRectangleTransform.TranslateX" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ClosedCompactRight">
                  <VisualState.Setters>
                    <Setter Target="ColumnDefinition1.Width" Value="*" />
                    <Setter Target="ColumnDefinition2.Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactPaneGridLength, FallbackValue=0}" />
                    <Setter Target="ContentRoot.Grid.ColumnSpan" Value="1" />
                    <Setter Target="PaneRoot.Visibility" Value="Visible" />
                    <Setter Target="PaneRoot.Grid.ColumnSpan" Value="2" />
                    <Setter Target="PaneRoot.HorizontalAlignment" Value="Right" />
                    <Setter Target="PaneClipRectangleTransform.TranslateX" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneLengthMinusCompactLength}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="OpenOverlayLeft">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OpenOverlayRight">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Right" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Left" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OpenInlineLeft">
                  <VisualState.Setters>
                    <Setter Target="PaneRoot.Visibility" Value="Visible" />
                    <Setter Target="HCPaneBorder.Visibility" Value="Visible" />
                    <Setter Target="ContentRoot.Grid.ColumnSpan" Value="1" />
                    <Setter Target="ContentRoot.Grid.Column" Value="1" />
                    <Setter Target="PaneRoot.Grid.ColumnSpan" Value="1" />
                    <Setter Target="PaneTransform.TranslateX" Value="0" />
                    <Setter Target="ContentTransform.TranslateX" Value="0" />
                    <Setter Target="PaneClipRectangleTransform.TranslateX" Value="0" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="OpenInlineRight">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="*" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition2" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneGridLength, FallbackValue=0}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(Grid.Column)">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Left" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OpenCompactOverlayLeft">
                  <VisualState.Setters>
                    <Setter Target="ContentRoot.Grid.ColumnSpan" Value="1" />
                    <Setter Target="ContentRoot.Grid.Column" Value="1" />
                  </VisualState.Setters>
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactPaneGridLength, FallbackValue=0}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OpenCompactOverlayRight">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="*" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition2" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactPaneGridLength, FallbackValue=0}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Right" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Left" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="OverlayVisibilityStates">
                <VisualState x:Name="OverlayNotVisible" />
                <VisualState x:Name="OverlayVisible">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{ThemeResource NavigationViewSplitViewLightDismissOverlayBackground}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="ColumnDefinition1" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneGridLength, FallbackValue=0}" />
              <ColumnDefinition x:Name="ColumnDefinition2" Width="*" />
            </Grid.ColumnDefinitions>
            <!-- Pane Content Area -->
            <Grid x:Name="PaneRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" HorizontalAlignment="Left" Visibility="Collapsed" Background="{TemplateBinding PaneBackground}" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneLength}" Canvas.ZIndex="1" contract7Present:CornerRadius="{TemplateBinding CornerRadius}">
              <contract7Present:Grid.BackgroundTransition>
                <BrushTransition />
              </contract7Present:Grid.BackgroundTransition>
              <Grid.Clip>
                <RectangleGeometry x:Name="PaneClipRectangle">
                  <RectangleGeometry.Transform>
                    <CompositeTransform x:Name="PaneClipRectangleTransform" />
                  </RectangleGeometry.Transform>
                </RectangleGeometry>
              </Grid.Clip>
              <Grid.RenderTransform>
                <CompositeTransform x:Name="PaneTransform" />
              </Grid.RenderTransform>
              <Border Child="{TemplateBinding Pane}" />
              <Rectangle x:Name="HCPaneBorder" x:DeferLoadStrategy="Lazy" Visibility="Collapsed" Fill="{ThemeResource NavigationViewDefaultPaneBorderBrush}" Width="1" HorizontalAlignment="Right" />
            </Grid>
            <!-- Content Area -->
            <Grid x:Name="ContentRoot" Grid.ColumnSpan="2">
              <Grid.RenderTransform>
                <CompositeTransform x:Name="ContentTransform" />
              </Grid.RenderTransform>
              <Border Child="{TemplateBinding Content}" />
              <Rectangle x:Name="LightDismissLayer" Fill="Transparent" Visibility="Collapsed" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialNavigationViewStyle" TargetType="controls:NavigationView">
    <Setter Property="Background" Value="{ThemeResource NavigationViewBackground}" />
    <Setter Property="OpenPaneLength" Value="360" />
    <Setter Property="CompactPaneLength" Value="{ThemeResource NavigationViewCompactPaneLength}" />
    <Setter Property="PaneToggleButtonStyle" Value="{StaticResource MaterialNavigationViewIconTextButtonStyle}" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:NavigationView">
          <Grid x:Name="RootGrid" toolkit:VisibleBoundsPadding.PaddingMask="All" Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="DisplayModeGroup">
                <VisualState x:Name="Compact">
                  <VisualState.Setters>
                    <Setter Target="NavigationViewBackButton.Margin" Value="{ThemeResource MaterialNavigationViewButtonMarginWhenStackedVertically}" />
                    <Setter Target="NavigationViewCloseButton.Margin" Value="{ThemeResource MaterialNavigationViewButtonMarginWhenStackedVertically}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Expanded">
                  <VisualState.Setters>
                    <Setter Target="NavigationViewBackButton.Margin" Value="{ThemeResource MaterialNavigationViewButtonMarginWhenStackedVertically}" />
                    <Setter Target="NavigationViewCloseButton.Margin" Value="{ThemeResource MaterialNavigationViewButtonMarginWhenStackedVertically}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Minimal">
                  <VisualState.Setters>
                    <Setter Target="HeaderContent.Margin" Value="{ThemeResource NavigationViewMinimalHeaderMargin}" />
                    <Setter Target="ContentGrid.BorderThickness" Value="{ThemeResource NavigationViewMinimalContentGridBorderThickness}" />
                    <Setter Target="ContentGrid.CornerRadius" Value="{ThemeResource NavigationViewMinimalContentGridCornerRadius}" />
                    <Setter Target="ContentGrid.Margin" Value="{ThemeResource NavigationViewMinimalContentMargin}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="MinimalWithBackButton">
                  <VisualState.Setters>
                    <Setter Target="HeaderContent.Margin" Value="{ThemeResource NavigationViewMinimalHeaderMargin}" />
                    <Setter Target="ContentGrid.BorderThickness" Value="{ThemeResource NavigationViewMinimalContentGridBorderThickness}" />
                    <Setter Target="ContentGrid.CornerRadius" Value="{ThemeResource NavigationViewMinimalContentGridCornerRadius}" />
                    <Setter Target="ContentGrid.Margin" Value="{ThemeResource NavigationViewMinimalContentMargin}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="TopNavigationMinimal">
                  <VisualState.Setters>
                    <Setter Target="ContentGrid.BorderThickness" Value="{ThemeResource TopNavigationViewContentGridBorderThickness}" />
                    <Setter Target="ContentGrid.CornerRadius" Value="{ThemeResource TopNavigationViewContentGridCornerRadius}" />
                    <Setter Target="ContentGrid.Margin" Value="{ThemeResource TopNavigationViewContentMargin}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="TogglePaneGroup">
                <VisualState x:Name="TogglePaneButtonCollapsed" />
                <VisualState x:Name="TogglePaneButtonVisible">
                  <VisualState.Setters>
                    <!-- Might not need this setter when all the margins/paddings will be adequately set. -->
                    <!-- This MinHeight setter is only here to ensure that AutoSuggestBox doesn't draw over ToggleButton. -->
                    <Setter Target="PaneContentGridToggleButtonRow.MinHeight" Value="{ThemeResource NavigationViewPaneHeaderRowMinHeight}" />
                    <Setter Target="PaneTitlePresenter.Margin" Value="{ThemeResource NavigationViewItemInnerHeaderMargin}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="HeaderGroup">
                <VisualState x:Name="HeaderVisible" />
                <VisualState x:Name="HeaderCollapsed">
                  <VisualState.Setters>
                    <Setter Target="HeaderContent.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="AutoSuggestGroup">
                <VisualState x:Name="AutoSuggestBoxVisible" />
                <VisualState x:Name="AutoSuggestBoxCollapsed">
                  <VisualState.Setters>
                    <Setter Target="AutoSuggestArea.Visibility" Value="Collapsed" />
                    <Setter Target="TopPaneAutoSuggestArea.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="PaneStateGroup">
                <VisualState x:Name="NotClosedCompact" />
                <VisualState x:Name="ClosedCompact">
                  <VisualState.Setters>
                    <Setter Target="PaneAutoSuggestBoxPresenter.Visibility" Value="Collapsed" />
                    <Setter Target="PaneAutoSuggestButton.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="PaneStateListSizeGroup">
                <VisualState x:Name="ListSizeFull" />
                <VisualState x:Name="ListSizeCompact">
                  <VisualState.Setters>
                    <Setter Target="PaneContentGrid.Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CompactPaneLength}" />
                    <Setter Target="ShadowCaster.Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CompactPaneLength}" />
                    <Setter Target="PaneTitleTextBlock.Visibility" Value="Collapsed" />
                    <Setter Target="PaneHeaderContentBorder.Visibility" Value="Collapsed" />
                    <Setter Target="PaneCustomContentBorder.Visibility" Value="Collapsed" />
                    <Setter Target="PaneCustomContentBorder.HorizontalAlignment" Value="Left" />
                    <Setter Target="FooterContentBorder.HorizontalAlignment" Value="Left" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="PaneOverlayGroup">
                <VisualStateGroup.Transitions>
                  <VisualTransition From="PaneNotOverlaying" To="PaneOverlaying">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ShadowCasterTransform" Storyboard.TargetProperty="TranslateX">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding ElementName=RootSplitView, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.35" KeySpline="0.1,0.9 0.2,1.0" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ShadowCaster" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="0:0:0.35" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ShadowCaster" Storyboard.TargetProperty="HorizontalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="Left" />
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="PaneOverlaying" To="PaneNotOverlaying">
                    <Storyboard x:Name="ShadowCasterEaseOutStoryboard">
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ShadowCasterTransform" Storyboard.TargetProperty="TranslateX">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.12" KeySpline="0.1,0.9 0.2,1.0" Value="{Binding ElementName=RootSplitView, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ShadowCaster" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="0:0:0.12" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ShadowCaster" Storyboard.TargetProperty="HorizontalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="Left" />
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="PaneOverlaying" />
                <VisualState x:Name="PaneNotOverlaying">
                  <VisualState.Setters>
                    <Setter Target="RootSplitView.BorderBrush" Value="Transparent" />
                    <Setter Target="ShadowCaster.Opacity" Value="0" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="TitleBarVisibilityGroup">
                <VisualState x:Name="TitleBarVisible" />
                <VisualState x:Name="TitleBarCollapsed">
                  <VisualState.Setters>
                    <Setter Target="PaneContentGrid.Margin" Value="0,32,0,0" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="OverflowLabelGroup">
                <VisualState x:Name="OverflowButtonWithLabel" />
                <VisualState x:Name="OverflowButtonNoLabel">
                  <VisualState.Setters>
                    <Setter Target="TopNavOverflowButton.Style" Value="{ThemeResource NavigationViewOverflowButtonNoLabelStyleWhenPaneOnTop}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="BackButtonGroup">
                <VisualState x:Name="BackButtonVisible" />
                <VisualState x:Name="BackButtonCollapsed">
                  <VisualState.Setters>
                    <Setter Target="BackButtonPlaceholderOnTopNav.Width" Value="0" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="PaneVisibilityGroup">
                <VisualState x:Name="PaneVisible" />
                <VisualState x:Name="PaneCollapsed">
                  <VisualState.Setters>
                    <!-- Note that RootSplitView.DisplayMode is set in code so we don't want to -->
                    <!-- write it here and interfere. But these values work together to hide -->
                    <!-- the left pane. -->
                    <Setter Target="RootSplitView.CompactPaneLength" Value="0" />
                    <Setter Target="ShadowCaster.Width" Value="0" />
                    <Setter Target="PaneToggleButtonGrid.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="PaneSeparatorStates">
                <VisualState x:Name="SeparatorCollapsed" />
                <VisualState x:Name="SeparatorVisible">
                  <VisualState.Setters>
                    <Setter Target="VisualItemsSeparator.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <!-- Content layouts -->
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <!-- DisplayMode top -->
              <StackPanel x:Name="TopNavArea" Background="{ThemeResource NavigationViewTopPaneBackground}" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Top" Canvas.ZIndex="1" contract4Present:XYFocusKeyboardNavigation="Enabled">
                <Grid x:Name="TopNavTopPadding" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPaneVisibility}" />
                <Grid x:Name="TopNavGrid" Height="{ThemeResource NavigationViewTopPaneHeight}" Margin="{ThemeResource TopNavigationViewTopNavGridMargin}" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPaneVisibility}" BorderBrush="{ThemeResource NavigationViewItemSeparatorForeground}">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="BackButtonPlaceholderOnTopNav" Width="{ThemeResource NavigationBackButtonWidth}" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" MinWidth="{ThemeResource TopNavigationViewPaneCustomContentMinWidth}" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <Grid x:Name="TopNavLeftPadding" Grid.Column="1" Width="0" />
                  <ContentControl x:Name="PaneHeaderOnTopPane" IsTabStop="False" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" Grid.Column="2" />
                  <ContentControl x:Name="PaneTitleOnTopPane" IsTabStop="False" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" Margin="{ThemeResource NavigationViewItemInnerHeaderMargin}" Grid.Column="2" />
                  <!-- Top nav ItemsRepeater -->
                  <controls:ItemsRepeaterScrollHost Grid.Column="3">
                    <ScrollViewer HorizontalScrollMode="Disabled" HorizontalScrollBarVisibility="Hidden" VerticalScrollMode="Disabled" VerticalScrollBarVisibility="Hidden">
                      <controls:ItemsRepeater AutomationProperties.LandmarkType="Navigation" AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}" AutomationProperties.AccessibilityView="Content" x:Name="TopNavMenuItemsHost">
                        <controls:ItemsRepeater.Layout>
                          <controls:StackLayout Orientation="Horizontal" />
                        </controls:ItemsRepeater.Layout>
                      </controls:ItemsRepeater>
                    </ScrollViewer>
                  </controls:ItemsRepeaterScrollHost>
                  <Button x:Name="TopNavOverflowButton" Grid.Column="4" Content="More" Margin="{ThemeResource TopNavigationViewOverflowButtonMargin}" Style="{StaticResource NavigationViewOverflowButtonStyleWhenPaneOnTop}" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OverflowButtonVisibility}">
                    <Button.Flyout>
                      <Flyout contract7NotPresent:Placement="Bottom" contract7Present:Placement="BottomEdgeAlignedRight" ElementSoundMode="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ElementSoundMode}">
                        <Flyout.FlyoutPresenterStyle>
                          <Style TargetType="FlyoutPresenter">
                            <Setter Property="Padding" Value="{ThemeResource TopNavigationViewOverflowMenuPadding}" />
                            <!-- Set negative top margin to make the flyout align exactly with the button -->
                            <Setter Property="Margin" Value="0,-4,0,0" />
                            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto" />
                            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                            <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
                            <todo:contract7Present_Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
                            <Setter Property="Template">
                              <Setter.Value>
                                <ControlTemplate TargetType="FlyoutPresenter">
                                  <ScrollViewer x:Name="ScrollViewer" ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" AutomationProperties.AccessibilityView="Raw">
                                    <ContentPresenter x:Name="ContentPresenter" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Padding="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" contract7Present:CornerRadius="{TemplateBinding CornerRadius}" contract7NotPresent:CornerRadius="{ThemeResource OverlayCornerRadius}" />
                                  </ScrollViewer>
                                </ControlTemplate>
                              </Setter.Value>
                            </Setter>
                          </Style>
                        </Flyout.FlyoutPresenterStyle>
                        <controls:ItemsRepeaterScrollHost>
                          <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <controls:ItemsRepeater AutomationProperties.AccessibilityView="Content" x:Name="TopNavMenuItemsOverflowHost">
                              <controls:ItemsRepeater.Layout>
                                <controls:StackLayout />
                              </controls:ItemsRepeater.Layout>
                            </controls:ItemsRepeater>
                          </ScrollViewer>
                        </controls:ItemsRepeaterScrollHost>
                      </Flyout>
                    </Button.Flyout>
                  </Button>
                  <ContentControl x:Name="PaneCustomContentOnTopPane" IsTabStop="False" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" Grid.Column="5" />
                  <Grid x:Name="TopPaneAutoSuggestArea" Height="{ThemeResource NavigationViewTopPaneHeight}" Grid.Column="6">
                    <ContentControl x:Name="TopPaneAutoSuggestBoxPresenter" Margin="{ThemeResource TopNavigationViewAutoSuggestBoxMargin}" MinWidth="216" IsTabStop="False" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center" />
                  </Grid>
                  <ContentControl x:Name="PaneFooterOnTopPane" IsTabStop="False" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" Grid.Column="7" />
                  <!-- Top footer menu ItemsRepeater -->
                  <controls:ItemsRepeater Grid.Column="8" AutomationProperties.LandmarkType="Navigation" AutomationProperties.AccessibilityView="Content" x:Name="TopFooterMenuItemsHost">
                    <controls:ItemsRepeater.Layout>
                      <controls:StackLayout Orientation="Horizontal" />
                    </controls:ItemsRepeater.Layout>
                  </controls:ItemsRepeater>
                </Grid>
                <Border x:Name="TopNavContentOverlayAreaGrid" Child="{TemplateBinding ContentOverlay}" />
              </StackPanel>
              <!-- Displaymode (compact/minimal/normal) left -->
              <SplitView x:Name="RootSplitView" Grid.Row="1" CornerRadius="{ThemeResource MaterialNavigationViewSplitViewCornerRadius}" BorderBrush="{ThemeResource NavigationViewItemSeparatorForeground}" PaneBackground="{ThemeResource NavigationViewPaneBackground}" CompactPaneLength="{TemplateBinding CompactPaneLength}" OpenPaneLength="{TemplateBinding OpenPaneLength}" IsPaneOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPaneOpen, Mode=TwoWay}" DisplayMode="Inline" IsTabStop="False" win:Style="{StaticResource ResetDefaultSplitViewStyle}">
                <SplitView.Pane>
                  <Grid x:Name="PaneContentGrid" BorderBrush="{ThemeResource NavigationViewItemSeparatorForeground}" HorizontalAlignment="Left" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.LeftPaneVisibility}">
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="0" />
                      <!-- above button margin + back button space -->
                      <RowDefinition x:Name="PaneContentGridToggleButtonRow" Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="0" />
                      <!-- above list margin -->
                      <RowDefinition x:Name="ItemsContainerRow" Height="*" />
                    </Grid.RowDefinitions>
                    <Grid x:Name="ContentPaneTopPadding" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}" />
                    <Grid Grid.Row="2">
                      <Grid.RowDefinitions>
                        <RowDefinition x:Name="PaneHeaderContentBorderRow" />
                      </Grid.RowDefinitions>
                      <Grid.ColumnDefinitions>
                        <!--
                                                    C0 and C1 width is injected from NavView
                                                    PaneHeaderCloseButtonColumn -> NavigationViewCloseButton.Width
                                                    PaneHeaderToggleButtonColumn -> res[PaneToggleButtonWidth] ?? 40
                                                -->
                        <ColumnDefinition x:Name="PaneHeaderCloseButtonColumn" />
                        <ColumnDefinition x:Name="PaneHeaderToggleButtonColumn" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <ContentControl x:Name="PaneHeaderContentBorder" Grid.Column="2" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" IsTabStop="False" />
                    </Grid>
                    <Grid x:Name="AutoSuggestArea" Grid.Row="3" Height="{ThemeResource NavigationViewAutoSuggestAreaHeight}" Margin="0,0,0,8" VerticalAlignment="Center">
                      <ContentControl x:Name="PaneAutoSuggestBoxPresenter" Margin="{ThemeResource NavigationViewAutoSuggestBoxMargin}" IsTabStop="False" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center" />
                      <Button x:Name="PaneAutoSuggestButton" Visibility="Collapsed" Style="{ThemeResource NavigationViewPaneSearchButtonStyle}" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SmallerPaneToggleButtonWidth}">
                        <Button.Resources>
                          <ResourceDictionary>
                            <ResourceDictionary.ThemeDictionaries>
                              <ResourceDictionary x:Key="Default">
                                <StaticResource x:Key="ButtonBackgroundPointerOver" ResourceKey="NavigationViewItemBackgroundPointerOver" />
                                <StaticResource x:Key="ButtonBackgroundPressed" ResourceKey="NavigationViewItemBackgroundPressed" />
                                <StaticResource x:Key="ButtonBackgroundDisabled" ResourceKey="NavigationViewItemBackgroundDisabled" />
                                <StaticResource x:Key="ButtonForegroundPointerOver" ResourceKey="NavigationViewItemForegroundPointerOver" />
                                <StaticResource x:Key="ButtonForegroundPressed" ResourceKey="NavigationViewItemForegroundPressed" />
                                <StaticResource x:Key="ButtonForegroundDisabled" ResourceKey="NavigationViewItemForegroundDisabled" />
                                <StaticResource x:Key="ButtonBorderBrushPointerOver" ResourceKey="NavigationViewItemBorderBrushPointerOver" />
                                <StaticResource x:Key="ButtonBorderBrushPressed" ResourceKey="NavigationViewItemBorderBrushPressed" />
                                <StaticResource x:Key="ButtonBorderBrushDisabled" ResourceKey="NavigationViewItemBorderBrushDisabled" />
                              </ResourceDictionary>
                              <ResourceDictionary x:Key="Light">
                                <StaticResource x:Key="ButtonBackgroundPointerOver" ResourceKey="NavigationViewItemBackgroundPointerOver" />
                                <StaticResource x:Key="ButtonBackgroundPressed" ResourceKey="NavigationViewItemBackgroundPressed" />
                                <StaticResource x:Key="ButtonBackgroundDisabled" ResourceKey="NavigationViewItemBackgroundDisabled" />
                                <StaticResource x:Key="ButtonForegroundPointerOver" ResourceKey="NavigationViewItemForegroundPointerOver" />
                                <StaticResource x:Key="ButtonForegroundPressed" ResourceKey="NavigationViewItemForegroundPressed" />
                                <StaticResource x:Key="ButtonForegroundDisabled" ResourceKey="NavigationViewItemForegroundDisabled" />
                                <StaticResource x:Key="ButtonBorderBrushPointerOver" ResourceKey="NavigationViewItemBorderBrushPointerOver" />
                                <StaticResource x:Key="ButtonBorderBrushPressed" ResourceKey="NavigationViewItemBorderBrushPressed" />
                                <StaticResource x:Key="ButtonBorderBrushDisabled" ResourceKey="NavigationViewItemBorderBrushDisabled" />
                              </ResourceDictionary>
                            </ResourceDictionary.ThemeDictionaries>
                          </ResourceDictionary>
                        </Button.Resources>
                      </Button>
                    </Grid>
                    <ContentControl x:Name="PaneCustomContentBorder" IsTabStop="False" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" Grid.Row="4" />
                    <!-- "Non header" content -->
                    <Grid x:Name="ItemsContainerGrid" Grid.Row="6">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <!-- MenuItems -->
                        <RowDefinition Height="Auto" />
                        <!-- Separator if overflow -->
                        <RowDefinition Height="Auto" />
                        <!-- PaneFooter -->
                        <RowDefinition Height="Auto" />
                        <!-- FooterItems -->
                      </Grid.RowDefinitions>
                      <!-- MenuItems -->
                      <controls:ItemsRepeaterScrollHost HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <ScrollViewer x:Name="MenuItemsScrollViewer" TabNavigation="Local" VerticalScrollBarVisibility="Auto">
                          <!-- Left nav ItemsRepeater -->
                          <controls:ItemsRepeater x:Name="MenuItemsHost" AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}" AutomationProperties.AccessibilityView="Content">
                            <controls:ItemsRepeater.Layout>
                              <controls:StackLayout />
                            </controls:ItemsRepeater.Layout>
                          </controls:ItemsRepeater>
                        </ScrollViewer>
                      </controls:ItemsRepeaterScrollHost>
                      <controls:NavigationViewItemSeparator x:Name="VisualItemsSeparator" Grid.Row="1" Margin="0,0,0,2" Visibility="Collapsed" VerticalAlignment="Center" HorizontalAlignment="Stretch" />
                      <!-- PaneFooter -->
                      <ContentControl x:Name="FooterContentBorder" IsTabStop="False" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" Margin="0,0,0,4" Grid.Row="2" />
                      <!-- FooterItems -->
                      <controls:ItemsRepeaterScrollHost Grid.Row="3">
                        <ScrollViewer x:Name="FooterItemsScrollViewer" VerticalScrollBarVisibility="Auto" contract7Present:VerticalAnchorRatio="1">
                          <controls:ItemsRepeater x:Name="FooterMenuItemsHost" AutomationProperties.AccessibilityView="Content">
                            <controls:ItemsRepeater.Layout>
                              <controls:StackLayout />
                            </controls:ItemsRepeater.Layout>
                          </controls:ItemsRepeater>
                        </ScrollViewer>
                      </controls:ItemsRepeaterScrollHost>
                    </Grid>
                  </Grid>
                </SplitView.Pane>
                <SplitView.Content>
                  <Grid x:Name="ContentGrid" BorderBrush="{ThemeResource NavigationViewBackground}" BorderThickness="{ThemeResource NavigationViewContentGridBorderThickness}" Margin="{ThemeResource NavigationViewContentMargin}" CornerRadius="{ThemeResource MaterialNavigationViewContentGridCornerRadius}">
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid x:Name="ContentTopPadding" Grid.ColumnSpan="2" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.LeftPaneVisibility}" />
                    <Grid x:Name="ContentLeftPadding" Grid.Row="1" />
                    <ContentControl x:Name="HeaderContent" Grid.Row="1" Grid.Column="1" MinHeight="{ThemeResource PaneToggleButtonHeight}" IsTabStop="False" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" Style="{StaticResource NavigationViewTitleHeaderContentControlTextStyle}" />
                    <ContentPresenter x:Name="ContentPresenter" AutomationProperties.LandmarkType="Main" Grid.Row="2" Grid.ColumnSpan="2" Content="{TemplateBinding Content}" Margin="{ThemeResource NavigationViewContentPresenterMargin}" />
                  </Grid>
                </SplitView.Content>
              </SplitView>
              <Grid x:Name="ShadowCaster" Grid.RowSpan="2" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneWidth}" HorizontalAlignment="Left">
                <Grid.RenderTransform>
                  <CompositeTransform x:Name="ShadowCasterTransform" />
                </Grid.RenderTransform>
              </Grid>
            </Grid>
            <!-- Button grid -->
            <!--
                            TODO: Uno Specific: Canvas.ZIndex is not implemented, so the
                            button Grid is moved below the content SplitView in the template
                        -->
            <Grid x:Name="PaneToggleButtonGrid" HorizontalAlignment="Left" VerticalAlignment="Top" Canvas.ZIndex="100">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <Grid x:Name="TogglePaneTopPadding" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}" />
              <Grid x:Name="ButtonHolderGrid" Grid.Row="1">
                <Button x:Name="NavigationViewBackButton" Content="&#xE72B;" IsEnabled="{TemplateBinding IsBackEnabled}" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.BackButtonVisibility}" Style="{StaticResource MaterialNavigationViewIconButtonStyle}">
                  <ToolTipService.ToolTip>
                    <ToolTip x:Name="NavigationViewBackButtonToolTip" />
                  </ToolTipService.ToolTip>
                </Button>
                <Button x:Name="NavigationViewCloseButton" Content="&#xE894;" Style="{StaticResource MaterialNavigationViewIconButtonStyle}">
                  <ToolTipService.ToolTip>
                    <ToolTip x:Name="NavigationViewCloseButtonToolTip" />
                  </ToolTipService.ToolTip>
                </Button>
                <Button x:Name="TogglePaneButton" FocusVisualMargin="0" AutomationProperties.LandmarkType="Navigation" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.PaneToggleButtonVisibility}" Style="{TemplateBinding PaneToggleButtonStyle}">
                  <TextBlock x:Name="PaneTitleTextBlock" Margin="0,-2,0,0" Text="{TemplateBinding PaneTitle}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Style="{StaticResource MaterialTitleMedium}" />
                </Button>
                <Grid x:Name="PaneTitleHolder" Height="56" Visibility="Collapsed">
                  <ContentControl x:Name="PaneTitlePresenter" Margin="{ThemeResource NavigationViewPaneTitlePresenterMargin}" IsTabStop="False" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" />
                </Grid>
              </Grid>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialNavigationViewIconButtonStyle" TargetType="Button">
    <Setter Property="Foreground" Value="{ThemeResource NavigationViewButtonForeground}" />
    <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
    <Setter Property="FontSize" Value="{ThemeResource MaterialNavigationViewButtonIconSymbolFontSize}" />
    <Setter Property="Background" Value="{ThemeResource NavigationViewButtonBackground}" />
    <Setter Property="CornerRadius" Value="{ThemeResource MaterialNavigationViewButtonCornerRadius}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Height" Value="{ThemeResource MaterialNavigationViewButtonWidth}" />
    <Setter Property="Width" Value="{ThemeResource MaterialNavigationViewButtonWidth}" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewButtonBackgroundPointerOver}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewButtonForegroundPointerOver}" />
                    <todo:Setter Target="Icon.(controls:AnimatedIcon.State)" Value="PointerOver" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewButtonBackgroundPressed}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewButtonForegroundPressed}" />
                    <todo:Setter Target="Icon.(controls:AnimatedIcon.State)" Value="Pressed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewButtonBackgroundDisabled}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewButtonForegroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <todo:local_AnimatedIcon x:Name="Icon" Height="{ThemeResource MaterialNavigationViewButtonIconLength}" Width="{ThemeResource MaterialNavigationViewButtonIconLength}" local:AnimatedIcon.State="Normal" MirroredWhenRightToLeft="True" HorizontalAlignment="Center" VerticalAlignment="Center" AutomationProperties.AccessibilityView="Raw" xmlns:local="using:Microsoft.UI.Xaml.Controls">
              <!--
                                this style is used for both back and close button
                                yet, only Animated'Back'VisualSource exist...
                            -->
              <animatedvisuals:AnimatedBackVisualSource />
              <controls:AnimatedIcon.FallbackIconSource>
                <controls:FontIconSource Glyph="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}" FontSize="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontSize}" FontFamily="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontFamily}" MirroredWhenRightToLeft="True" />
              </controls:AnimatedIcon.FallbackIconSource>
            </todo:local_AnimatedIcon>
            <Viewbox x:Name="IconHost" Height="{ThemeResource MaterialNavigationViewButtonIconLength}" Width="{ThemeResource MaterialNavigationViewButtonIconLength}" HorizontalAlignment="Center" VerticalAlignment="Center" AutomationProperties.AccessibilityView="Raw">
              <ContentPresenter x:Name="Icon" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" FontFamily="{StaticResource SymbolThemeFontFamily}" FontSize="{TemplateBinding FontSize}" AutomationProperties.AccessibilityView="Raw" />
            </Viewbox>
            <um:Ripple Feedback="{ThemeResource NavigationViewButtonRippleFeedback}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialNavigationViewIconTextButtonStyle" TargetType="Button">
    <Setter Property="Foreground" Value="{ThemeResource NavigationViewButtonForeground}" />
    <Setter Property="FontSize" Value="{ThemeResource MaterialNavigationViewButtonIconSymbolFontSize}" />
    <Setter Property="Background" Value="{ThemeResource NavigationViewButtonBackground}" />
    <Setter Property="CornerRadius" Value="{ThemeResource MaterialNavigationViewButtonCornerRadius}" />
    <Setter Property="BorderThickness" Value="0" />
    <!-- note: a computed margin will be injected by the NV implementation for "layout placement". -->
    <!-- and, because of that, the default margin will be applied through Padding on LayoutRoot.Margin -->
    <Setter Property="Margin" Value="0" />
    <Setter Property="Padding" Value="12,0" />
    <Setter Property="MinHeight" Value="{ThemeResource MaterialNavigationViewButtonWidth}" />
    <Setter Property="MinWidth" Value="{ThemeResource MaterialNavigationViewButtonWidth}" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="LayoutRoot" Height="{TemplateBinding MinHeight}" Margin="{TemplateBinding Padding}" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" CornerRadius="{TemplateBinding CornerRadius}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="{ThemeResource PaneToggleButtonHeight}" />
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewButtonBackgroundPointerOver}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewButtonForegroundPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewButtonForegroundPointerOver}" />
                    <todo:Setter Target="Icon.(controls:AnimatedIcon.State)" Value="PointerOver" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewButtonBackgroundPressed}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewButtonForegroundPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewButtonForegroundPressed}" />
                    <todo:Setter Target="Icon.(controls:AnimatedIcon.State)" Value="Pressed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewButtonBackgroundDisabled}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewButtonForegroundDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewButtonForegroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Height="{TemplateBinding MinHeight}" Width="{TemplateBinding MinWidth}">
              <todo:local_AnimatedIcon x:Name="Icon" Height="{ThemeResource MaterialNavigationViewButtonIconLength}" Width="{ThemeResource MaterialNavigationViewButtonIconLength}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center" AutomationProperties.AccessibilityView="Raw" local:AnimatedIcon.State="Normal" xmlns:local="using:Microsoft.UI.Xaml.Controls">
                <animatedvisuals:AnimatedGlobalNavigationButtonVisualSource />
                <controls:AnimatedIcon.FallbackIconSource>
                  <controls:FontIconSource Glyph="&#xE700;" FontSize="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontSize}" />
                </controls:AnimatedIcon.FallbackIconSource>
              </todo:local_AnimatedIcon>
              <Viewbox x:Name="IconHost" Height="{ThemeResource MaterialNavigationViewButtonIconLength}" Width="{ThemeResource MaterialNavigationViewButtonIconLength}" HorizontalAlignment="Center" VerticalAlignment="Center" AutomationProperties.AccessibilityView="Raw">
                <TextBlock x:Name="Icon" Text="&#xE700;" Foreground="{TemplateBinding Foreground}" FontFamily="{StaticResource SymbolThemeFontFamily}" FontSize="{TemplateBinding FontSize}" AutomationProperties.AccessibilityView="Raw" />
              </Viewbox>
            </Border>
            <ContentPresenter x:Name="ContentPresenter" Grid.Column="1" Content="{TemplateBinding Content}" Height="{TemplateBinding MinHeight}" FontSize="{TemplateBinding FontSize}" VerticalContentAlignment="Center" />
            <um:Ripple Grid.ColumnSpan="2" Feedback="{ThemeResource NavigationViewButtonRippleFeedback}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NavigationViewPaneSearchButtonStyle" TargetType="Button">
    <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
    <Setter Property="BorderThickness" Value="{ThemeResource NavigationViewToggleBorderThickness}" />
    <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
    <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
    <Setter Property="Content" Value="&#xE11A;" />
    <Setter Property="MinHeight" Value="36" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="FocusVisualMargin" Value="-4,0" />
    <todo:contract7Present_Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
  </Style>
  <Style x:Key="NavigationViewOverflowButtonStyleWhenPaneOnTop" TargetType="Button">
    <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
    <Setter Property="Foreground" Value="{ThemeResource TopNavigationViewItemForeground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource NavigationViewItemBorderThickness}" />
    <Setter Property="Height" Value="{ThemeResource TopNavigationViewOverflowButtonHeight}" />
    <Setter Property="Width" Value="{ThemeResource TopNavigationViewOverflowButtonWidth}" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="UseSystemFocusVisuals" Value="True" />
    <Setter Property="FocusVisualMargin" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="RootGrid" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="RootGrid.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPointerOver}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundPointerOver}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="RootGrid.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPressed}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundPressed}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="RootGrid.Background" Value="{ThemeResource TopNavigationViewItemBackgroundDisabled}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundDisabled}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="PointerRectangle" Fill="Transparent" Visibility="Collapsed" />
            <FontIcon x:Name="Icon" VerticalAlignment="Center" HorizontalAlignment="Center" AutomationProperties.AccessibilityView="Raw" FontFamily="{ThemeResource SymbolThemeFontFamily}" FontSize="16" Glyph="&#xE10C;" Foreground="{TemplateBinding Foreground}" IsHitTestVisible="False" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NavigationViewOverflowButtonNoLabelStyleWhenPaneOnTop" TargetType="Button">
    <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
    <Setter Property="Foreground" Value="{ThemeResource TopNavigationViewItemForeground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource NavigationViewItemBorderThickness}" />
    <Setter Property="Height" Value="{ThemeResource TopNavigationViewOverflowButtonHeight}" />
    <Setter Property="Width" Value="{ThemeResource TopNavigationViewOverflowButtonWidth}" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="UseSystemFocusVisuals" Value="True" />
    <Setter Property="FocusVisualMargin" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="RootGrid" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="RootGrid.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPointerOver}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundPointerOver}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="RootGrid.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPressed}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundPressed}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="RootGrid.Background" Value="{ThemeResource TopNavigationViewItemBackgroundDisabled}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundDisabled}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="PointerRectangle" Fill="Transparent" />
            <FontIcon x:Name="Icon" VerticalAlignment="Center" HorizontalAlignment="Center" AutomationProperties.AccessibilityView="Raw" FontFamily="{ThemeResource SymbolThemeFontFamily}" FontSize="20" Glyph="&#xE10C;" Foreground="{TemplateBinding Foreground}" IsHitTestVisible="False" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialNavigationViewItemStyle" TargetType="controls:NavigationViewItem">
    <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
    <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource NavigationViewItemBorderThickness}" />
    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
    <Setter Property="Margin" Value="{ThemeResource NavigationViewItemMargin}" />
    <Setter Property="UseSystemFocusVisuals" Value="True" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="TabNavigation" Value="Once" />
    <todo:contract7Present_Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:NavigationViewItem">
          <Grid x:Name="NVIRootGrid">
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ItemOnNavigationViewListPositionStates">
                <VisualState x:Name="OnLeftNavigation">
                  <VisualState.Setters>
                    <Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnLeftPane}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="OnTopNavigationPrimary">
                  <VisualState.Setters>
                    <Setter Target="NavigationViewItemPresenter.Margin" Value="{ThemeResource TopNavigationViewItemMargin}" />
                    <Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnTopPane}" />
                    <todo:contract7NotPresent_Setter Target="ChildrenFlyout.Placement" Value="Bottom" />
                    <todo:contract7Present_Setter Target="ChildrenFlyout.Placement" Value="BottomEdgeAlignedLeft" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="OnTopNavigationOverflow">
                  <VisualState.Setters>
                    <Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnTopPaneOverflow}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <primitives:NavigationViewItemPresenter x:Name="NavigationViewItemPresenter" Icon="{TemplateBinding Icon}" todo:InfoBadge="{TemplateBinding InfoBadge}" ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplate="{TemplateBinding ContentTemplate}" Padding="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" UseSystemFocusVisuals="{TemplateBinding UseSystemFocusVisuals}" VerticalAlignment="{TemplateBinding VerticalAlignment}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" Content="{TemplateBinding Content}" primitiveContract7Present:CornerRadius="{TemplateBinding CornerRadius}" IsTabStop="false" Control.IsTemplateFocusTarget="True" />
            <controls:ItemsRepeater Grid.Row="1" Visibility="Collapsed" x:Name="NavigationViewItemMenuItemsHost">
              <controls:ItemsRepeater.Layout>
                <controls:StackLayout Orientation="Vertical" />
              </controls:ItemsRepeater.Layout>
            </controls:ItemsRepeater>
            <FlyoutBase.AttachedFlyout>
              <Flyout x:Name="ChildrenFlyout" contract7NotPresent:Placement="Right" contract7Present:Placement="RightEdgeAlignedTop">
                <Flyout.FlyoutPresenterStyle>
                  <Style TargetType="FlyoutPresenter">
                    <Setter Property="Padding" Value="{ThemeResource NavigationViewItemChildrenMenuFlyoutPadding}" />
                    <!-- Set negative top margin to make the flyout align exactly with the button -->
                    <Setter Property="Margin" Value="0,-4,0,0" />
                    <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto" />
                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                    <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
                    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                    <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
                    <todo:contract7Present_Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
                    <Setter Property="Template">
                      <Setter.Value>
                        <ControlTemplate TargetType="FlyoutPresenter">
                          <ScrollViewer x:Name="ScrollViewer" ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" AutomationProperties.AccessibilityView="Raw">
                            <ContentPresenter x:Name="ContentPresenter" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Padding="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" contract7Present:CornerRadius="{TemplateBinding CornerRadius}" contract7NotPresent:CornerRadius="{ThemeResource OverlayCornerRadius}" />
                          </ScrollViewer>
                        </ControlTemplate>
                      </Setter.Value>
                    </Setter>
                  </Style>
                </Flyout.FlyoutPresenterStyle>
                <Grid x:Name="FlyoutRootGrid">
                  <Grid x:Name="FlyoutContentGrid" />
                </Grid>
              </Flyout>
            </FlyoutBase.AttachedFlyout>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MUX_NavigationViewSettingsItemStyleWhenOnTopPane" TargetType="controls:NavigationViewItem">
    <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
    <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource NavigationViewItemBorderThickness}" />
    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
    <Setter Property="UseSystemFocusVisuals" Value="True" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <todo:contract7Present_Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:NavigationViewItem">
          <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}" contract7Present:CornerRadius="{TemplateBinding CornerRadius}" contract7NotPresent:CornerRadius="{ThemeResource ControlCornerRadius}" Margin="{ThemeResource NavigationViewItemButtonMargin}" Height="{ThemeResource TopNavigationViewSettingsButtonHeight}" Width="{ThemeResource TopNavigationViewSettingsButtonHeight}" Control.IsTemplateFocusTarget="True">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="PointerStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPointerOver}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundPointerOver}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPointerOver}" />
                    <todo:Setter Target="Icon.(controls:AnimatedIcon.State)" Value="PointerOver" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPressed}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundPressed}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPressed}" />
                    <todo:Setter Target="Icon.(controls:AnimatedIcon.State)" Value="Pressed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Selected">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundSelected}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundSelected}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundSelected}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOverSelected">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundSelectedPointerOver}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundSelectedPointerOver}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPointerOver}" />
                    <todo:Setter Target="Icon.(controls:AnimatedIcon.State)" Value="PointerOver" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PressedSelected">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundSelectedPressed}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundSelectedPressed}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPressed}" />
                    <todo:Setter Target="Icon.(controls:AnimatedIcon.State)" Value="Pressed" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DisabledStates">
                <VisualState x:Name="Enabled" />
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundDisabled}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundDisabled}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="PointerRectangle" Fill="Transparent" />
            <Grid x:Name="ContentGrid">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition x:Name="IconRow" Height="Auto" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Viewbox x:Name="IconBox" Grid.Row="1" Grid.Column="1" Height="16" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center">
                <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" todo:local_AnimatedIcon.State="Normal" />
              </Viewbox>
              <todo:ContentPresenter x:Name="InfoBadgePresenter" Grid.Column="2" VerticalAlignment="Center" Content="{TemplateBinding InfoBadge}" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="primitives:NavigationViewItemPresenter" />
  <Style TargetType="primitives:NavigationViewItemPresenter" x:Key="MUX_NavigationViewItemPresenterStyleWhenOnLeftPane">
    <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
    <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource NavigationViewItemBorderThickness}" />
    <Setter Property="UseSystemFocusVisuals" Value="True" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <todo:contract7Present_Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="primitives:NavigationViewItemPresenter">
          <Grid x:Name="LayoutRoot" CornerRadius="{ThemeResource MaterialNavigationViewItemCornerRadius}" Background="{TemplateBinding Background}" Height="{ThemeResource MaterialNavigationItemHeight}" Margin="{ThemeResource MaterialNavigationItemLeftMargin}" Control.IsTemplateFocusTarget="True">
            <Grid.Resources>
              <contract7NotPresent:Storyboard x:Name="ExpandCollapseRotateExpandedStoryboard">
                <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform" Storyboard.TargetProperty="Angle" From="0.0" To="180.0" Duration="0:0:0.1" />
              </contract7NotPresent:Storyboard>
              <contract7NotPresent:Storyboard x:Name="ExpandCollapseRotateCollapsedStoryboard">
                <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform" Storyboard.TargetProperty="Angle" From="180.0" To="0.0" Duration="0:0:0.1" />
              </contract7NotPresent:Storyboard>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="PointerStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="PresenterContentRootGrid.Background" Value="{ThemeResource NavigationViewItemBackgroundPointerOver}" />
                    <todo:Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundPointerOver}" />
                    <todo:Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                    <todo:Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                    <todo:Setter Target="Icon.(controls:AnimatedIcon.State)" Value="PointerOver" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="PresenterContentRootGrid.Background" Value="{ThemeResource NavigationViewItemBackgroundPressed}" />
                    <todo:Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundPressed}" />
                    <todo:Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                    <todo:Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                    <todo:Setter Target="Icon.(controls:AnimatedIcon.State)" Value="Pressed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Selected">
                  <VisualState.Setters>
                    <Setter Target="SelectionFill.Background" Value="{ThemeResource NavigationViewItemBackgroundSelected}" />
                    <todo:Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelected}" />
                    <todo:Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelected}" />
                    <todo:Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelected}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOverSelected">
                  <VisualState.Setters>
                    <Setter Target="PresenterContentRootGrid.Background" Value="{ThemeResource NavigationViewItemBackgroundPointerOver}" />
                    <Setter Target="SelectionFill.Background" Value="{ThemeResource NavigationViewItemBackgroundSelected}" />
                    <todo:Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelectedPointerOver}" />
                    <todo:Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelectedPointerOver}" />
                    <todo:Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelectedPointerOver}" />
                    <todo:Setter Target="Icon.(controls:AnimatedIcon.State)" Value="PointerOver" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PressedSelected">
                  <VisualState.Setters>
                    <Setter Target="PresenterContentRootGrid.Background" Value="{ThemeResource NavigationViewItemBackgroundPressed}" />
                    <Setter Target="SelectionFill.Background" Value="{ThemeResource NavigationViewItemBackgroundSelected}" />
                    <todo:Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelectedPressed}" />
                    <todo:Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelectedPressed}" />
                    <todo:Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelectedPressed}" />
                    <todo:Setter Target="Icon.(controls:AnimatedIcon.State)" Value="Pressed" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DisabledStates">
                <VisualState x:Name="Enabled" />
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="IconStates">
                <VisualState x:Name="IconVisible" />
                <VisualState x:Name="IconCollapsed">
                  <VisualState.Setters>
                    <Setter Target="IconColumn.Width" Value="0" />
                    <Setter Target="IconBox.Visibility" Value="Collapsed" />
                    <Setter Target="ContentPresenter.Margin" Value="{ThemeResource MaterialNavigationItemContentMarginWithoutIcon}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <todo:VisualStateGroup x:Name="InfoBadgeStates">
                <VisualState x:Name="InfoBadgeVisible" />
                <VisualState x:Name="InfoBadgeCollapsed">
                  <VisualState.Setters>
                    <Setter Target="InfoBadgePresenter.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
              </todo:VisualStateGroup>
              <todo:VisualStateGroup x:Name="ChevronStates">
                <VisualState x:Name="ChevronHidden" />
                <VisualState x:Name="ChevronVisibleOpen">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
                    <Setter Target="ExpandCollapseChevronIcon.Visibility" Value="Visible" />
                    <todo:contract7NotPresent_Setter Target="ExpandCollapseChevronRotateTransform.Angle" Value="180" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ChevronVisibleClosed">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
                    <Setter Target="ExpandCollapseChevronIcon.Visibility" Value="Visible" />
                    <todo:contract7NotPresent_Setter Target="ExpandCollapseChevronRotateTransform.Angle" Value="0" />
                  </VisualState.Setters>
                </VisualState>
              </todo:VisualStateGroup>
              <todo:VisualStateGroup x:Name="PointerChevronStates">
                <VisualState x:Name="NormalChevronHidden" />
                <VisualState x:Name="NormalChevronVisibleOpen">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevron.(controls:AnimatedIcon.State)" Value="NormalOn" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NormalChevronVisibleClosed">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevron.(controls:AnimatedIcon.State)" Value="NormalOff" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOverChevronHidden">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevron.(controls:AnimatedIcon.State)" Value="PointerOverOff" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOverChevronVisibleOpen">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevron.(controls:AnimatedIcon.State)" Value="PointerOverOn" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOverChevronVisibleClosed">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevron.(controls:AnimatedIcon.State)" Value="PointerOverOff" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PressedChevronHidden">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevron.(controls:AnimatedIcon.State)" Value="PressedOff" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PressedChevronVisibleOpen">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevron.(controls:AnimatedIcon.State)" Value="PressedOn" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PressedChevronVisibleClosed">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevron.(controls:AnimatedIcon.State)" Value="PressedOff" />
                  </VisualState.Setters>
                </VisualState>
              </todo:VisualStateGroup>
              <VisualStateGroup x:Name="PaneAndTopLevelItemStates">
                <VisualState x:Name="NotClosedCompactAndTopLevelItem" />
                <VisualState x:Name="ClosedCompactAndTopLevelItem">
                  <!-- Rail (Compact; left vertical) or Bar (Top; top horizontal) mode -->
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.Visibility" Value="Collapsed" />
                    <todo:Setter Target="InfoBadgePresenter.(Grid.Column)" Value="0" />
                    <todo:Setter Target="InfoBadgePresenter.(Grid.ColumnSpan)" Value="4" />
                    <todo:Setter Target="InfoBadgePresenter.VerticalAlignment" Value="Top" />
                    <todo:Setter Target="InfoBadgePresenter.HorizontalAlignment" Value="Right" />
                    <todo:Setter Target="InfoBadgePresenter.Margin" Value="0,2,2,0" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <!-- note: PresenterContentRootGrid has a scaling margin-left (other 3 are preserved) based on depth (See: NVI::UpdateItemIndentation) -->
            <Grid x:Name="PresenterContentRootGrid" CornerRadius="{ThemeResource MaterialNavigationViewItemCornerRadiusLeftOnly}">
              <!--
                                Pointer relative visual are composed of 3 stacking layer: // material dont have of composite state brush...
                                - PresenterContentRootGrid.Background: (Pressed) ?? (PointerOver) ?? (*null*) // via VisualState
                                - SelectionFill.Background: (Selected) ?? (*null*) // via VisualState
                                - Ripple: (OnClick) // via Ripple
                            -->
              <Border x:Name="SelectionFill" />
              <!-- Wrap SelectionIndicator in a grid so that its offset is 0,0 - this enables the offset animation. -->
              <todo:Grid HorizontalAlignment="Left" VerticalAlignment="Center">
                <!--
                                    this SelectionIndicator is what "moves across" items
                                    the effect is composed of two parts: old_selection slide-away (toward selection) + new_selection slide-in (from previous)
                                    note: this can only move within the boundary of this NVIPresenter, it gets clipped outside of NVIP.
                                    attempting to use this for a full item doesnt work well (barely noticiable), it should be used with
                                    a small rectangle that can noticiably move within the NVIP. because of that, this is not used.
                                -->
                <Rectangle x:Name="SelectionIndicator" Width="{ThemeResource NavigationViewSelectionIndicatorWidth}" Height="{ThemeResource NavigationViewSelectionIndicatorHeight}" Fill="{ThemeResource NavigationViewSelectionIndicatorForeground}" Opacity="0.0" contract7Present:RadiusX="{ThemeResource NavigationViewSelectionIndicatorRadius}" contract7Present:RadiusY="{ThemeResource NavigationViewSelectionIndicatorRadius}" />
              </todo:Grid>
              <Grid x:Name="ContentGrid" Padding="16">
                <Grid.ColumnDefinitions>
                  <!-- 0: Icon, 1: Content, 2: InfoBadge, 3: Chevron -->
                  <ColumnDefinition x:Name="IconColumn" Width="24" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Border Height="{ThemeResource MaterialNavigationItemIconLength}" Width="{ThemeResource MaterialNavigationItemIconLength}" HorizontalAlignment="Center" VerticalAlignment="Center">
                  <Viewbox x:Name="IconBox" Height="{ThemeResource NavigationViewItemOnLeftIconBoxHeight}" HorizontalAlignment="Center">
                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" todo:local_AnimatedIcon.State="Normal" />
                  </Viewbox>
                </Border>
                <ContentPresenter x:Name="ContentPresenter" Grid.Column="1" Margin="{ThemeResource MaterialNavigationItemContentMargin}" ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" Padding="{TemplateBinding Padding}" AutomationProperties.AccessibilityView="Raw" />
                <todo:Grid x:Name="ExpandCollapseChevron" Grid.Column="3" Visibility="Collapsed" HorizontalAlignment="Right" Width="40" Margin="{ThemeResource NavigationViewItemExpandChevronMargin}" Background="Transparent" todo:local_AnimatedIcon.State="NormalOff">
                  <todo:local_AnimatedIcon Width="12" Height="12" RenderTransformOrigin="0.5, 0.5" x:Name="ExpandCollapseChevronIcon" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed" AutomationProperties.AccessibilityView="Raw" x:DeferLoadStrategy="Lazy">
                    <animatedvisuals:AnimatedChevronUpDownSmallVisualSource />
                    <controls:AnimatedIcon.FallbackIconSource>
                      <controls:FontIconSource Foreground="{ThemeResource NavigationViewItemForeground}" FontSize="{ThemeResource NavigationViewItemExpandedGlyphFontSize}" Glyph="{ThemeResource NavigationViewItemExpandedGlyph}" FontFamily="{StaticResource SymbolThemeFontFamily}" />
                    </controls:AnimatedIcon.FallbackIconSource>
                    <controls:AnimatedIcon.RenderTransform>
                      <contract7NotPresent:RotateTransform x:Name="ExpandCollapseChevronRotateTransform" Angle="0" />
                    </controls:AnimatedIcon.RenderTransform>
                  </todo:local_AnimatedIcon>
                </todo:Grid>
                <todo:ContentPresenter x:Name="InfoBadgePresenter" Grid.Column="2" VerticalAlignment="Center" Content="{TemplateBinding InfoBadge}" />
              </Grid>
              <um:Ripple Feedback="{ThemeResource NavigationViewItemRippleFeedback}" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="primitives:NavigationViewItemPresenter" x:Key="MUX_NavigationViewItemPresenterStyleWhenOnTopPane">
    <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
    <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="primitives:NavigationViewItemPresenter">
          <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}" Control.IsTemplateFocusTarget="True" contract7Present:CornerRadius="{TemplateBinding CornerRadius}" contract7NotPresent:CornerRadius="{ThemeResource ControlCornerRadius}">
            <Grid.Resources>
              <contract7NotPresent:Storyboard x:Name="ExpandCollapseRotateExpandedStoryboard">
                <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform" Storyboard.TargetProperty="Angle" From="0.0" To="180.0" Duration="0:0:0.1" />
              </contract7NotPresent:Storyboard>
              <contract7NotPresent:Storyboard x:Name="ExpandCollapseRotateCollapsedStoryboard">
                <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform" Storyboard.TargetProperty="Angle" From="180.0" To="0.0" Duration="0:0:0.1" />
              </contract7NotPresent:Storyboard>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="PointerStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPointerOver}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundPointerOver}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPointerOver}" />
                    <todo:Setter Target="Icon.(controls:AnimatedIcon.State)" Value="PointerOver" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPressed}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundPressed}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPressed}" />
                    <todo:Setter Target="Icon.(controls:AnimatedIcon.State)" Value="Pressed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Selected">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundSelected}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundSelected}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundSelected}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundSelected}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOverSelected">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundSelectedPointerOver}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundSelectedPointerOver}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundSelectedPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundSelectedPointerOver}" />
                    <todo:Setter Target="Icon.(controls:AnimatedIcon.State)" Value="PointerOver" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PressedSelected">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundSelectedPressed}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundSelectedPressed}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundSelectedPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundSelectedPressed}" />
                    <todo:Setter Target="Icon.(controls:AnimatedIcon.State)" Value="Pressed" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DisabledStates">
                <VisualState x:Name="Enabled" />
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="NavigationViewIconPositionStates">
                <VisualState x:Name="IconOnLeft" />
                <VisualState x:Name="IconOnly">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Width" Value="36" />
                    <Setter Target="LayoutRoot.Height" Value="36" />
                    <Setter Target="LayoutRoot.Margin" Value="2" />
                    <Setter Target="IconBox.Margin" Value="10,0" />
                    <Setter Target="ContentPresenter.Visibility" Value="Collapsed" />
                    <Setter Target="SelectionIndicatorGrid.Margin" Value="0" />
                    <Setter Target="ExpandCollapseChevron.Margin" Value="{ThemeResource TopNavigationViewItemIconOnlyExpandChevronMargin}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ContentOnly">
                  <VisualState.Setters>
                    <Setter Target="IconBox.Visibility" Value="Collapsed" />
                    <Setter Target="ContentPresenter.Margin" Value="{ThemeResource TopNavigationViewItemContentOnlyContentPresenterMargin}" />
                    <Setter Target="SelectionIndicatorGrid.Margin" Value="12,0,12,4" />
                    <Setter Target="ExpandCollapseChevron.Margin" Value="{ThemeResource TopNavigationViewItemContentOnlyExpandChevronMargin}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="InfoBadgeStates">
                <VisualState x:Name="InfoBadgeVisible" />
                <VisualState x:Name="InfoBadgeCollapsed">
                  <VisualState.Setters>
                    <todo:Setter Target="InfoBadgePresenter.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ChevronStates">
                <VisualState x:Name="ChevronHidden" />
                <VisualState x:Name="ChevronVisibleOpen">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
                    <todo:contract7NotPresent_Setter Target="ExpandCollapseChevronRotateTransform.Angle" Value="180" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ChevronVisibleClosed">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
                    <todo:contract7NotPresent_Setter Target="ExpandCollapseChevronRotateTransform.Angle" Value="0" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <todo:VisualStateGroup x:Name="PointerChevronStates">
                <VisualState x:Name="NormalChevronHidden" />
                <VisualState x:Name="NormalChevronVisibleOpen">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevronIcon.(controls:AnimatedIcon.State)" Value="NormalOn" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NormalChevronVisibleClosed">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevronIcon.(controls:AnimatedIcon.State)" Value="NormalOff" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOverChevronHidden">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevronIcon.(controls:AnimatedIcon.State)" Value="PointerOverOff" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOverChevronVisibleOpen">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevronIcon.(controls:AnimatedIcon.State)" Value="PointerOverOn" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOverChevronVisibleClosed">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevronIcon.(controls:AnimatedIcon.State)" Value="PointerOverOff" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PressedChevronHidden">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevronIcon.(controls:AnimatedIcon.State)" Value="PressedOff" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PressedChevronVisibleOpen">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevronIcon.(controls:AnimatedIcon.State)" Value="PressedOn" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PressedChevronVisibleClosed">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevronIcon.(controls:AnimatedIcon.State)" Value="PressedOff" />
                  </VisualState.Setters>
                </VisualState>
              </todo:VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="PointerRectangle" Fill="Transparent" Visibility="Collapsed" />
            <Grid x:Name="ContentGrid">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Viewbox x:Name="IconBox" Height="16" Width="16" Margin="12,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center">
                <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" todo:local_AnimatedIcon.State="Normal" />
              </Viewbox>
              <ContentPresenter x:Name="ContentPresenter" Grid.Column="1" Margin="{ThemeResource TopNavigationViewItemContentPresenterMargin}" TextWrapping="NoWrap" Foreground="{TemplateBinding Foreground}" ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" VerticalAlignment="Center" AutomationProperties.AccessibilityView="Raw" />
              <Grid x:Name="ExpandCollapseChevron" Grid.Column="2" Visibility="Collapsed" HorizontalAlignment="Right" Width="40" Margin="{ThemeResource TopNavigationViewItemExpandChevronMargin}" Background="Transparent">
                <todo:local_AnimatedIcon Width="12" Height="12" RenderTransformOrigin="0.5, 0.5" x:Name="ExpandCollapseChevronIcon" HorizontalAlignment="Center" VerticalAlignment="Center" AutomationProperties.AccessibilityView="Raw" local:AnimatedIcon.State="NormalOff" xmlns:local="using:Microsoft.UI.Xaml.Controls">
                  <animatedvisuals:AnimatedChevronUpDownSmallVisualSource />
                  <controls:AnimatedIcon.FallbackIconSource>
                    <controls:FontIconSource Foreground="{ThemeResource NavigationViewItemForeground}" FontSize="{ThemeResource NavigationViewItemExpandedGlyphFontSize}" Glyph="{ThemeResource NavigationViewItemExpandedGlyph}" FontFamily="{StaticResource SymbolThemeFontFamily}" />
                  </controls:AnimatedIcon.FallbackIconSource>
                  <controls:AnimatedIcon.RenderTransform>
                    <contract7NotPresent:RotateTransform x:Name="ExpandCollapseChevronRotateTransform" Angle="0" />
                  </controls:AnimatedIcon.RenderTransform>
                </todo:local_AnimatedIcon>
              </Grid>
              <todo:ContentPresenter x:Name="InfoBadgePresenter" Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="-16,0,2,13" Content="{TemplateBinding InfoBadge}" />
            </Grid>
            <Grid x:Name="SelectionIndicatorGrid" Margin="16,0,16,4" VerticalAlignment="Bottom" HorizontalAlignment="Center">
              <Rectangle x:Name="SelectionIndicator" Height="3" Width="16" Fill="{ThemeResource NavigationViewSelectionIndicatorForeground}" Opacity="0" contract7Present:RadiusX="2" contract7Present:RadiusY="2" contract7NotPresent:RadiusX="2" contract7NotPresent:RadiusY="2" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="primitives:NavigationViewItemPresenter" x:Key="MUX_NavigationViewItemPresenterStyleWhenOnTopPaneOverflow">
    <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
    <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="primitives:NavigationViewItemPresenter">
          <Grid x:Name="LayoutRoot" Height="36" Background="{TemplateBinding Background}" Control.IsTemplateFocusTarget="True">
            <Grid.Resources>
              <contract7NotPresent:Storyboard x:Name="ExpandCollapseRotateExpandedStoryboard">
                <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform" Storyboard.TargetProperty="Angle" From="0.0" To="180.0" Duration="0:0:0.1" />
              </contract7NotPresent:Storyboard>
              <contract7NotPresent:Storyboard x:Name="ExpandCollapseRotateCollapsedStoryboard">
                <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform" Storyboard.TargetProperty="Angle" From="180.0" To="0.0" Duration="0:0:0.1" />
              </contract7NotPresent:Storyboard>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="PointerStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundPointerOver}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                    <todo:Setter Target="Icon.(controls:AnimatedIcon.State)" Value="PointerOver" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundPressed}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                    <todo:Setter Target="Icon.(controls:AnimatedIcon.State)" Value="Pressed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Selected">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelected}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelected}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelected}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOverSelected">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelectedPointerOver}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                    <todo:Setter Target="Icon.(controls:AnimatedIcon.State)" Value="PointerOver" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PressedSelected">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelectedPressed}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                    <todo:Setter Target="Icon.(controls:AnimatedIcon.State)" Value="Pressed" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DisabledStates">
                <VisualState x:Name="Enabled" />
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="NavigationViewIconPositionStates">
                <VisualState x:Name="IconOnLeft" />
                <VisualState x:Name="IconOnly" />
                <VisualState x:Name="ContentOnly">
                  <VisualState.Setters>
                    <Setter Target="IconBox.Visibility" Value="Collapsed" />
                    <Setter Target="ContentPresenter.Margin" Value="{ThemeResource TopNavigationViewItemOnOverflowNoIconContentPresenterMargin}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <todo:VisualStateGroup x:Name="InfoBadgeStates">
                <VisualState x:Name="InfoBadgeVisible" />
                <VisualState x:Name="InfoBadgeCollapsed">
                  <VisualState.Setters>
                    <Setter Target="InfoBadgePresenter.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
              </todo:VisualStateGroup>
              <VisualStateGroup x:Name="ChevronStates">
                <VisualState x:Name="ChevronHidden" />
                <VisualState x:Name="ChevronVisibleOpen">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
                    <todo:contract7NotPresent_Setter Target="ExpandCollapseChevronRotateTransform.Angle" Value="180" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ChevronVisibleClosed">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
                    <todo:contract7NotPresent_Setter Target="ExpandCollapseChevronRotateTransform.Angle" Value="0" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <todo:VisualStateGroup x:Name="PointerChevronStates">
                <VisualState x:Name="NormalChevronHidden" />
                <VisualState x:Name="NormalChevronVisibleOpen">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevronIcon.(controls:AnimatedIcon.State)" Value="NormalOn" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NormalChevronVisibleClosed">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevronIcon.(controls:AnimatedIcon.State)" Value="NormalOff" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOverChevronHidden">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevronIcon.(controls:AnimatedIcon.State)" Value="PointerOverOff" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOverChevronVisibleOpen">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevronIcon.(controls:AnimatedIcon.State)" Value="PointerOverOn" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOverChevronVisibleClosed">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevronIcon.(controls:AnimatedIcon.State)" Value="PointerOverOff" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PressedChevronHidden">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevronIcon.(controls:AnimatedIcon.State)" Value="PressedOff" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PressedChevronVisibleOpen">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevronIcon.(controls:AnimatedIcon.State)" Value="PressedOn" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PressedChevronVisibleClosed">
                  <VisualState.Setters>
                    <Setter Target="ExpandCollapseChevronIcon.(controls:AnimatedIcon.State)" Value="PressedOff" />
                  </VisualState.Setters>
                </VisualState>
              </todo:VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="PresenterContentRootGrid">
              <!-- Wrap SelectionIndicator in a grid so that its offset is 0,0 - this enables the offset animation. -->
              <Grid Margin="4,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center">
                <Rectangle x:Name="SelectionIndicator" Width="2" Height="24" Fill="{ThemeResource NavigationViewSelectionIndicatorForeground}" Opacity="0.0" contract7Present:RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}" contract7Present:RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}" contract7NotPresent:RadiusX="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}" contract7NotPresent:RadiusY="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}" />
              </Grid>
              <Grid x:Name="ContentGrid" Margin="0,0,14,0">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Viewbox x:Name="IconBox" Height="16" Width="16" Margin="16,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center">
                  <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" todo:local_AnimatedIcon.State="Normal" />
                </Viewbox>
                <ContentPresenter x:Name="ContentPresenter" Grid.Column="1" Margin="{ThemeResource TopNavigationViewItemOnOverflowContentPresenterMargin}" Foreground="{TemplateBinding Foreground}" TextWrapping="NoWrap" ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" VerticalAlignment="Center" AutomationProperties.AccessibilityView="Raw" />
                <Grid x:Name="ExpandCollapseChevron" Grid.Column="3" Visibility="Collapsed" HorizontalAlignment="Right" Width="40" Margin="{ThemeResource TopNavigationViewItemOnOverflowExpandChevronMargin}" Padding="{ThemeResource TopNavigationViewItemOnOverflowExpandChevronPadding}" Background="Transparent">
                  <todo:local_AnimatedIcon Width="12" Height="12" RenderTransformOrigin="0.5, 0.5" x:Name="ExpandCollapseChevronIcon" HorizontalAlignment="Center" VerticalAlignment="Center" AutomationProperties.AccessibilityView="Raw" local:AnimatedIcon.State="NormalOff" xmlns:local="using:Microsoft.UI.Xaml.Controls">
                    <animatedvisuals:AnimatedChevronUpDownSmallVisualSource />
                    <controls:AnimatedIcon.FallbackIconSource>
                      <controls:FontIconSource Foreground="{ThemeResource NavigationViewItemForeground}" FontSize="{ThemeResource NavigationViewItemExpandedGlyphFontSize}" Glyph="{ThemeResource NavigationViewItemExpandedGlyph}" FontFamily="{StaticResource SymbolThemeFontFamily}" />
                    </controls:AnimatedIcon.FallbackIconSource>
                    <controls:AnimatedIcon.RenderTransform>
                      <contract7NotPresent:RotateTransform x:Name="ExpandCollapseChevronRotateTransform" Angle="0" />
                    </controls:AnimatedIcon.RenderTransform>
                  </todo:local_AnimatedIcon>
                </Grid>
                <todo:ContentPresenter x:Name="InfoBadgePresenter" Grid.Column="2" VerticalAlignment="Center" Content="{TemplateBinding InfoBadge}" />
              </Grid>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="controls:NavigationViewItemHeader">
    <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemHeaderForeground}" />
    <Setter Property="IsEnabled" Value="False" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="MinHeight" Value="0" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="AutomationProperties.AccessibilityView" Value="Raw" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:NavigationViewItemHeader">
          <Grid x:Name="NavigationViewItemHeaderRootGrid">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="PaneStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition From="HeaderTextCollapsed" To="HeaderTextVisible">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerHeaderGrid" Storyboard.TargetProperty="Height">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="40" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderText" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HeaderText" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="0:0:0" Value="0.0" />
                        <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0.0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.2" KeySpline="0.0,0.35 0.15,1.0" Value="1.0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="HeaderTextVisible" To="HeaderTextCollapsed">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerHeaderGrid" Storyboard.TargetProperty="Height">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="0" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderText" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="Collapsed" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HeaderText" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.1" KeySpline="0.0,0.35 0.15,1.0" Value="0.0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="HeaderTextVisible" />
                <VisualState x:Name="HeaderTextCollapsed">
                  <VisualState.Setters>
                    <Setter Target="HeaderText.Visibility" Value="Collapsed" />
                    <Setter Target="InnerHeaderGrid.Height" Value="0" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DisplayModeStates">
                <VisualState x:Name="LeftMode" />
                <VisualState x:Name="TopMode">
                  <VisualState.Setters>
                    <Setter Target="InnerHeaderGrid.Margin" Value="{ThemeResource TopNavigationViewItemInnerHeaderMargin}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="InnerHeaderGrid" Height="40" HorizontalAlignment="Left" Margin="{ThemeResource NavigationViewItemInnerHeaderMargin}">
              <TextBlock x:Name="HeaderText" VerticalAlignment="Center" Margin="0,-1,0,-1" Style="{StaticResource NavigationViewItemHeaderTextStyle}" Text="{TemplateBinding Content}" TextWrapping="NoWrap" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="controls:NavigationViewItemSeparator">
    <Setter Property="IsEnabled" Value="False" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="MinHeight" Value="0" />
    <Setter Property="AutomationProperties.AccessibilityView" Value="Raw" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid x:Name="NavigationViewItemSeparatorRootGrid">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="NavigationSeparatorLineStates">
                <VisualState x:Name="HorizontalLine" />
                <VisualState x:Name="HorizontalLineCompact">
                  <VisualState.Setters>
                    <Setter Target="SeparatorLine.Margin" Value="{ThemeResource NavigationViewCompactItemSeparatorMargin}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VerticalLine">
                  <VisualState.Setters>
                    <Setter Target="SeparatorLine.Height" Value="24" />
                    <Setter Target="SeparatorLine.Width" Value="{ThemeResource TopNavigationViewItemSeparatorWidth}" />
                    <Setter Target="SeparatorLine.Margin" Value="{ThemeResource TopNavigationViewItemSeparatorMargin}" />
                    <Setter Target="SeparatorLine.VerticalAlignment" Value="Center" />
                    <Setter Target="SeparatorLine.Fill" Value="{ThemeResource TopNavigationViewItemSeparatorForeground}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="SeparatorLine" Height="{ThemeResource NavigationViewItemSeparatorHeight}" Fill="{ThemeResource NavigationViewItemSeparatorForeground}" Margin="{ThemeResource NavigationViewItemSeparatorMargin}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NavigationViewItemHeaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
    <Setter Property="FontSize" Value="14" />
    <Setter Property="FontWeight" Value="SemiBold" />
    <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings" />
    <Setter Property="TextWrapping" Value="NoWrap" />
  </Style>
  <Style x:Key="NavigationViewTitleHeaderContentControlTextStyle" TargetType="ContentControl">
    <Setter Property="FontWeight" Value="SemiBold" />
    <Setter Property="FontSize" Value="28" />
    <Setter Property="FontFamily" Value="XamlAutoFontFamily" />
    <Setter Property="Margin" Value="{ThemeResource NavigationViewHeaderMargin}" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
  </Style>
  <Style x:Key="MaterialDefaultNavigationViewStyle" TargetType="controls:NavigationView" BasedOn="{StaticResource MaterialNavigationViewStyle}" />
  <Style x:Key="MaterialDefaultNavigationViewItemStyle" TargetType="controls:NavigationViewItem" BasedOn="{StaticResource MaterialNavigationViewItemStyle}" />
  <!--origin: Styles\Controls\v2\PasswordBox.xaml-->
  <Style x:Key="MaterialRevealButtonStyle" TargetType="Button">
    <Setter Property="Foreground" Value="{ThemeResource PasswordBoxRevealButtonForeground}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="ButtonLayoutGrid" Background="Transparent">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver" />
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="ButtonLayoutGrid.Opacity" Value="0" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Path x:Name="GlyphElement" Width="20" HorizontalAlignment="Center" VerticalAlignment="Center" ios:Margin="0,2,0,0" AutomationProperties.AccessibilityView="Raw" Data="{StaticResource PasswordBoxRevealGlyphPathData}" Fill="{TemplateBinding Foreground}" Stretch="Uniform" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialFilledPasswordBoxStyle" TargetType="PasswordBox">
    <Setter Property="Foreground" Value="{ThemeResource FilledPasswordBoxForeground}" />
    <Setter Property="Background" Value="{ThemeResource FilledPasswordBoxBackground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource FilledPasswordBoxBorderBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="CornerRadius" Value="{ThemeResource FilledPasswordBoxCornerRadius}" />
    <Setter Property="Padding" Value="{ThemeResource FilledPasswordBoxPadding}" />
    <Setter Property="MinHeight" Value="{ThemeResource FilledPasswordBoxMinHeight}" />
    <!-- Start: Body Large Typo -->
    <Setter Property="FontFamily" Value="{ThemeResource FilledPasswordBoxFontFamily}" />
    <Setter Property="FontWeight" Value="{ThemeResource FilledPasswordBoxFontWeight}" />
    <Setter Property="FontSize" Value="{ThemeResource FilledPasswordBoxFontSize}" />
    <Setter Property="CharacterSpacing" Value="{ThemeResource FilledPasswordBoxCharacterSpacing}" />
    <!-- End: Body Large Typo -->
    <!-- Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388 -->
    <Setter Property="um:ControlExtensions.Icon" Value="{x:Null}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="PasswordBox">
          <Grid x:Name="Root" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="NormalBorder.Fill" Value="{ThemeResource FilledPasswordBoxBorderBrushPointerOver}" />
                    <Setter Target="ContentElement.Foreground" Value="{ThemeResource FilledPasswordBoxForegroundPointerOver}" />
                    <Setter Target="PlaceholderElement.Foreground" Value="{ThemeResource FilledPasswordBoxPlaceholderForegroundPointerOver}" />
                    <Setter Target="Root.Background" Value="{ThemeResource FilledPasswordBoxBackgroundPointerOver}" />
                    <Setter Target="NormalBorder.Height" Value="{ThemeResource FilledPasswordBoxBorderHeightPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="NormalBorder.Fill" Value="{ThemeResource FilledPasswordBoxBorderBrushDisabled}" />
                    <!-- In this case the opacity is not applied to the brush directly - known issue for ContentElement -->
                    <Setter Target="ContentElement.Foreground" Value="{ThemeResource FilledPasswordBoxForegroundDisabled}" />
                    <Setter Target="ContentElement.Opacity" Value="{ThemeResource FilledPasswordBoxForegroundOpacityDisabled}" />
                    <Setter Target="PlaceholderElement.Foreground" Value="{ThemeResource FilledPasswordBoxPlaceholderForegroundDisabled}" />
                    <Setter Target="Root.Background" Value="{ThemeResource FilledPasswordBoxBackgroundDisabled}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource PasswordBoxLeadingIconForegroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="NormalBorder.Fill" Value="{ThemeResource FilledPasswordBoxBorderBrushFocused}" />
                    <Setter Target="ContentElement.Foreground" Value="{ThemeResource FilledPasswordBoxForegroundFocused}" />
                    <Setter Target="PlaceholderElement.Foreground" Value="{ThemeResource FilledPasswordBoxPlaceholderForegroundFocused}" />
                    <Setter Target="Root.Background" Value="{ThemeResource FilledPasswordBoxBackgroundFocused}" />
                    <Setter Target="NormalBorder.Height" Value="{ThemeResource FilledPasswordBoxBorderHeightFocused}" />
                  </VisualState.Setters>
                  <Storyboard>
                    <DoubleAnimation EasingFunction="{StaticResource MaterialEaseInOutFunction}" Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleX" To="1" Duration="{StaticResource MaterialTextBoxAnimationDuration}" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ButtonStates">
                <VisualState x:Name="ButtonVisible">
                  <VisualState.Setters>
                    <Setter Target="RevealButton.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ButtonCollapsed" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="HeaderStates">
                <VisualState x:Name="NotEmpty">
                  <Storyboard>
                    <DoubleAnimation EasingFunction="{StaticResource MaterialEaseInOutFunction}" Storyboard.TargetName="Transform" Storyboard.TargetProperty="TranslateY" To="-11" Duration="{StaticResource MaterialTextBoxAnimationDuration}" />
                    <DoubleAnimation EasingFunction="{StaticResource MaterialEaseInOutFunction}" Storyboard.TargetName="ContentTransform" Storyboard.TargetProperty="TranslateY" To="8" Duration="{StaticResource MaterialTextBoxAnimationDuration}" />
                    <DoubleAnimation EasingFunction="{StaticResource MaterialEaseInOutFunction}" Storyboard.TargetName="Transform" Storyboard.TargetProperty="ScaleX" To="0.7" Duration="{StaticResource MaterialTextBoxAnimationDuration}" />
                    <DoubleAnimation EasingFunction="{StaticResource MaterialEaseInOutFunction}" Storyboard.TargetName="Transform" Storyboard.TargetProperty="ScaleY" To="0.7" Duration="{StaticResource MaterialTextBoxAnimationDuration}" />
                  </Storyboard>
                  <VisualState.StateTriggers>
                    <StateTrigger IsActive="{Binding Password, Converter={StaticResource MaterialEmptyToFalse}, RelativeSource={RelativeSource TemplatedParent}}" />
                  </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="Empty">
                  <VisualState.StateTriggers>
                    <StateTrigger IsActive="{Binding Password, Converter={StaticResource MaterialEmptyToTrue}, RelativeSource={RelativeSource TemplatedParent}}" />
                  </VisualState.StateTriggers>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Padding="{TemplateBinding Padding}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <ContentPresenter x:Name="IconPresenter" MinWidth="25" MaxWidth="34" MaxHeight="34" Margin="0,0,8,0" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{ThemeResource PasswordBoxLeadingIconForeground}" Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />
              <ScrollViewer x:Name="ContentElement" Grid.Column="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsTabStop="False" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="Disabled">
                <ScrollViewer.RenderTransform>
                  <CompositeTransform x:Name="ContentTransform" />
                </ScrollViewer.RenderTransform>
              </ScrollViewer>
              <TextBlock x:Name="PlaceholderElement" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="{ThemeResource FilledPasswordBoxPlaceholderForeground}" IsHitTestVisible="False" RenderTransformOrigin="0,0.5" Text="{TemplateBinding PlaceholderText}">
                <TextBlock.RenderTransform>
                  <CompositeTransform x:Name="Transform" />
                </TextBlock.RenderTransform>
              </TextBlock>
              <Button x:Name="RevealButton" Grid.Column="2" MinWidth="34" MinHeight="34" VerticalAlignment="Stretch" AutomationProperties.AccessibilityView="Raw" IsTabStop="False" Foreground="{ThemeResource FilledPasswordBoxRevealButtonForeground}" Style="{StaticResource MaterialRevealButtonStyle}" Visibility="Collapsed" />
            </Grid>
            <Rectangle x:Name="NormalBorder" Grid.ColumnSpan="3" Height="{StaticResource TextBoxOutlinedStrokeHeight}" VerticalAlignment="Bottom" Fill="{TemplateBinding BorderBrush}" />
            <Rectangle x:Name="FocusedBorder" Grid.ColumnSpan="3" Height="{StaticResource TextBoxFocusStrokeWidth}" VerticalAlignment="Bottom" macos:RenderTransformOrigin="0.0,0.5" not_macos:RenderTransformOrigin="0.5,0.5" Fill="{ThemeResource FilledPasswordBoxBorderBrushFocused}">
              <Rectangle.RenderTransform>
                <ScaleTransform x:Name="Scale" ScaleX="0" />
              </Rectangle.RenderTransform>
            </Rectangle>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialOutlinedPasswordBoxStyle" TargetType="PasswordBox">
    <Setter Property="Background" Value="{ThemeResource OutlinedPasswordBoxBackground}" />
    <Setter Property="Foreground" Value="{ThemeResource OutlinedPasswordBoxForeground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource OutlinedPasswordBoxBorderBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource OutlinedPasswordBoxBorderThickness}" />
    <Setter Property="CornerRadius" Value="{ThemeResource OutlinedPasswordBoxCornerRadius}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="{ThemeResource OutlinedPasswordBoxPadding}" />
    <Setter Property="MinHeight" Value="{ThemeResource OutlinedPasswordBoxMinHeight}" />
    <!-- Start: Body Large Typo -->
    <Setter Property="FontFamily" Value="{ThemeResource OutlinedPasswordBoxFontFamily}" />
    <Setter Property="FontWeight" Value="{ThemeResource OutlinedPasswordBoxFontWeight}" />
    <Setter Property="FontSize" Value="{ThemeResource OutlinedPasswordBoxFontSize}" />
    <Setter Property="CharacterSpacing" Value="{ThemeResource OutlinedPasswordBoxCharacterSpacing}" />
    <!-- End: Body Large Typo -->
    <!-- Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388 -->
    <Setter Property="um:ControlExtensions.Icon" Value="{x:Null}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="PasswordBox">
          <Border x:Name="RootBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Padding="{ThemeResource OutlinedPasswordBoxBorderPadding}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="RootBorder.BorderBrush" Value="{ThemeResource OutlinedPasswordBoxBorderBrushPointerOver}" />
                    <Setter Target="ContentElement.Foreground" Value="{ThemeResource OutlinedPasswordBoxForegroundPointerOver}" />
                    <Setter Target="PlaceholderElement.Foreground" Value="{ThemeResource OutlinedPasswordBoxPlaceholderForegroundPointerOver}" />
                    <Setter Target="Root.Background" Value="{ThemeResource OutlinedPasswordBoxBackgroundPointerOver}" />
                    <Setter Target="RootBorder.BorderThickness" Value="{ThemeResource OutlinedPasswordBoxBorderThicknessPointerOver}" />
                    <Setter Target="RootBorder.Padding" Value="{ThemeResource OutlinedPasswordBoxBorderPaddingPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="RootBorder.BorderBrush" Value="{ThemeResource OutlinedPasswordBoxBorderBrushDisabled}" />
                    <!-- In this case the opacity is not applied to the brush directly - known issue for ContentElement -->
                    <Setter Target="ContentElement.Foreground" Value="{ThemeResource OutlinedPasswordBoxForegroundDisabled}" />
                    <Setter Target="ContentElement.Opacity" Value="{ThemeResource OutlinedPasswordBoxForegroundOpacityDisabled}" />
                    <Setter Target="PlaceholderElement.Foreground" Value="{ThemeResource OutlinedPasswordBoxPlaceholderForegroundDisabled}" />
                    <Setter Target="Root.Background" Value="{ThemeResource OutlinedPasswordBoxBackgroundDisabled}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource PasswordBoxLeadingIconForegroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="RootBorder.BorderBrush" Value="{ThemeResource OutlinedPasswordBoxBorderBrushFocused}" />
                    <Setter Target="ContentElement.Foreground" Value="{ThemeResource OutlinedPasswordBoxForegroundFocused}" />
                    <Setter Target="PlaceholderElement.Foreground" Value="{ThemeResource OutlinedPasswordBoxPlaceholderForegroundFocused}" />
                    <Setter Target="Root.Background" Value="{ThemeResource OutlinedPasswordBoxBackgroundFocused}" />
                    <Setter Target="RootBorder.BorderThickness" Value="{ThemeResource OutlinedPasswordBoxBorderThicknessFocused}" />
                    <Setter Target="RootBorder.Padding" Value="{ThemeResource OutlinedPasswordBoxBorderPaddingFocused}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ButtonStates">
                <VisualState x:Name="ButtonVisible">
                  <VisualState.Setters>
                    <Setter Target="RevealButton.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ButtonCollapsed" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="HeaderStates">
                <VisualState x:Name="NotEmpty">
                  <Storyboard>
                    <DoubleAnimation EasingFunction="{StaticResource MaterialEaseInOutFunction}" Storyboard.TargetName="Transform" Storyboard.TargetProperty="TranslateY" To="-11" Duration="{StaticResource MaterialTextBoxAnimationDuration}" />
                    <DoubleAnimation EasingFunction="{StaticResource MaterialEaseInOutFunction}" Storyboard.TargetName="ContentTransform" Storyboard.TargetProperty="TranslateY" To="8" Duration="{StaticResource MaterialTextBoxAnimationDuration}" />
                    <DoubleAnimation EasingFunction="{StaticResource MaterialEaseInOutFunction}" Storyboard.TargetName="Transform" Storyboard.TargetProperty="ScaleX" To="0.7" Duration="{StaticResource MaterialTextBoxAnimationDuration}" />
                    <DoubleAnimation EasingFunction="{StaticResource MaterialEaseInOutFunction}" Storyboard.TargetName="Transform" Storyboard.TargetProperty="ScaleY" To="0.7" Duration="{StaticResource MaterialTextBoxAnimationDuration}" />
                  </Storyboard>
                  <VisualState.StateTriggers>
                    <StateTrigger IsActive="{Binding Password, Converter={StaticResource MaterialEmptyToFalse}, RelativeSource={RelativeSource TemplatedParent}}" />
                  </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="Empty">
                  <VisualState.StateTriggers>
                    <StateTrigger IsActive="{Binding Password, Converter={StaticResource MaterialEmptyToTrue}, RelativeSource={RelativeSource TemplatedParent}}" />
                  </VisualState.StateTriggers>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="Root" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <ContentPresenter x:Name="IconPresenter" MinWidth="25" MaxWidth="34" MaxHeight="34" Margin="0,0,8,0" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{ThemeResource PasswordBoxLeadingIconForeground}" Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />
              <ScrollViewer x:Name="ContentElement" Grid.Column="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsTabStop="False" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="Disabled">
                <ScrollViewer.RenderTransform>
                  <CompositeTransform x:Name="ContentTransform" />
                </ScrollViewer.RenderTransform>
              </ScrollViewer>
              <TextBlock x:Name="PlaceholderElement" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="{ThemeResource OutlinedPasswordBoxPlaceholderForeground}" IsHitTestVisible="False" RenderTransformOrigin="0,0.5" Text="{TemplateBinding PlaceholderText}">
                <TextBlock.RenderTransform>
                  <CompositeTransform x:Name="Transform" />
                </TextBlock.RenderTransform>
              </TextBlock>
              <Button x:Name="RevealButton" Grid.Column="2" MinWidth="34" MinHeight="34" VerticalAlignment="Stretch" AutomationProperties.AccessibilityView="Raw" IsTabStop="False" Style="{StaticResource MaterialRevealButtonStyle}" Visibility="Collapsed" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialDefaultPasswordBoxStyle" TargetType="PasswordBox" BasedOn="{StaticResource MaterialOutlinedPasswordBoxStyle}" />
  <!--origin: Styles\Controls\v2\PipsPager.Base.xaml-->
  <Style x:Key="MaterialPipsPagerNavigationButtonBaseStyle" TargetType="Button">
    <Setter Property="Background" Value="{ThemeResource PipsPagerNavigationButtonBackground}" />
    <Setter Property="Foreground" Value="{ThemeResource PipsPagerNavigationButtonForeground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource PipsPagerNavigationButtonBorderBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource PipsPagerNavigationButtonBorderThickness}" />
    <Setter Property="UseSystemFocusVisuals" Value="{ThemeResource UseSystemFocusVisuals}" />
    <Setter Property="FocusVisualMargin" Value="0" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Width" Value="{ThemeResource PipsPagerNavigationButtonWidth}" />
    <Setter Property="Height" Value="{ThemeResource PipsPagerNavigationButtonHeight}" />
    <Setter Property="Padding" Value="{ThemeResource PipsPagerNavigationButtonPadding}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="RootGrid" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VisualStatesEllipse" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MaterialPipsPagerNavigationButtonVisualStateEllipseFillPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PipsPagerNavigationButtonForegroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PipsPagerNavigationButtonBackgroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PipsPagerNavigationButtonBorderBrushPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VisualStatesEllipse" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MaterialPipsPagerNavigationButtonVisualStateEllipseFillPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PipsPagerNavigationButtonForegroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PipsPagerNavigationButtonBackgroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PipsPagerNavigationButtonBorderBrushPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PipsPagerNavigationButtonForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PipsPagerNavigationButtonBackgroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PipsPagerNavigationButtonBorderBrushDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VisualStatesEllipse" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MaterialPipsPagerNavigationButtonVisualStateEllipseFillFocused}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Ellipse x:Name="VisualStatesEllipse" Height="{ThemeResource PipsPagerNavigationVisualStatesEllipseHeight}" Width="{ThemeResource PipsPagerNavigationVisualStatesEllipseWidth}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Fill="{ThemeResource MaterialPipsPagerNavigationButtonVisualStateEllipseFill}" AutomationProperties.AccessibilityView="Raw" />
            <Border Padding="{TemplateBinding Padding}" RenderTransformOrigin="0.5, 0.5" Background="{TemplateBinding Background}">
              <Border.RenderTransform>
                <ScaleTransform x:Name="ScaleTransform" ScaleY="1" ScaleX="1" />
              </Border.RenderTransform>
              <PathIcon x:Name="Content" Data="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" />
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialPipsPagerPreviousPageButtonStyle" TargetType="Button" BasedOn="{StaticResource MaterialPipsPagerNavigationButtonBaseStyle}">
    <Setter Property="Content" Value="{StaticResource PipsPagerPreviousPageButtonData}" />
    <Setter Property="VerticalContentAlignment" Value="Bottom" />
  </Style>
  <Style x:Key="MaterialPipsPagerNextPageButtonStyle" TargetType="Button" BasedOn="{StaticResource MaterialPipsPagerNavigationButtonBaseStyle}">
    <Setter Property="Content" Value="{StaticResource PipsPagerNextPageButtonData}" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
  </Style>
  <Style x:Key="MaterialPipsPagerButtonBaseStyle" TargetType="Button">
    <Setter Property="Background" Value="{ThemeResource PipsPagerSelectionIndicatorBackground}" />
    <Setter Property="Foreground" Value="{ThemeResource PipsPagerSelectionIndicatorForeground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource PipsPagerSelectionIndicatorBorderBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource PipsPagerButtonBorderThickness}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
    <Setter Property="FocusVisualMargin" Value="0" />
  </Style>
  <Style x:Key="MaterialPipsPagerSelectedPipButtonStyle" TargetType="Button" BasedOn="{StaticResource MaterialPipsPagerButtonBaseStyle}">
    <Setter Property="Foreground" Value="{ThemeResource PipsPagerSelectionIndicatorForegroundSelected}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="RootGrid" IsHitTestVisible="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Width="{ThemeResource PipsPagerHorizontalOrientationButtonWidth}" Height="{ThemeResource PipsPagerHorizontalOrientationButtonHeight}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VisualStatesEllipse" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MaterialPipsPagerVisualStateEllipseFillPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PipsPagerSelectionIndicatorBackgroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MainEllipse" Storyboard.TargetProperty="Stroke">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PipsPagerSelectionIndicatorBorderBrushPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VisualStatesEllipse" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MaterialPipsPagerVisualStateEllipseFillPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PipsPagerSelectionIndicatorBackgroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MainEllipse" Storyboard.TargetProperty="Stroke">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PipsPagerSelectionIndicatorBorderBrushPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MainEllipse" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PipsPagerSelectionIndicatorForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PipsPagerSelectionIndicatorBackgroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MainEllipse" Storyboard.TargetProperty="Stroke">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PipsPagerSelectionIndicatorBorderBrushDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VisualStatesEllipse" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MaterialPipsPagerVisualStateEllipseFillFocused}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="OrientationStates">
                <VisualState x:Name="HorizontalOrientation" />
                <VisualState x:Name="VerticalOrientation">
                  <VisualState.Setters>
                    <Setter Target="RootGrid.Width" Value="{ThemeResource PipsPagerVerticalOrientationButtonWidth}" />
                    <Setter Target="RootGrid.Height" Value="{ThemeResource PipsPagerVerticalOrientationButtonHeight}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Ellipse x:Name="VisualStatesEllipse" Height="{ThemeResource PipsPagerHorizontalOrientationButtonHeight}" Width="{ThemeResource PipsPagerHorizontalOrientationButtonWidth}" Fill="{ThemeResource MaterialPipsPagerVisualStateEllipseFill}" AutomationProperties.AccessibilityView="Raw" />
            <Ellipse x:Name="MainEllipse" Height="{ThemeResource PipsPagerSelectedEllipseSize}" Width="{ThemeResource PipsPagerSelectedEllipseSize}" Fill="{TemplateBinding Foreground}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialPipsPagerNormalPipButtonStyle" TargetType="Button" BasedOn="{StaticResource MaterialPipsPagerButtonBaseStyle}">
    <Setter Property="Foreground" Value="{ThemeResource PipsPagerSelectionIndicatorForeground}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="RootGrid" IsHitTestVisible="True" Background="{TemplateBinding Background}" Width="{ThemeResource PipsPagerHorizontalOrientationButtonWidth}" Height="{ThemeResource PipsPagerHorizontalOrientationButtonHeight}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MainEllipse" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PipsPagerSelectionIndicatorForegroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VisualStatesEllipse" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MaterialPipsPagerVisualStateEllipseFillPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PipsPagerSelectionIndicatorBackgroundPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MainEllipse" Storyboard.TargetProperty="Stroke">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PipsPagerSelectionIndicatorBorderBrushPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MainEllipse" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PipsPagerSelectionIndicatorForegroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VisualStatesEllipse" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MaterialPipsPagerVisualStateEllipseFillPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PipsPagerSelectionIndicatorBackgroundPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MainEllipse" Storyboard.TargetProperty="Stroke">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PipsPagerSelectionIndicatorBorderBrushPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MainEllipse" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PipsPagerSelectionIndicatorForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MainEllipse" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PipsPagerSelectionIndicatorForegroundFocused}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VisualStatesEllipse" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MaterialPipsPagerVisualStateEllipseFillFocused}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PipsPagerSelectionIndicatorBackgroundFocused}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MainEllipse" Storyboard.TargetProperty="Stroke">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PipsPagerSelectionIndicatorBorderBrushFocused}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="OrientationStates">
                <VisualState x:Name="HorizontalOrientation" />
                <VisualState x:Name="VerticalOrientation">
                  <VisualState.Setters>
                    <Setter Target="RootGrid.Width" Value="{ThemeResource PipsPagerVerticalOrientationButtonWidth}" />
                    <Setter Target="RootGrid.Height" Value="{ThemeResource PipsPagerVerticalOrientationButtonHeight}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Ellipse x:Name="MainEllipse" Height="{ThemeResource PipsPagerNormalEllipseSize}" Width="{ThemeResource PipsPagerNormalEllipseSize}" Fill="{TemplateBinding Foreground}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" />
            <Ellipse x:Name="VisualStatesEllipse" Height="{ThemeResource PipsPagerHorizontalOrientationButtonHeight}" Width="{ThemeResource PipsPagerHorizontalOrientationButtonWidth}" Fill="{ThemeResource MaterialPipsPagerVisualStateEllipseFill}" AutomationProperties.AccessibilityView="Raw" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="BaseMaterialPipsPagerStyle" TargetType="controls:PipsPager">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="PreviousButtonStyle" Value="{StaticResource MaterialPipsPagerPreviousPageButtonStyle}" />
    <Setter Property="NextButtonStyle" Value="{StaticResource MaterialPipsPagerNextPageButtonStyle}" />
    <!-- Uno already implemented the 2.8.0 MUX version of the control -->
    <!-- Uno.Themes reference is still on the MUX v2.6.0-prerelease.210113001 version for now -->
    <!-- Remove this file, PipsPager.UWP.xaml,and use <Setter Property=NormalPipStyle /> and <Setter Property=SelectedPipStyle /> only in PipsPager.xaml -->
    <!-- with the rest of the code, once we can bump the Microsoft.UI.Xaml version -->
    <not_win:Setter Property="SelectedPipStyle" Value="{StaticResource MaterialPipsPagerSelectedPipButtonStyle}" />
    <not_win:Setter Property="NormalPipStyle" Value="{StaticResource MaterialPipsPagerNormalPipButtonStyle}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:PipsPager">
          <StackPanel x:Name="RootPanel" Orientation="{TemplateBinding Orientation}" Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="PreviousPageButtonVisibilityStates">
                <VisualState x:Name="PreviousPageButtonVisible" />
                <VisualState x:Name="PreviousPageButtonHidden">
                  <VisualState.Setters>
                    <Setter Target="PreviousPageButton.Opacity" Value="0" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PreviousPageButtonCollapsed">
                  <VisualState.Setters>
                    <Setter Target="PreviousPageButton.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="PreviousPageButtonIsEnabledStates">
                <VisualState x:Name="PreviousPageButtonEnabled" />
                <VisualState x:Name="PreviousPageButtonDisabled">
                  <VisualState.Setters>
                    <Setter Target="PreviousPageButton.IsEnabled" Value="False" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="NextPageButtonVisibilityStates">
                <VisualState x:Name="NextPageButtonVisible" />
                <VisualState x:Name="NextPageButtonHidden">
                  <VisualState.Setters>
                    <Setter Target="NextPageButton.Opacity" Value="0" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NextPageButtonCollapsed">
                  <VisualState.Setters>
                    <Setter Target="NextPageButton.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="NextPageButtonIsEnabledStates">
                <VisualState x:Name="NextPageButtonEnabled" />
                <VisualState x:Name="NextPageButtonDisabled">
                  <VisualState.Setters>
                    <Setter Target="NextPageButton.IsEnabled" Value="False" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="RootPanelOrientationStates">
                <VisualState x:Name="VerticalOrientationView" />
                <VisualState x:Name="HorizontalOrientationView">
                  <VisualState.Setters>
                    <Setter Target="RootPanel.Orientation" Value="Horizontal" />
                    <Setter Target="PreviousPageButton.(ToolTipService.Placement)" Value="Left" />
                    <Setter Target="PreviousPageButton.RenderTransformOrigin" Value="0.5, 0.5" />
                    <Setter Target="PreviousPageButton.RenderTransform">
                      <Setter.Value>
                        <RotateTransform Angle="-90" />
                      </Setter.Value>
                    </Setter>
                    <Setter Target="NextPageButton.(ToolTipService.Placement)" Value="Right" />
                    <Setter Target="NextPageButton.RenderTransformOrigin" Value="0.5, 0.5" />
                    <Setter Target="NextPageButton.RenderTransform">
                      <Setter.Value>
                        <RotateTransform Angle="-90" />
                      </Setter.Value>
                    </Setter>
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Button x:Name="PreviousPageButton" ToolTipService.ToolTip="{Binding ElementName=PreviousPageButton, Path=(AutomationProperties.Name)}" ToolTipService.Placement="Top" Style="{TemplateBinding PreviousButtonStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" />
            <ScrollViewer x:Name="PipsPagerScrollViewer" VerticalScrollBarVisibility="Hidden" VerticalScrollMode="Disabled" HorizontalScrollBarVisibility="Hidden" HorizontalScrollMode="Disabled" IsHorizontalScrollChainingEnabled="False" IsVerticalScrollChainingEnabled="False" HorizontalAlignment="Center" VerticalAlignment="Center">
              <controls:ItemsRepeater x:Name="PipsPagerItemsRepeater" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.PipsPagerItems}">
                <controls:ItemsRepeater.Layout>
                  <controls:StackLayout Orientation="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Orientation}" />
                </controls:ItemsRepeater.Layout>
                <controls:ItemsRepeater.ItemTemplate>
                  <DataTemplate>
                    <Button />
                  </DataTemplate>
                </controls:ItemsRepeater.ItemTemplate>
              </controls:ItemsRepeater>
            </ScrollViewer>
            <Button x:Name="NextPageButton" ToolTipService.ToolTip="{Binding ElementName=NextPageButton, Path=(AutomationProperties.Name)}" ToolTipService.Placement="Bottom" Style="{TemplateBinding NextButtonStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!--origin: Styles\Controls\v2\PipsPager.xaml-->
  <Style x:Key="MaterialPipsPagerStyle" BasedOn="{StaticResource BaseMaterialPipsPagerStyle}" TargetType="controls:PipsPager">
    <!-- Uno already implemented the 2.8.0 MUX version of the control -->
    <!-- Uno.Themes reference is still on the MUX v2.6.0-prerelease.210113001 version for now -->
    <!-- Remove PipsPager.UWP.xaml, PipsPager.Base.xaml and use <Setter Property=NormalPipStyle /> and <Setter Property=SelectedPipStyle /> only, -->
    <!-- with all the rest in this file, once we can bump the Microsoft.UI.Xaml version -->
    <Setter Property="SelectedPipStyle" Value="{StaticResource MaterialPipsPagerSelectedPipButtonStyle}" />
    <Setter Property="NormalPipStyle" Value="{StaticResource MaterialPipsPagerNormalPipButtonStyle}" />
  </Style>
  <Style x:Key="MaterialDefaultPipsPagerStyle" TargetType="controls:PipsPager" BasedOn="{StaticResource MaterialPipsPagerStyle}" />
  <!--origin: Styles\Controls\v2\ProgressBar.xaml-->
  <Style x:Key="MaterialProgressBarStyle" TargetType="controls:ProgressBar">
    <Setter Property="Foreground" Value="{ThemeResource ProgressBarForeground}" />
    <Setter Property="Background" Value="{ThemeResource ProgressBarBackground}" />
    <Setter Property="MinWidth" Value="{ThemeResource ProgressBarMinWidth}" />
    <Setter Property="Height" Value="{ThemeResource ProgressBarHeight}" />
  </Style>
  <Style x:Key="MaterialDefaultProgressBarStyle" TargetType="controls:ProgressBar" BasedOn="{StaticResource MaterialProgressBarStyle}" />
  <!--origin: Styles\Controls\v2\ProgressRing.xaml-->
  <not_win:Style x:Key="MaterialProgressRingStyle" TargetType="controls:ProgressRing">
    <Setter Property="DeterminateSource" Value="{StaticResource MaterialDeterminateAnimation_Uno}" />
    <Setter Property="IndeterminateSource" Value="{StaticResource MaterialIndeterminateAnimation_Uno}" />
    <Setter Property="Foreground" Value="{ThemeResource ProgressRingForeground}" />
    <Setter Property="Background" Value="{ThemeResource ProgressRingBackground}" />
  </not_win:Style>
  <win:Style x:Key="MaterialProgressRingStyle" TargetType="controls:ProgressRing">
    <Setter Property="Foreground" Value="{ThemeResource ProgressRingForeground}" />
    <Setter Property="Background" Value="{ThemeResource ProgressRingBackground}" />
  </win:Style>
  <Style x:Key="MaterialDefaultProgressRingStyle" TargetType="controls:ProgressRing" BasedOn="{StaticResource MaterialProgressRingStyle}" />
  <!--origin: Styles\Controls\v2\RadioButton.xaml-->
  <um:FromBoolToValueConverter x:Key="RadioButtonIsCheckedStateCircleVisible" TrueValue="Visible" FalseValue="Collapsed" NullValue="Collapsed" />
  <um:FromBoolToValueConverter x:Key="RadioButtonIsCheckedToStateCircleCollapsed" TrueValue="Collapsed" FalseValue="Visible" NullValue="Collapsed" />
  <Style x:Key="MaterialRadioButtonStyle" TargetType="RadioButton">
    <Setter Property="Background" Value="{ThemeResource RadioButtonOuterEllipseCheckedStroke}" />
    <Setter Property="Foreground" Value="{ThemeResource RadioButtonForeground}" />
    <!-- Start: Body Small Typo -->
    <Setter Property="FontFamily" Value="{ThemeResource RadioButtonFontFamily}" />
    <Setter Property="FontWeight" Value="{ThemeResource RadioButtonFontWeight}" />
    <Setter Property="FontSize" Value="{ThemeResource RadioButtonFontSize}" />
    <Setter Property="CharacterSpacing" Value="{ThemeResource RadioButtonCharacterSpacing}" />
    <!-- End: Body Small Typo -->
    <Setter Property="Padding" Value="{ThemeResource RadioButtonPadding}" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="MinWidth" Value="{ThemeResource RadioButtonMinWidth}" />
    <Setter Property="MinHeight" Value="{ThemeResource RadioButtonMinHeight}" />
    <Setter Property="UseSystemFocusVisuals" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="RadioButton">
          <Grid x:Name="RootGrid" Background="Transparent">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <VisualState.Setters>
                    <Setter Target="OuterEllipse.Stroke" Value="{ThemeResource RadioButtonOuterEllipseStroke}" />
                    <Setter Target="OuterEllipse_Checked.Stroke" Value="{ThemeResource RadioButtonOuterEllipseCheckedStroke}" />
                    <Setter Target="CheckEllipse.Fill" Value="{ThemeResource RadioButtonOuterEllipseCheckedFill}" />
                    <Setter Target="CheckEllipse_Unchecked.Fill" Value="{ThemeResource RadioButtonOuterEllipseFill}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="UncheckedPointerStateCircle.Opacity" Value="{ThemeResource RadioButtonStateCircleOpacityPointerOver}" />
                    <Setter Target="CheckedPointerStateCircle.Opacity" Value="{ThemeResource RadioButtonStateCircleOpacityPointerOver}" />
                    <Setter Target="OuterEllipse.Stroke" Value="{ThemeResource RadioButtonOuterEllipseStrokePointerOver}" />
                    <Setter Target="OuterEllipse_Checked.Stroke" Value="{ThemeResource RadioButtonOuterEllipseCheckedStrokePointerOver}" />
                    <Setter Target="CheckEllipse.Fill" Value="{ThemeResource RadioButtonOuterEllipseCheckedFillPointerOver}" />
                    <Setter Target="CheckEllipse_Unchecked.Fill" Value="{ThemeResource RadioButtonOuterEllipseFillPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource RadioButtonForegroundPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="UncheckedPointerStateCircle.Opacity" Value="{ThemeResource RadioButtonStateCircleOpacityPressed}" />
                    <Setter Target="CheckedPointerStateCircle.Opacity" Value="{ThemeResource RadioButtonStateCircleOpacityPressed}" />
                    <Setter Target="OuterEllipse.Stroke" Value="{ThemeResource RadioButtonOuterEllipseStrokePressed}" />
                    <Setter Target="OuterEllipse_Checked.Stroke" Value="{ThemeResource RadioButtonOuterEllipseCheckedStrokePressed}" />
                    <Setter Target="CheckEllipse.Fill" Value="{ThemeResource RadioButtonOuterEllipseCheckedFillPressed}" />
                    <Setter Target="CheckEllipse_Unchecked.Fill" Value="{ThemeResource RadioButtonOuterEllipseFillPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource RadioButtonForegroundPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="OuterEllipse.Stroke" Value="{ThemeResource RadioButtonOuterEllipseStrokeDisabled}" />
                    <Setter Target="OuterEllipse_Checked.Stroke" Value="{ThemeResource RadioButtonOuterEllipseCheckedStrokeDisabled}" />
                    <Setter Target="CheckEllipse.Fill" Value="{ThemeResource RadioButtonOuterEllipseCheckedFillDisabled}" />
                    <Setter Target="CheckEllipse_Unchecked.Fill" Value="{ThemeResource RadioButtonOuterEllipseFillDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource RadioButtonForegroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualStateGroup.Transitions>
                  <VisualTransition To="PointerOver" GeneratedDuration="{StaticResource MaterialAnimationDuration}" GeneratedEasingFunction="{StaticResource MaterialEaseInOutFunction}" />
                  <VisualTransition To="Pressed" GeneratedDuration="{StaticResource MaterialAnimationDuration}" GeneratedEasingFunction="{StaticResource MaterialEaseInOutFunction}" />
                </VisualStateGroup.Transitions>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <VisualState.Setters>
                    <Setter Target="CheckEllipse.Opacity" Value="1" />
                    <Setter Target="OuterEllipse_Checked.Opacity" Value="1" />
                    <Setter Target="OuterEllipse.Opacity" Value="0" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Unchecked">
                  <VisualState.Setters>
                    <Setter Target="CheckEllipse_Unchecked.Opacity" Value="1" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Indeterminate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="UncheckedFocusStateCircle.Opacity" Value="{ThemeResource RadioButtonStateCircleOpacityFocused}" />
                    <Setter Target="CheckedFocusStateCircle.Opacity" Value="{ThemeResource RadioButtonStateCircleOpacityFocused}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerFocused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="{ThemeResource RadioButtonGridLength}" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Ellipse x:Name="UncheckedFocusStateCircle" HorizontalAlignment="Center" VerticalAlignment="Center" Width="{ThemeResource RadioButtonWidth}" Height="{ThemeResource RadioButtonHeight}" Fill="{ThemeResource RadioButtonStateCircleBackgroundUnchecked}" Visibility="{Binding IsChecked, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource RadioButtonIsCheckedToStateCircleCollapsed}, TargetNullValue=Collapsed, FallbackValue=Collapsed}" IsHitTestVisible="False" Opacity="0" />
            <Ellipse x:Name="CheckedFocusStateCircle" HorizontalAlignment="Center" VerticalAlignment="Center" Width="{ThemeResource RadioButtonWidth}" Height="{ThemeResource RadioButtonHeight}" Fill="{ThemeResource RadioButtonStateCircleBackgroundChecked}" Visibility="{Binding IsChecked, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource RadioButtonIsCheckedStateCircleVisible}, TargetNullValue=Collapsed, FallbackValue=Collapsed}" IsHitTestVisible="False" Opacity="0" />
            <Ellipse x:Name="UncheckedPointerStateCircle" HorizontalAlignment="Center" VerticalAlignment="Center" Width="{ThemeResource RadioButtonWidth}" Height="{ThemeResource RadioButtonHeight}" Fill="{ThemeResource RadioButtonStateCircleBackgroundUnchecked}" Visibility="{Binding IsChecked, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource RadioButtonIsCheckedToStateCircleCollapsed}, TargetNullValue=Collapsed, FallbackValue=Collapsed}" IsHitTestVisible="False" Opacity="0" />
            <Ellipse x:Name="CheckedPointerStateCircle" HorizontalAlignment="Center" VerticalAlignment="Center" Width="{ThemeResource RadioButtonWidth}" Height="{ThemeResource RadioButtonHeight}" Fill="{ThemeResource RadioButtonStateCircleBackgroundChecked}" Visibility="{Binding IsChecked, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource RadioButtonIsCheckedStateCircleVisible}, TargetNullValue=Collapsed, FallbackValue=Collapsed}" IsHitTestVisible="False" Opacity="0" />
            <Grid Height="{ThemeResource RadioButtonCheckGlyphSize}" Width="{ThemeResource RadioButtonCheckGlyphSize}">
              <Ellipse x:Name="OuterEllipse" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stretch="Fill" UseLayoutRounding="False" Stroke="{TemplateBinding Background}" StrokeThickness="{ThemeResource RadioButtonStrokeThickness}" />
              <Ellipse x:Name="OuterEllipse_Checked" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stretch="Fill" UseLayoutRounding="False" Stroke="{TemplateBinding Background}" StrokeThickness="{ThemeResource RadioButtonStrokeThickness}" Opacity="0" />
              <Ellipse x:Name="CheckEllipse_Unchecked" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stretch="Fill" UseLayoutRounding="False" Fill="{TemplateBinding Background}" Margin="{ThemeResource RadioButtonCheckEllipsePadding}" />
              <Ellipse x:Name="CheckEllipse" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stretch="Fill" UseLayoutRounding="False" Fill="{TemplateBinding Background}" Opacity="0" Margin="{ThemeResource RadioButtonCheckEllipsePadding}" />
            </Grid>
            <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" TextWrapping="Wrap" Grid.Column="1" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialDefaultRadioButtonStyle" TargetType="RadioButton" BasedOn="{StaticResource MaterialRadioButtonStyle}" />
  <!--origin: Styles\Controls\v2\RatingControl.xaml-->
  <Style x:Key="MaterialRatingControlStyle" TargetType="controls:RatingControl">
    <Setter Property="Height" Value="{ThemeResource RatingControlHeight}" />
    <!-- 9794813: retire these two properties as customisation points once all resource keys available -->
    <Setter Property="Foreground" Value="{ThemeResource RatingControlForeground}" />
    <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
    <Setter Property="FontFamily" Value="{ThemeResource RatingControlFontFamily}" />
    <not_win:Setter Property="ItemInfo" Value="{ThemeResource MUX_RatingControlDefaultFontInfo}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:RatingControl">
          <Grid x:Name="LayoutRoot">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="ForegroundContentPresenter.Foreground" Value="{ThemeResource RatingControlForegroundSelectedDisabled}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Placeholder">
                  <VisualState.Setters>
                    <Setter Target="ForegroundContentPresenter.Foreground" Value="{ThemeResource RatingControlPlaceholderForeground}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOverPlaceholder">
                  <VisualState.Setters>
                    <Setter Target="ForegroundContentPresenter.Foreground" Value="{ThemeResource RatingControlPlaceholderForegroundPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOverUnselected">
                  <VisualState.Setters>
                    <Setter Target="ForegroundContentPresenter.Foreground" Value="{ThemeResource RatingControlForegroundUnselectedPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Set">
                  <VisualState.Setters>
                    <Setter Target="ForegroundContentPresenter.Foreground" Value="{ThemeResource RatingControlForegroundSelected}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOverSet">
                  <VisualState.Setters>
                    <Setter Target="ForegroundContentPresenter.Foreground" Value="{ThemeResource RatingControlForegroundSelected}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <StackPanel Grid.Row="0" Margin="-20,-20,-20,-20" Orientation="Horizontal">
              <StackPanel x:Name="RatingBackgroundStackPanel" Margin="20,20,0,20" Background="Transparent" Orientation="Horizontal" />
              <TextBlock x:Name="Caption" Height="{ThemeResource RatingControlCaptionHeight}" Margin="4,9,20,0" VerticalAlignment="Center" AutomationProperties.AccessibilityView="Raw" AutomationProperties.Name="RatingCaption" Foreground="{ThemeResource RatingControlCaptionForeground}" FontFamily="{ThemeResource RatingControlCaptionFontFamily}" IsHitTestVisible="False" Style="{ThemeResource RatingControlCaptionStyle}" FontWeight="Bold" Text="{TemplateBinding Caption}" TextLineBounds="TrimToBaseline" />
              <!-- 4 = 8 item spacing +4 of magic redline spacing -8 to compensate for scale of the last RatingItem -->
              <!--
								NB: The redlines say 8px, but it's really 12 px because:
								Designer note: The value between the last glyph and first text character is 12px.
								(There's 4px of whitespace accounted for in the text area in the redline)
							-->
              <!-- TODO MSFT: 9925444 Fix vertical alignment in all text scenarios -->
            </StackPanel>
            <ContentPresenter x:Name="ForegroundContentPresenter" Grid.Row="0" IsHitTestVisible="False">
              <!-- Margin is on the StackPanel because ContentPresenter clips differently such that moving the reverse margin up won't work -->
              <StackPanel Margin="-40,-40,-40,-40" Orientation="Horizontal">
                <StackPanel x:Name="RatingForegroundStackPanel" Margin="40,40,40,40" IsHitTestVisible="False" Orientation="Horizontal" />
              </StackPanel>
            </ContentPresenter>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SecondaryRatingControlStyle" TargetType="controls:RatingControl" BasedOn="{StaticResource MaterialRatingControlStyle}">
    <Setter Property="Foreground" Value="{ThemeResource SecondaryRatingControlForeground}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:RatingControl">
          <Grid x:Name="LayoutRoot">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="ForegroundContentPresenter.Foreground" Value="{ThemeResource SecondaryRatingControlForegroundSelectedDisabled}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Placeholder">
                  <VisualState.Setters>
                    <Setter Target="ForegroundContentPresenter.Foreground" Value="{ThemeResource SecondaryRatingControlPlaceholderForeground}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOverPlaceholder">
                  <VisualState.Setters>
                    <Setter Target="ForegroundContentPresenter.Foreground" Value="{ThemeResource SecondaryRatingControlPlaceholderForegroundPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOverUnselected">
                  <VisualState.Setters>
                    <Setter Target="ForegroundContentPresenter.Foreground" Value="{ThemeResource SecondaryRatingControlForegroundUnselectedPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Set">
                  <VisualState.Setters>
                    <Setter Target="ForegroundContentPresenter.Foreground" Value="{ThemeResource SecondaryRatingControlForegroundSelected}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOverSet">
                  <VisualState.Setters>
                    <Setter Target="ForegroundContentPresenter.Foreground" Value="{ThemeResource SecondaryRatingControlForegroundSelected}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <StackPanel Grid.Row="0" Margin="-20,-20,-20,-20" Orientation="Horizontal">
              <StackPanel x:Name="RatingBackgroundStackPanel" Margin="20,20,0,20" Background="Transparent" Orientation="Horizontal" />
              <TextBlock x:Name="Caption" Height="{ThemeResource SecondaryRatingControlCaptionHeight}" Margin="4,9,20,0" VerticalAlignment="Center" AutomationProperties.AccessibilityView="Raw" AutomationProperties.Name="RatingCaption" Foreground="{ThemeResource SecondaryRatingControlCaptionForeground}" FontFamily="{ThemeResource SecondaryRatingControlCaptionFontFamily}" IsHitTestVisible="False" Style="{ThemeResource SecondaryRatingControlCaptionStyle}" FontWeight="Bold" Text="{TemplateBinding Caption}" TextLineBounds="TrimToBaseline" />
              <!-- 4 = 8 item spacing +4 of magic redline spacing -8 to compensate for scale of the last RatingItem -->
              <!--
								NB: The redlines say 8px, but it's really 12 px because:
								Designer note: The value between the last glyph and first text character is 12px.
								(There's 4px of whitespace accounted for in the text area in the redline)
							-->
              <!-- TODO MSFT: 9925444 Fix vertical alignment in all text scenarios -->
            </StackPanel>
            <ContentPresenter x:Name="ForegroundContentPresenter" Grid.Row="0" IsHitTestVisible="False">
              <!-- Margin is on the StackPanel because ContentPresenter clips differently such that moving the reverse margin up won't work -->
              <StackPanel Margin="-40,-40,-40,-40" Orientation="Horizontal">
                <StackPanel x:Name="RatingForegroundStackPanel" Margin="40,40,40,40" IsHitTestVisible="False" Orientation="Horizontal" />
              </StackPanel>
            </ContentPresenter>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialDefaultRatingControlStyle" TargetType="controls:RatingControl" BasedOn="{StaticResource MaterialRatingControlStyle}" />
  <!--origin: Styles\Controls\v2\Ripple.xaml-->
  <Style x:Key="MaterialRippleStyle" TargetType="um:Ripple">
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Feedback" Value="{ThemeResource BackgroundBrush}" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="um:Ripple">
          <Grid Background="Transparent" Margin="{TemplateBinding Margin}" CornerRadius="{TemplateBinding CornerRadius}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <!--Uncomment for hover effect-->
                <!--<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="ScaleTransform.ScaleX"
												Value="1" />
										<Setter Target="ScaleTransform.ScaleY"
												Value="1" />
										<Setter Target="ClickEllipse.Opacity"
												Value="0.75" />
									</VisualState.Setters>
								</VisualState>-->
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX" Duration="0:0:0.225" From="0" To="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=RippleSizeMultiplier}">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY" Duration="0:0:0.225" From="0" To="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=RippleSizeMultiplier}">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <win:DoubleAnimationUsingKeyFrames Storyboard.TargetName="ClickEllipse" Storyboard.TargetProperty="Opacity">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                          <CubicEase EasingMode="EaseIn" />
                        </EasingDoubleKeyFrame.EasingFunction>
                      </EasingDoubleKeyFrame>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.075" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                          <CubicEase EasingMode="EaseIn" />
                        </EasingDoubleKeyFrame.EasingFunction>
                      </EasingDoubleKeyFrame>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                          <CubicEase EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                      </EasingDoubleKeyFrame>
                      <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                          <CubicEase EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                      </EasingDoubleKeyFrame>
                    </win:DoubleAnimationUsingKeyFrames>
                    <not_win:DoubleAnimation Storyboard.TargetName="ClickEllipse" Storyboard.TargetProperty="Opacity" Duration="0:0:0.075" From="0" To="1">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </not_win:DoubleAnimation>
                    <not_win:DoubleAnimation Storyboard.TargetName="ClickEllipse" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" BeginTime="0:0:0.6" From="1" To="0">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseOut" />
                      </DoubleAnimation.EasingFunction>
                    </not_win:DoubleAnimation>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" ContentTransitions="{TemplateBinding ContentTransitions}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" />
            <Canvas IsHitTestVisible="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="{TemplateBinding FeedbackOpacity}">
              <Ellipse x:Name="ClickEllipse" Fill="{TemplateBinding Feedback}" Opacity="0" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=RippleSize}" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=RippleSize}" Canvas.Left="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=RippleX}" Canvas.Top="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=RippleY}" RenderTransformOrigin=".5,.5">
                <Ellipse.RenderTransform>
                  <ScaleTransform x:Name="ScaleTransform" ScaleX="0" ScaleY="0" />
                </Ellipse.RenderTransform>
              </Ellipse>
            </Canvas>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialDefaultRippleStyle" TargetType="um:Ripple" BasedOn="{StaticResource MaterialRippleStyle}" />
  <!--origin: Styles\Controls\v2\Slider.xaml-->
  <Style x:Key="MaterialSliderThumbStyle" TargetType="Thumb">
    <Setter Property="Background" Value="{ThemeResource SliderThumbBackground}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Thumb">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{ThemeResource SliderThumbCornerRadius}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialSliderStyle" TargetType="Slider">
    <Setter Property="Background" Value="{ThemeResource SliderTrackFill}" />
    <Setter Property="Foreground" Value="{ThemeResource SliderTrackValueFill}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="FontFamily" Value="{ThemeResource SliderFontFamily}" />
    <Setter Property="FontSize" Value="{ThemeResource SliderFontSize}" />
    <Setter Property="ManipulationMode" Value="None" />
    <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
    <Setter Property="FocusVisualMargin" Value="{ThemeResource SliderFocusVisualMargin}" />
    <Setter Property="IsFocusEngagementEnabled" Value="True" />
    <Setter Property="CornerRadius" Value="{ThemeResource SliderTrackCornerRadius}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Slider">
          <Grid Margin="{TemplateBinding Padding}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="VerticalDecreaseRect.Fill" Value="{ThemeResource SliderTrackValueFillDisabled}" />
                    <Setter Target="HorizontalDecreaseRect.Fill" Value="{ThemeResource SliderTrackValueFillDisabled}" />
                    <Setter Target="VerticalTrackRect.Fill" Value="{ThemeResource SliderTrackFillDisabled}" />
                    <Setter Target="HorizontalTrackRect.Fill" Value="{ThemeResource SliderTrackFillDisabled}" />
                    <Setter Target="HorizontalThumb.Background" Value="{ThemeResource SliderThumbBackgroundDisabled}" />
                    <Setter Target="VerticalThumb.Background" Value="{ThemeResource SliderThumbBackgroundDisabled}" />
                    <Setter Target="TopTickBar.Fill" Value="{ThemeResource SliderTickBarFillDisabled}" />
                    <Setter Target="BottomTickBar.Fill" Value="{ThemeResource SliderTickBarFillDisabled}" />
                    <Setter Target="LeftTickBar.Fill" Value="{ThemeResource SliderTickBarFillDisabled}" />
                    <Setter Target="RightTickBar.Fill" Value="{ThemeResource SliderTickBarFillDisabled}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOver" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusEngagementStates">
                <VisualState x:Name="FocusDisengaged" />
                <VisualState x:Name="FocusEngagedHorizontal">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SliderContainer" Storyboard.TargetProperty="(Control.IsTemplateFocusTarget)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="False" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalThumb" Storyboard.TargetProperty="(Control.IsTemplateFocusTarget)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="True" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="FocusEngagedVertical">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SliderContainer" Storyboard.TargetProperty="(Control.IsTemplateFocusTarget)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="False" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalThumb" Storyboard.TargetProperty="(Control.IsTemplateFocusTarget)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="True" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <!-- SliderContainer -->
            <Grid x:Name="SliderContainer" Grid.Row="1" Background="Transparent" Control.IsTemplateFocusTarget="True">
              <!-- HorizontalTemplate -->
              <Grid x:Name="HorizontalTemplate">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <!-- HorizontalTrackRect -->
                <Rectangle x:Name="HorizontalTrackRect" Grid.Row="1" Grid.ColumnSpan="3" Height="{ThemeResource SliderTrackThickness}" Fill="{TemplateBinding Background}" RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}" RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}" />
                <!-- HorizontalDecreaseRect -->
                <Border Grid.Row="1" Height="{ThemeResource SliderFillThickness}" CornerRadius="{ThemeResource SliderHorizontalFillCornerRadius}">
                  <Rectangle x:Name="HorizontalDecreaseRect" Fill="{TemplateBinding Foreground}" />
                </Border>
                <!-- TopTickBar -->
                <TickBar x:Name="TopTickBar" Grid.ColumnSpan="3" Height="{ThemeResource SliderTopTickBarHeight}" Margin="{ThemeResource SliderTopTickBarMargin}" VerticalAlignment="Bottom" Fill="{ThemeResource SliderTickBarFill}" Visibility="Collapsed" />
                <!-- HorizontalInlineTickBar -->
                <TickBar x:Name="HorizontalInlineTickBar" Grid.Row="1" Grid.ColumnSpan="3" Height="{ThemeResource SliderHorizontalInlineTickBarHeight}" Fill="{ThemeResource SliderInlineTickBarFill}" Visibility="Collapsed" />
                <!-- BottomTickBar -->
                <TickBar x:Name="BottomTickBar" Grid.Row="2" Grid.ColumnSpan="3" Height="{ThemeResource SliderBottomTickBarHeight}" Margin="{ThemeResource SliderBottomTickBarMargin}" VerticalAlignment="Top" Fill="{ThemeResource SliderTickBarFill}" Visibility="Collapsed" />
                <!-- HorizontalThumb -->
                <Thumb x:Name="HorizontalThumb" Grid.Row="0" Grid.RowSpan="3" Grid.Column="1" Width="{ThemeResource SliderThumbWidth}" Height="{ThemeResource SliderThumbHeight}" AutomationProperties.AccessibilityView="Raw" DataContext="{TemplateBinding Value}" FocusVisualMargin="{ThemeResource SliderHorizontalFocusVisualMargin}" Style="{StaticResource MaterialSliderThumbStyle}" />
              </Grid>
              <!-- VerticalTemplate -->
              <Grid x:Name="VerticalTemplate" Visibility="Collapsed">
                <Grid.RowDefinitions>
                  <RowDefinition Height="*" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <!-- VerticalTrackRect -->
                <Rectangle x:Name="VerticalTrackRect" Width="{ThemeResource SliderTrackThickness}" Grid.RowSpan="3" Grid.Column="1" Fill="{TemplateBinding Background}" RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}" RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}" />
                <!-- VerticalDecreaseRect -->
                <Border Grid.Row="2" Grid.Column="1" CornerRadius="{ThemeResource SliderVerticalFillCornerRadius}">
                  <Rectangle x:Name="VerticalDecreaseRect" Width="{ThemeResource SliderFillThickness}" Fill="{TemplateBinding Foreground}" />
                </Border>
                <!-- LeftTickBar -->
                <TickBar x:Name="LeftTickBar" Grid.RowSpan="3" Width="{ThemeResource SliderLeftTickBarWidth}" Margin="{ThemeResource SliderLeftTickBarMargin}" HorizontalAlignment="Right" Fill="{ThemeResource SliderTickBarFill}" Visibility="Collapsed" />
                <!-- VerticalInlineTickBar -->
                <TickBar x:Name="VerticalInlineTickBar" Grid.RowSpan="3" Grid.Column="1" Width="{ThemeResource SliderVerticalInlineTickBarWidth}" Fill="{ThemeResource SliderInlineTickBarFill}" Visibility="Collapsed" />
                <!-- RightTickBar -->
                <TickBar x:Name="RightTickBar" Grid.RowSpan="3" Grid.Column="2" Width="{ThemeResource SliderRightTickBarWidth}" Margin="{ThemeResource SliderRightTickBarMargin}" HorizontalAlignment="Left" Fill="{ThemeResource SliderTickBarFill}" Visibility="Collapsed" />
                <!-- VerticalThumb -->
                <Thumb x:Name="VerticalThumb" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Width="{ThemeResource SliderThumbWidth}" Height="{ThemeResource SliderThumbHeight}" AutomationProperties.AccessibilityView="Raw" DataContext="{TemplateBinding Value}" FocusVisualMargin="{ThemeResource SliderVerticalFocusVisualMargin}" Style="{StaticResource MaterialSliderThumbStyle}" />
              </Grid>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialDefaultSliderStyle" TargetType="Slider" BasedOn="{StaticResource MaterialSliderStyle}" />
  <!--origin: Styles\Controls\v2\TextBlock.xaml-->
  <Style x:Key="MaterialBaseTextBlockStyle" TargetType="TextBlock">
    <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    <Setter Property="TextWrapping" Value="Wrap" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="FontFamily" Value="{ThemeResource MaterialRegularFontFamily}" />
  </Style>
  <Style x:Key="MaterialDisplayLarge" BasedOn="{StaticResource MaterialBaseTextBlockStyle}" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{ThemeResource DisplayLargeFontFamily}" />
    <Setter Property="FontWeight" Value="{ThemeResource DisplayLargeFontWeight}" />
    <Setter Property="FontSize" Value="{ThemeResource DisplayLargeFontSize}" />
    <Setter Property="CharacterSpacing" Value="{ThemeResource DisplayLargeCharacterSpacing}" />
  </Style>
  <Style x:Key="MaterialDisplayMedium" BasedOn="{StaticResource MaterialBaseTextBlockStyle}" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{ThemeResource DisplayMediumFontFamily}" />
    <Setter Property="FontWeight" Value="{ThemeResource DisplayMediumFontWeight}" />
    <Setter Property="FontSize" Value="{ThemeResource DisplayMediumFontSize}" />
  </Style>
  <Style x:Key="MaterialDisplaySmall" BasedOn="{StaticResource MaterialBaseTextBlockStyle}" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{ThemeResource DisplaySmallFontFamily}" />
    <Setter Property="FontWeight" Value="{ThemeResource DisplaySmallFontWeight}" />
    <Setter Property="FontSize" Value="{ThemeResource DisplaySmallFontSize}" />
  </Style>
  <Style x:Key="MaterialHeadlineLarge" BasedOn="{StaticResource MaterialBaseTextBlockStyle}" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{ThemeResource HeadlineLargeFontFamily}" />
    <Setter Property="FontWeight" Value="{ThemeResource HeadlineLargeFontWeight}" />
    <Setter Property="FontSize" Value="{ThemeResource HeadlineLargeFontSize}" />
  </Style>
  <Style x:Key="MaterialHeadlineMedium" BasedOn="{StaticResource MaterialBaseTextBlockStyle}" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{ThemeResource HeadlineMediumFontFamily}" />
    <Setter Property="FontWeight" Value="{ThemeResource HeadlineMediumFontWeight}" />
    <Setter Property="FontSize" Value="{ThemeResource HeadlineMediumFontSize}" />
  </Style>
  <Style x:Key="MaterialHeadlineSmall" BasedOn="{StaticResource MaterialBaseTextBlockStyle}" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{ThemeResource HeadlineSmallFontFamily}" />
    <Setter Property="FontWeight" Value="{ThemeResource HeadlineSmallFontWeight}" />
    <Setter Property="FontSize" Value="{ThemeResource HeadlineSmallFontSize}" />
  </Style>
  <Style x:Key="MaterialTitleLarge" BasedOn="{StaticResource MaterialBaseTextBlockStyle}" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{ThemeResource TitleLargeFontFamily}" />
    <Setter Property="FontWeight" Value="{ThemeResource TitleLargeFontWeight}" />
    <Setter Property="FontSize" Value="{ThemeResource TitleLargeFontSize}" />
  </Style>
  <Style x:Key="MaterialTitleMedium" BasedOn="{StaticResource MaterialBaseTextBlockStyle}" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{ThemeResource TitleMediumFontFamily}" />
    <Setter Property="FontWeight" Value="{ThemeResource TitleMediumFontWeight}" />
    <Setter Property="FontSize" Value="{ThemeResource TitleMediumFontSize}" />
  </Style>
  <Style x:Key="MaterialTitleSmall" BasedOn="{StaticResource MaterialBaseTextBlockStyle}" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{ThemeResource TitleSmallFontFamily}" />
    <Setter Property="FontWeight" Value="{ThemeResource TitleSmallFontWeight}" />
    <Setter Property="FontSize" Value="{ThemeResource TitleSmallFontSize}" />
  </Style>
  <Style x:Key="MaterialLabelLarge" BasedOn="{StaticResource MaterialBaseTextBlockStyle}" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{ThemeResource LabelLargeFontFamily}" />
    <Setter Property="FontWeight" Value="{ThemeResource LabelLargeFontWeight}" />
    <Setter Property="FontSize" Value="{ThemeResource LabelLargeFontSize}" />
    <Setter Property="CharacterSpacing" Value="{ThemeResource LabelLargeCharacterSpacing}" />
  </Style>
  <Style x:Key="MaterialLabelMedium" BasedOn="{StaticResource MaterialBaseTextBlockStyle}" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{ThemeResource LabelMediumFontFamily}" />
    <Setter Property="FontWeight" Value="{ThemeResource LabelMediumFontWeight}" />
    <Setter Property="FontSize" Value="{ThemeResource LabelMediumFontSize}" />
    <Setter Property="CharacterSpacing" Value="{ThemeResource LabelMediumCharacterSpacing}" />
  </Style>
  <Style x:Key="MaterialLabelSmall" BasedOn="{StaticResource MaterialBaseTextBlockStyle}" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{ThemeResource LabelSmallFontFamily}" />
    <Setter Property="FontWeight" Value="{ThemeResource LabelSmallFontWeight}" />
    <Setter Property="FontSize" Value="{ThemeResource LabelSmallFontSize}" />
    <Setter Property="CharacterSpacing" Value="{ThemeResource LabelSmallCharacterSpacing}" />
  </Style>
  <Style x:Key="MaterialLabelExtraSmall" BasedOn="{StaticResource MaterialBaseTextBlockStyle}" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{ThemeResource LabelExtraSmallFontFamily}" />
    <Setter Property="FontWeight" Value="{ThemeResource LabelExtraSmallFontWeight}" />
    <Setter Property="FontSize" Value="{ThemeResource LabelExtraSmallFontSize}" />
    <Setter Property="CharacterSpacing" Value="{ThemeResource LabelExtraSmallCharacterSpacing}" />
  </Style>
  <Style x:Key="MaterialBodyLarge" BasedOn="{StaticResource MaterialBaseTextBlockStyle}" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{ThemeResource BodyLargeFontFamily}" />
    <Setter Property="FontWeight" Value="{ThemeResource BodyLargeFontWeight}" />
    <Setter Property="FontSize" Value="{ThemeResource BodyLargeFontSize}" />
    <Setter Property="CharacterSpacing" Value="{ThemeResource BodyLargeCharacterSpacing}" />
  </Style>
  <Style x:Key="MaterialBodyMedium" BasedOn="{StaticResource MaterialBaseTextBlockStyle}" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{ThemeResource BodyMediumFontFamily}" />
    <Setter Property="FontWeight" Value="{ThemeResource BodyMediumFontWeight}" />
    <Setter Property="FontSize" Value="{ThemeResource BodyMediumFontSize}" />
    <Setter Property="CharacterSpacing" Value="{ThemeResource BodyMediumCharacterSpacing}" />
  </Style>
  <Style x:Key="MaterialBodySmall" BasedOn="{StaticResource MaterialBaseTextBlockStyle}" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{ThemeResource BodySmallFontFamily}" />
    <Setter Property="FontWeight" Value="{ThemeResource BodySmallFontWeight}" />
    <Setter Property="FontSize" Value="{ThemeResource BodySmallFontSize}" />
    <Setter Property="CharacterSpacing" Value="{ThemeResource BodySmallCharacterSpacing}" />
  </Style>
  <Style x:Key="MaterialCaptionLarge" BasedOn="{StaticResource MaterialBaseTextBlockStyle}" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{ThemeResource CaptionLargeFontFamily}" />
    <Setter Property="FontWeight" Value="{ThemeResource CaptionLargeFontWeight}" />
    <Setter Property="FontSize" Value="{ThemeResource CaptionLargeFontSize}" />
    <Setter Property="CharacterSpacing" Value="{ThemeResource CaptionLargeCharacterSpacing}" />
  </Style>
  <Style x:Key="MaterialCaptionMedium" BasedOn="{StaticResource MaterialBaseTextBlockStyle}" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{ThemeResource CaptionMediumFontFamily}" />
    <Setter Property="FontWeight" Value="{ThemeResource CaptionMediumFontWeight}" />
    <Setter Property="FontSize" Value="{ThemeResource CaptionMediumFontSize}" />
    <Setter Property="CharacterSpacing" Value="{ThemeResource CaptionMediumCharacterSpacing}" />
  </Style>
  <Style x:Key="MaterialCaptionSmall" BasedOn="{StaticResource MaterialBaseTextBlockStyle}" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{ThemeResource CaptionSmallFontFamily}" />
    <Setter Property="FontWeight" Value="{ThemeResource CaptionSmallFontWeight}" />
    <Setter Property="FontSize" Value="{ThemeResource CaptionSmallFontSize}" />
    <Setter Property="CharacterSpacing" Value="{ThemeResource CaptionSmallCharacterSpacing}" />
  </Style>
  <Style x:Key="MaterialDefaultTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource MaterialBodyMedium}" />
  <!--origin: Styles\Controls\v2\TextBox.xaml-->
  <um:FromEmptyStringToValueConverter x:Key="EmptyToCompositeTransformTranslateY" NotNullOrEmptyValue="8" NullOrEmptyValue="0" />
  <x:String x:Key="MaterialTextBoxClearGlyphData">M14.9482 6.46442L13.534 5.05021L9.99849 8.58574L6.46296 5.05021L5.04874 6.46442L8.58428 9.99995L5.04874 13.5355L6.46296 14.9497L9.99849 11.4142L13.534 14.9497L14.9482 13.5355L11.4127 9.99995L14.9482 6.46442ZM17.0696 2.92889C13.1663 -0.974342 6.83065 -0.974342 2.92742 2.92889C-0.975807 6.83212 -0.975807 13.1678 2.92742 17.071C6.83065 20.9743 13.1663 20.9743 17.0696 17.071C20.9728 13.1678 20.9728 6.83212 17.0696 2.92889ZM4.34164 15.6568C1.22329 12.5385 1.22329 7.46144 4.34164 4.3431C7.45998 1.22476 12.537 1.22476 15.6553 4.3431C18.7737 7.46144 18.7737 12.5385 15.6553 15.6568C12.537 18.7752 7.45998 18.7752 4.34164 15.6568Z</x:String>
  <Style x:Key="MaterialDeleteButtonStyle" TargetType="Button">
    <Setter Property="Foreground" Value="{ThemeResource TextBoxDeleteButtonForeground}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="ButtonLayoutGrid" Background="Transparent">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="GlyphElement.Fill" Value="{ThemeResource TextBoxDeleteButtonForegroundPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="GlyphElement.Fill" Value="{ThemeResource TextBoxDeleteButtonForegroundPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="GlyphElement.Fill" Value="{ThemeResource TextBoxDeleteButtonForegroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Path x:Name="GlyphElement" Data="{ThemeResource MaterialTextBoxClearGlyphData}" Fill="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Uniform" Width="{ThemeResource MaterialTextBoxClearGlyphWidth}" Height="{ThemeResource MaterialTextBoxClearGlyphHeight}" AutomationProperties.AccessibilityView="Raw" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialFilledTextBoxStyle" TargetType="TextBox">
    <Setter Property="Foreground" Value="{ThemeResource FilledTextBoxForeground}" />
    <Setter Property="PlaceholderForeground" Value="{ThemeResource FilledTextBoxPlaceholderForeground}" />
    <Setter Property="Background" Value="{ThemeResource FilledTextBoxBackground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource FilledTextBoxBorderBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="CornerRadius" Value="{ThemeResource MaterialFilledTextBoxCornerRadius}" />
    <!-- Start: Body Large Typo -->
    <Setter Property="FontFamily" Value="{ThemeResource FilledTextBoxFontFamily}" />
    <Setter Property="FontWeight" Value="{ThemeResource FilledTextBoxFontWeight}" />
    <Setter Property="FontSize" Value="{ThemeResource FilledTextBoxFontSize}" />
    <Setter Property="CharacterSpacing" Value="{ThemeResource FilledTextBoxCharacterSpacing}" />
    <!-- End: Body Large Typo -->
    <macos:Setter Property="Padding" Value="{ThemeResource MaterialFilledTextBoxPadding}" />
    <not_macos:Setter Property="Padding" Value="{ThemeResource MaterialFilledTextBoxPadding}" />
    <Setter Property="MinHeight" Value="{ThemeResource MaterialFilledTextBoxMinHeight}" />
    <!-- Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388 -->
    <Setter Property="um:ControlExtensions.Icon" Value="{x:Null}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TextBox">
          <Grid x:Name="Root" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="NormalBorder.Fill" Value="{ThemeResource FilledTextBoxBorderBrushPointerOver}" />
                    <Setter Target="Root.Background" Value="{ThemeResource FilledTextBoxBackgroundPointerOver}" />
                    <Setter Target="PlaceholderElement.Foreground" Value="{ThemeResource FilledTextBoxPlaceholderForegroundPointerOver}" />
                    <Setter Target="ContentElement.Foreground" Value="{ThemeResource FilledTextBoxForegroundPointerOver}" />
                    <Setter Target="DeleteButton.Foreground" Value="{ThemeResource FilledTextBoxDeleteButtonForegroundPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="NormalBorder.Fill" Value="{ThemeResource FilledTextBoxBorderBrushDisabled}" />
                    <!-- In this case the opacity is not applied to the brush directly - known issue for ContentElement -->
                    <Setter Target="ContentElement.Foreground" Value="{ThemeResource FilledTextBoxForegroundDisabled}" />
                    <Setter Target="ContentElement.Opacity" Value="{ThemeResource FilledTextBoxForegroundOpacityDisabled}" />
                    <Setter Target="PlaceholderElement.Foreground" Value="{ThemeResource FilledTextBoxPlaceholderForegroundDisabled}" />
                    <Setter Target="Root.Background" Value="{ThemeResource FilledTextBoxBackgroundDisabled}" />
                    <Setter Target="DeleteButton.Foreground" Value="{ThemeResource FilledTextBoxDeleteButtonForegroundDisabled}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource TextBoxLeadingIconForegroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="PlaceholderElement.Foreground" Value="{ThemeResource FilledTextBoxPlaceholderForegroundFocused}" />
                    <Setter Target="NormalBorder.Height" Value="{ThemeResource MaterialFilledTextBoxBorderHeightFocused}" />
                    <Setter Target="NormalBorder.Fill" Value="{ThemeResource FilledTextBoxBorderBrushFocused}" />
                    <Setter Target="Root.Background" Value="{ThemeResource FilledTextBoxBackgroundFocused}" />
                    <Setter Target="ContentElement.Foreground" Value="{ThemeResource FilledTextBoxForegroundFocused}" />
                    <Setter Target="DeleteButton.Foreground" Value="{ThemeResource FilledTextBoxDeleteButtonForegroundFocused}" />
                  </VisualState.Setters>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="FocusedBorder_ScaleTransform" Storyboard.TargetProperty="ScaleX" Duration="{StaticResource MaterialAnimationDuration}" EasingFunction="{StaticResource MaterialEaseInOutFunction}" To="1" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ButtonStates">
                <VisualState x:Name="ButtonVisible">
                  <VisualState.Setters>
                    <Setter Target="DeleteButton.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ButtonCollapsed" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="HeaderStates">
                <VisualState x:Name="NotEmpty">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PlaceholderElement_CompositeTransform" Storyboard.TargetProperty="TranslateY" Duration="{StaticResource MaterialTextBoxAnimationDuration}" EasingFunction="{StaticResource MaterialEaseInOutFunction}" To="-11" />
                    <!-- ContentElement TranslateY value changing depending if there is a PlaceholderText or not -->
                    <DoubleAnimation Storyboard.TargetName="ContentElement_CompositeTransform" Storyboard.TargetProperty="TranslateY" Duration="{StaticResource MaterialAnimationDuration}" EasingFunction="{StaticResource MaterialEaseInOutFunction}" To="{Binding PlaceholderText, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EmptyToCompositeTransformTranslateY}, TargetNullValue=0, FallbackValue=0}" />
                    <DoubleAnimation Storyboard.TargetName="PlaceholderElement_CompositeTransform" Storyboard.TargetProperty="ScaleX" Duration="{StaticResource MaterialTextBoxAnimationDuration}" EasingFunction="{StaticResource MaterialEaseInOutFunction}" To="0.7" />
                    <DoubleAnimation Storyboard.TargetName="PlaceholderElement_CompositeTransform" Storyboard.TargetProperty="ScaleY" Duration="{StaticResource MaterialTextBoxAnimationDuration}" EasingFunction="{StaticResource MaterialEaseInOutFunction}" To="0.7" />
                  </Storyboard>
                  <VisualState.StateTriggers>
                    <StateTrigger IsActive="{Binding Text, Converter={StaticResource MaterialEmptyToFalse}, RelativeSource={RelativeSource TemplatedParent}}" />
                  </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="Empty">
                  <VisualState.StateTriggers>
                    <StateTrigger IsActive="{Binding Text, Converter={StaticResource MaterialEmptyToTrue}, RelativeSource={RelativeSource TemplatedParent}}" />
                  </VisualState.StateTriggers>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Padding="{TemplateBinding Padding}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <!-- Border in place to properly vertically center the icon inside when it's a one-line TextBox -->
              <!-- but keep it in the same place and at the top when it's a multiline TextBox -->
              <Border Height="26" VerticalAlignment="Top" Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
                <ContentPresenter x:Name="IconPresenter" Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center" Margin="0,0,8,0" MaxHeight="34" MaxWidth="34" MinWidth="25" Foreground="{ThemeResource TextBoxLeadingIconForeground}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
              </Border>
              <ScrollViewer x:Name="ContentElement" Grid.Column="1" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsTabStop="False" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" ZoomMode="Disabled" AutomationProperties.AccessibilityView="Raw">
                <ScrollViewer.RenderTransform>
                  <CompositeTransform x:Name="ContentElement_CompositeTransform" />
                </ScrollViewer.RenderTransform>
              </ScrollViewer>
              <!-- Border in place to properly vertically center the placeholder inside when it's a one-line TextBox -->
              <!-- but keep it in the same place and at the top when it's a multiline TextBox -->
              <Border Grid.Column="1" Height="26" VerticalAlignment="Top">
                <TextBlock x:Name="PlaceholderElement" Foreground="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" RenderTransformOrigin="0,0.5" Text="{TemplateBinding PlaceholderText}" TextAlignment="{TemplateBinding TextAlignment}" TextWrapping="{TemplateBinding TextWrapping}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                  <TextBlock.RenderTransform>
                    <CompositeTransform x:Name="PlaceholderElement_CompositeTransform" />
                  </TextBlock.RenderTransform>
                </TextBlock>
              </Border>
              <Button x:Name="DeleteButton" Grid.Column="2" Margin="8,0,0,0" Foreground="{ThemeResource FilledTextBoxDeleteButtonForeground}" IsTabStop="False" Style="{StaticResource MaterialDeleteButtonStyle}" VerticalAlignment="Stretch" Visibility="Collapsed" AutomationProperties.AccessibilityView="Raw" />
            </Grid>
            <Rectangle x:Name="NormalBorder" Fill="{TemplateBinding BorderBrush}" Height="{ThemeResource FilledTextBoxBorderThicknessNormal}" VerticalAlignment="Bottom" />
            <Rectangle x:Name="FocusedBorder" Fill="{ThemeResource FilledTextBoxBorderBrushFocused}" Height="{ThemeResource FilledTextBoxBorderThicknessFocused}" VerticalAlignment="Bottom" not_macos:RenderTransformOrigin="0.5,0.5" macos:RenderTransformOrigin="0.0,0.5">
              <Rectangle.RenderTransform>
                <ScaleTransform x:Name="FocusedBorder_ScaleTransform" ScaleX="0" />
              </Rectangle.RenderTransform>
            </Rectangle>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialOutlinedTextBoxStyle" TargetType="TextBox">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Foreground" Value="{ThemeResource OutlinedTextBoxForeground}" />
    <Setter Property="PlaceholderForeground" Value="{ThemeResource OutlinedTextBoxPlaceholderForeground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource OutlinedTextBoxBorderBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource MaterialOutlinedTextBoxBorderThickness}" />
    <Setter Property="CornerRadius" Value="{ThemeResource MaterialOutlinedTextBoxCornerRadius}" />
    <!-- Start: Body Large Typo -->
    <Setter Property="FontFamily" Value="{ThemeResource OutlinedTextBoxFontFamily}" />
    <Setter Property="FontWeight" Value="{ThemeResource OutlinedTextBoxFontWeight}" />
    <Setter Property="FontSize" Value="{ThemeResource OutlinedTextBoxFontSize}" />
    <Setter Property="CharacterSpacing" Value="{ThemeResource OutlinedTextBoxCharacterSpacing}" />
    <!-- End: Body Large Typo -->
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <macos:Setter Property="Padding" Value="{ThemeResource MaterialOutlinedTextBoxPadding}" />
    <not_macos:Setter Property="Padding" Value="{ThemeResource MaterialOutlinedTextBoxPadding}" />
    <Setter Property="MinHeight" Value="{ThemeResource MaterialOutlinedTextBoxMinHeight}" />
    <!-- Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388 -->
    <Setter Property="um:ControlExtensions.Icon" Value="{x:Null}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TextBox">
          <Border x:Name="RootBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Padding="{ThemeResource MaterialOutlinedTextBoxBorderPadding}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="RootBorder.BorderBrush" Value="{ThemeResource OutlinedTextBoxBorderBrushPointerOver}" />
                    <Setter Target="ContentElement.Foreground" Value="{ThemeResource OutlinedTextBoxForegroundPointerOver}" />
                    <Setter Target="PlaceholderElement.Foreground" Value="{ThemeResource OutlinedTextBoxPlaceholderForegroundPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="RootBorder.BorderBrush" Value="{ThemeResource OutlinedTextBoxBorderBrushDisabled}" />
                    <!-- In this case the opacity is not applied to the brush directly - known issue for ContentElement -->
                    <Setter Target="ContentElement.Foreground" Value="{ThemeResource OutlinedTextBoxForegroundDisabled}" />
                    <Setter Target="ContentElement.Opacity" Value="{ThemeResource OutlinedTextBoxForegroundOpacityDisabled}" />
                    <Setter Target="PlaceholderElement.Foreground" Value="{ThemeResource OutlinedTextBoxPlaceholderForegroundDisabled}" />
                    <Setter Target="IconPresenter.Foreground" Value="{ThemeResource TextBoxLeadingIconForegroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <!-- ICI -->
                    <Setter Target="RootBorder.BorderBrush" Value="{ThemeResource OutlinedTextBoxBorderBrushFocused}" />
                    <Setter Target="ContentElement.Foreground" Value="{ThemeResource OutlinedTextBoxForegroundFocused}" />
                    <Setter Target="PlaceholderElement.Foreground" Value="{ThemeResource OutlinedTextBoxPlaceholderForegroundFocused}" />
                    <Setter Target="RootBorder.BorderThickness" Value="{ThemeResource MaterialOutlinedTextBoxBorderThicknessFocused}" />
                    <Setter Target="RootBorder.Padding" Value="0" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ButtonStates">
                <VisualState x:Name="ButtonVisible">
                  <VisualState.Setters>
                    <Setter Target="DeleteButton.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ButtonCollapsed" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="HeaderStates">
                <VisualState x:Name="NotEmpty">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PlaceholderElement_CompositeTransform" Storyboard.TargetProperty="TranslateY" Duration="{StaticResource MaterialTextBoxAnimationDuration}" EasingFunction="{StaticResource MaterialEaseInOutFunction}" To="-11" />
                    <!-- ContentElement TranslateY value changing depending if there is a PlaceholderText or not -->
                    <DoubleAnimation Storyboard.TargetName="ContentElement_CompositeTransform" Storyboard.TargetProperty="TranslateY" Duration="{StaticResource MaterialAnimationDuration}" EasingFunction="{StaticResource MaterialEaseInOutFunction}" To="{Binding PlaceholderText, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EmptyToCompositeTransformTranslateY}, TargetNullValue=0, FallbackValue=0}" />
                    <DoubleAnimation Storyboard.TargetName="PlaceholderElement_CompositeTransform" Storyboard.TargetProperty="ScaleX" Duration="{StaticResource MaterialTextBoxAnimationDuration}" EasingFunction="{StaticResource MaterialEaseInOutFunction}" To="0.7" />
                    <DoubleAnimation Storyboard.TargetName="PlaceholderElement_CompositeTransform" Storyboard.TargetProperty="ScaleY" Duration="{StaticResource MaterialTextBoxAnimationDuration}" EasingFunction="{StaticResource MaterialEaseInOutFunction}" To="0.7" />
                  </Storyboard>
                  <VisualState.StateTriggers>
                    <StateTrigger IsActive="{Binding Text, Converter={StaticResource MaterialEmptyToFalse}, RelativeSource={RelativeSource TemplatedParent}}" />
                  </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="Empty">
                  <VisualState.StateTriggers>
                    <StateTrigger IsActive="{Binding Text, Converter={StaticResource MaterialEmptyToTrue}, RelativeSource={RelativeSource TemplatedParent}}" />
                  </VisualState.StateTriggers>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="Root" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <!-- Border in place to properly vertically center the icon inside when it's a one-line TextBox -->
              <!-- but keep it in the same place and at the top when it's a multiline TextBox -->
              <Border Height="20" VerticalAlignment="Top">
                <ContentPresenter x:Name="IconPresenter" Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center" Width="20" Margin="1,0,18,0" Foreground="{ThemeResource TextBoxLeadingIconForeground}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />
              </Border>
              <ScrollViewer x:Name="ContentElement" Grid.Column="1" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsTabStop="False" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" ZoomMode="Disabled" AutomationProperties.AccessibilityView="Raw">
                <ScrollViewer.RenderTransform>
                  <CompositeTransform x:Name="ContentElement_CompositeTransform" />
                </ScrollViewer.RenderTransform>
              </ScrollViewer>
              <!-- Border in place to properly vertically center the placeholder inside when it's a one-line TextBox -->
              <!-- but keep it in the same place and at the top when it's a multiline TextBox -->
              <Border Grid.Column="1" Height="20" VerticalAlignment="Top">
                <TextBlock x:Name="PlaceholderElement" Foreground="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" RenderTransformOrigin="0,0.5" Text="{TemplateBinding PlaceholderText}" TextAlignment="{TemplateBinding TextAlignment}" TextWrapping="{TemplateBinding TextWrapping}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                  <TextBlock.RenderTransform>
                    <CompositeTransform x:Name="PlaceholderElement_CompositeTransform" />
                  </TextBlock.RenderTransform>
                </TextBlock>
              </Border>
              <Button x:Name="DeleteButton" Grid.Column="2" Margin="8,0,0,0" IsTabStop="False" Style="{StaticResource MaterialDeleteButtonStyle}" VerticalAlignment="Stretch" Visibility="Collapsed" AutomationProperties.AccessibilityView="Raw" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialDefaultTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource MaterialOutlinedTextBoxStyle}" />
  <!--origin: Styles\Controls\v2\ToggleButton.xaml-->
  <Style x:Key="MaterialTextToggleButtonStyle" TargetType="ToggleButton">
    <Setter Property="Foreground" Value="{ThemeResource TextToggleButtonForeground}" />
    <Setter Property="Background" Value="{ThemeResource TextToggleButtonBackground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource TextToggleButtonBorderBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource TextToggleButtonBorderThickness}" />
    <Setter Property="Padding" Value="{ThemeResource TextToggleButtonPadding}" />
    <Setter Property="CornerRadius" Value="{ThemeResource TextToggleButtonCornerRadius}" />
    <Setter Property="MinHeight" Value="{ThemeResource TextToggleButtonMinHeight}" />
    <Setter Property="FontFamily" Value="{ThemeResource TextToggleButtonFontFamily}" />
    <Setter Property="FontSize" Value="{ThemeResource TextToggleButtonFontSize}" />
    <Setter Property="UseSystemFocusVisuals" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid x:Name="Root" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <VisualState.Setters>
                    <Setter Target="HoverOverlay.Opacity" Value="0" />
                    <Setter Target="FocusedOverlay.Opacity" Value="0" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HoverOverlay" Storyboard.TargetProperty="Opacity" Duration="{StaticResource MaterialAnimationDuration}" From="0" To="1">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource TextToggleButtonBackgroundPointerOver}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource TextToggleButtonBorderBrushPointerOver}" />
                    <Setter Target="AlternateContentPresenter.Opacity" Value="0" />
                    <Setter Target="AlternateContentPresenter.Foreground" Value="{ThemeResource TextToggleButtonForegroundPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TextToggleButtonForegroundPointerOver}" />
                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource TextToggleButtonBorderBrushPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <xamarin:VisualState x:Name="Pressed">
                  <!-- https://github.com/unoplatform/uno/issues/5099 -->
                  <VisualState.Setters>
                    <Setter Target="HoverOverlay.Opacity" Value="0" />
                    <Setter Target="FocusedOverlay.Opacity" Value="0" />
                    <Setter Target="Root.Background" Value="{ThemeResource TextToggleButtonBackgroundPressed}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource TextToggleButtonBorderBrushPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TextToggleButtonForegroundPressed}" />
                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource TextToggleButtonBorderBrushPressed}" />
                  </VisualState.Setters>
                </xamarin:VisualState>
                <win:VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HoverOverlay" Storyboard.TargetProperty="Opacity" Duration="{StaticResource MaterialAnimationDuration}" To="0">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="FocusedOverlay" Storyboard.TargetProperty="Opacity" Duration="{StaticResource MaterialAnimationDuration}" To="0">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource TextToggleButtonBackgroundPressed}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource TextToggleButtonBorderBrushPressed}" />
                    <Setter Target="AlternateContentPresenter.Opacity" Value="0" />
                    <Setter Target="AlternateContentPresenter.Foreground" Value="{ThemeResource TextToggleButtonForegroundPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TextToggleButtonForegroundPressed}" />
                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource TextToggleButtonBorderBrushPressed}" />
                  </VisualState.Setters>
                </win:VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource TextToggleButtonBackgroundDisabled}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource TextToggleButtonBorderBrushDisabled}" />
                    <Setter Target="AlternateContentPresenter.Opacity" Value="0" />
                    <Setter Target="AlternateContentPresenter.Foreground" Value="{ThemeResource TextToggleButtonForegroundDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TextToggleButtonForegroundDisabled}" />
                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource TextToggleButtonBorderBrushDisabled}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Checked">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.Opacity" Value="0" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TextToggleButtonForegroundChecked}" />
                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource TextToggleButtonBorderBrushChecked}" />
                    <Setter Target="Root.Background" Value="{ThemeResource TextToggleButtonBackgroundChecked}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource TextToggleButtonBorderBrushChecked}" />
                    <Setter Target="AlternateContentPresenter.Opacity" Value="{Binding Path=(um:ControlExtensions.AlternateContent), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToTransparent}, FallbackValue=1, TargetNullValue=1}" />
                    <Setter Target="AlternateContentPresenter.Foreground" Value="{ThemeResource TextToggleButtonForegroundChecked}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CheckedPointerOver">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.Opacity" Value="0" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TextToggleButtonForegroundCheckedPointerOver}" />
                    <Setter Target="AlternateContentPresenter.Opacity" Value="{Binding Path=(um:ControlExtensions.AlternateContent), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToTransparent}, FallbackValue=1, TargetNullValue=1}" />
                    <Setter Target="AlternateContentPresenter.Foreground" Value="{ThemeResource TextToggleButtonForegroundCheckedPointerOver}" />
                    <Setter Target="Root.Background" Value="{ThemeResource TextToggleButtonBackgroundCheckedPointerOver}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource TextToggleButtonBorderBrushCheckedPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CheckedPressed">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.Opacity" Value="0" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TextToggleButtonForegroundCheckedPressed}" />
                    <Setter Target="AlternateContentPresenter.Opacity" Value="{Binding Path=(um:ControlExtensions.AlternateContent), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToTransparent}, FallbackValue=1, TargetNullValue=1}" />
                    <Setter Target="AlternateContentPresenter.Foreground" Value="{ThemeResource TextToggleButtonForegroundCheckedPressed}" />
                    <Setter Target="Root.Background" Value="{ThemeResource TextToggleButtonBackgroundCheckedPressed}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource TextToggleButtonBorderBrushCheckedPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CheckedDisabled">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.Opacity" Value="0" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TextToggleButtonForegroundCheckedDisabled}" />
                    <Setter Target="AlternateContentPresenter.Opacity" Value="{Binding Path=(um:ControlExtensions.AlternateContent), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToTransparent}, FallbackValue=1, TargetNullValue=1}" />
                    <Setter Target="AlternateContentPresenter.Foreground" Value="{ThemeResource TextToggleButtonForegroundCheckedDisabled}" />
                    <Setter Target="Root.Background" Value="{ThemeResource TextToggleButtonBackgroundCheckedDisabled}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource TextToggleButtonBorderBrushCheckedDisabled}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="IndeterminateNormal">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource TextToggleButtonBackgroundIndeterminate}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource TextToggleButtonBorderBrushIndeterminate}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TextToggleButtonForegroundIndeterminate}" />
                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource TextToggleButtonBorderBrushIndeterminate}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="IndeterminatePointerOver">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource TextToggleButtonBackgroundIndeterminatePointerOver}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource TextToggleButtonBorderBrushIndeterminatePointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TextToggleButtonForegroundIndeterminatePointerOver}" />
                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource TextToggleButtonBorderBrushIndeterminatePointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="IndeterminatePressed">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource TextToggleButtonBackgroundIndeterminatePressed}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource TextToggleButtonBorderBrushIndeterminatePressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TextToggleButtonForegroundIndeterminatePressed}" />
                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource TextToggleButtonBorderBrushIndeterminatePressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="IndeterminateDisabled">
                  <VisualState.Setters>
                    <Setter Target="Root.Background" Value="{ThemeResource TextToggleButtonBackgroundIndeterminateDisabled}" />
                    <Setter Target="Root.BorderBrush" Value="{ThemeResource TextToggleButtonBorderBrushIndeterminateDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TextToggleButtonForegroundIndeterminateDisabled}" />
                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource TextToggleButtonBorderBrushIndeterminateDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="FocusedOverlay.Opacity" Value="1" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerFocused" />
                <VisualState x:Name="Unfocused">
                  <VisualState.Setters>
                    <Setter Target="FocusedOverlay.Opacity" Value="0" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <!-- Border for PointedOver State -->
            <Border x:Name="HoverOverlay" Background="{ThemeResource TextToggleButtonBorderBrushHoverOverlay}" Opacity="0" />
            <!-- Border for Focus State -->
            <Border x:Name="FocusedOverlay" Background="{ThemeResource TextToggleButtonBorderBrushFocusedOverlay}" Opacity="0" />
            <!-- Border for Dragged/Selected State -->
            <!-- Todo: Add ElevatedView on Dragged/Selected state of button -->
            <Border x:Name="SelectedOverlay" Background="{ThemeResource TextToggleButtonBorderBrushSelectedOverlay}" Opacity="0" />
            <!-- Ripple effect -->
            <um:Ripple x:Name="ContentPresenter" Feedback="{ThemeResource TextToggleButtonFeedbackFocused}" Foreground="{TemplateBinding Foreground}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" CornerRadius="{TemplateBinding CornerRadius}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" />
            <!-- Alternate Content -->
            <ContentPresenter x:Name="AlternateContentPresenter" AutomationProperties.AccessibilityView="Raw" Content="{Binding Path=(um:ControlExtensions.AlternateContent), RelativeSource={RelativeSource TemplatedParent}, FallbackValue=' ', TargetNullValue=' '}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Opacity="0" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialIconToggleButtonStyle" TargetType="ToggleButton">
    <Setter Property="Foreground" Value="{ThemeResource IconToggleButtonForeground}" />
    <Setter Property="Background" Value="{ThemeResource IconToggleButtonBackground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource IconToggleButtonBorderBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource IconToggleButtonBorderThickness}" />
    <Setter Property="MinHeight" Value="{ThemeResource IconToggleButtonMinHeight}" />
    <Setter Property="MinWidth" Value="{ThemeResource IconToggleButtonMinWidth}" />
    <Setter Property="UseSystemFocusVisuals" Value="False" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid x:Name="RootGrid" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.Opacity" Value="1" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource IconToggleButtonForegroundPointerOver}" />
                    <Setter Target="AlternateContentPresenter.Opacity" Value="0" />
                    <Setter Target="AlternateContentPresenter.Foreground" Value="{ThemeResource IconToggleButtonForegroundPointerOver}" />
                    <Setter Target="PointerStateCircle.Opacity" Value="{ThemeResource IconToggleButtonStateCircleOpacityPointerOver}" />
                    <Setter Target="RootGrid.Background" Value="{ThemeResource IconToggleButtonBackgroundPointerOver}" />
                    <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource IconToggleButtonBorderBrushPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.Opacity" Value="1" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource IconToggleButtonForegroundPressed}" />
                    <Setter Target="AlternateContentPresenter.Opacity" Value="0" />
                    <Setter Target="AlternateContentPresenter.Foreground" Value="{ThemeResource IconToggleButtonForegroundPressed}" />
                    <Setter Target="PointerStateCircle.Opacity" Value="{ThemeResource IconToggleButtonStateCircleOpacityPressed}" />
                    <Setter Target="RootGrid.Background" Value="{ThemeResource IconToggleButtonBackgroundPressed}" />
                    <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource IconToggleButtonBorderBrushPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.Opacity" Value="1" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource IconToggleButtonForegroundDisabled}" />
                    <Setter Target="AlternateContentPresenter.Opacity" Value="0" />
                    <Setter Target="AlternateContentPresenter.Foreground" Value="{ThemeResource IconToggleButtonForegroundDisabled}" />
                    <Setter Target="RootGrid.Background" Value="{ThemeResource IconToggleButtonBackgroundDisabled}" />
                    <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource IconToggleButtonBorderBrushDisabled}" />
                  </VisualState.Setters>
                </VisualState>
                <!-- For the checked states, we need to also validate if AlternateContent is set first before changing opacity -->
                <!-- https://github.com/unoplatform/Uno.Themes/issues/1132 -->
                <VisualState x:Name="Checked">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.Opacity" Value="0" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource IconToggleButtonForegroundChecked}" />
                    <Setter Target="AlternateContentPresenter.Opacity" Value="{Binding Path=(um:ControlExtensions.AlternateContent), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToTransparent}, FallbackValue=1, TargetNullValue=1}" />
                    <Setter Target="AlternateContentPresenter.Foreground" Value="{ThemeResource IconToggleButtonForegroundChecked}" />
                    <Setter Target="RootGrid.Background" Value="{ThemeResource IconToggleButtonBackgroundChecked}" />
                    <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource IconToggleButtonBorderBrushChecked}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CheckedPointerOver">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.Opacity" Value="0" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource IconToggleButtonForegroundCheckedPointerOver}" />
                    <Setter Target="AlternateContentPresenter.Opacity" Value="{Binding Path=(um:ControlExtensions.AlternateContent), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToTransparent}, FallbackValue=1, TargetNullValue=1}" />
                    <Setter Target="AlternateContentPresenter.Foreground" Value="{ThemeResource IconToggleButtonForegroundCheckedPointerOver}" />
                    <Setter Target="PointerStateCircle.Opacity" Value="{ThemeResource IconToggleButtonStateCircleOpacityPointerOver}" />
                    <Setter Target="RootGrid.Background" Value="{ThemeResource IconToggleButtonBackgroundCheckedPointerOver}" />
                    <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource IconToggleButtonBorderBrushCheckedPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CheckedPressed">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.Opacity" Value="0" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource IconToggleButtonForegroundCheckedPressed}" />
                    <Setter Target="AlternateContentPresenter.Opacity" Value="{Binding Path=(um:ControlExtensions.AlternateContent), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToTransparent}, FallbackValue=1, TargetNullValue=1}" />
                    <Setter Target="AlternateContentPresenter.Foreground" Value="{ThemeResource IconToggleButtonForegroundCheckedPressed}" />
                    <Setter Target="PointerStateCircle.Opacity" Value="{ThemeResource IconToggleButtonStateCircleOpacityPressed}" />
                    <Setter Target="RootGrid.Background" Value="{ThemeResource IconToggleButtonBackgroundCheckedPressed}" />
                    <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource IconToggleButtonBorderBrushCheckedPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CheckedDisabled">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.Opacity" Value="0" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource IconToggleButtonForegroundCheckedDisabled}" />
                    <Setter Target="AlternateContentPresenter.Opacity" Value="{Binding Path=(um:ControlExtensions.AlternateContent), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToTransparent}, FallbackValue=1, TargetNullValue=1}" />
                    <Setter Target="AlternateContentPresenter.Foreground" Value="{ThemeResource IconToggleButtonForegroundCheckedDisabled}" />
                    <Setter Target="RootGrid.Background" Value="{ThemeResource IconToggleButtonBackgroundCheckedDisabled}" />
                    <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource IconToggleButtonBorderBrushCheckedDisabled}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="IndeterminateNormal">
                  <VisualState.Setters>
                    <Setter Target="RootGrid.Background" Value="{ThemeResource IconToggleButtonBackgroundIndeterminate}" />
                    <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource IconToggleButtonBorderBrushIndeterminate}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource IconToggleButtonForegroundIndeterminate}" />
                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource IconToggleButtonBorderBrushIndeterminate}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="IndeterminatePointerOver">
                  <VisualState.Setters>
                    <Setter Target="RootGrid.Background" Value="{ThemeResource IconToggleButtonBackgroundIndeterminatePointerOver}" />
                    <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource IconToggleButtonBorderBrushIndeterminatePointerOver}" />
                    <Setter Target="PointerStateCircle.Opacity" Value="{ThemeResource IconToggleButtonStateCircleOpacityPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource IconToggleButtonForegroundIndeterminatePointerOver}" />
                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource IconToggleButtonBorderBrushIndeterminatePointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="IndeterminatePressed">
                  <VisualState.Setters>
                    <Setter Target="RootGrid.Background" Value="{ThemeResource IconToggleButtonBackgroundIndeterminatePressed}" />
                    <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource IconToggleButtonBorderBrushIndeterminatePressed}" />
                    <Setter Target="PointerStateCircle.Opacity" Value="{ThemeResource IconToggleButtonStateCircleOpacityPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource IconToggleButtonForegroundIndeterminatePressed}" />
                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource IconToggleButtonBorderBrushIndeterminatePressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="IndeterminateDisabled">
                  <VisualState.Setters>
                    <Setter Target="RootGrid.Background" Value="{ThemeResource IconToggleButtonBackgroundIndeterminateDisabled}" />
                    <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource IconToggleButtonBorderBrushIndeterminateDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource IconToggleButtonForegroundIndeterminateDisabled}" />
                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource IconToggleButtonBorderBrushIndeterminateDisabled}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualStateGroup.Transitions>
                  <VisualTransition To="PointerOver" GeneratedDuration="{StaticResource MaterialAnimationDuration}" GeneratedEasingFunction="{StaticResource MaterialEaseInOutFunction}" />
                  <VisualTransition To="Pressed" GeneratedDuration="{StaticResource MaterialAnimationDuration}" GeneratedEasingFunction="{StaticResource MaterialEaseInOutFunction}" />
                  <VisualTransition To="CheckedPointerOver" GeneratedDuration="{StaticResource MaterialAnimationDuration}" GeneratedEasingFunction="{StaticResource MaterialEaseInOutFunction}" />
                  <VisualTransition To="CheckedPressed" GeneratedDuration="{StaticResource MaterialAnimationDuration}" GeneratedEasingFunction="{StaticResource MaterialEaseInOutFunction}" />
                  <VisualTransition To="IndeterminatePointerOver" GeneratedDuration="{StaticResource MaterialAnimationDuration}" GeneratedEasingFunction="{StaticResource MaterialEaseInOutFunction}" />
                  <VisualTransition To="IndeterminatePressed" GeneratedDuration="{StaticResource MaterialAnimationDuration}" GeneratedEasingFunction="{StaticResource MaterialEaseInOutFunction}" />
                </VisualStateGroup.Transitions>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="FocusStateCircle.Opacity" Value="{ThemeResource IconToggleButtonStateCircleOpacityFocused}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerFocused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <!-- Ellipse for Focus State -->
            <Ellipse x:Name="FocusStateCircle" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{ThemeResource IconToggleButtonStateCircleFill}" Opacity="0" />
            <!-- Ellipse for Hover and Pressed States -->
            <Ellipse x:Name="PointerStateCircle" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{ThemeResource IconToggleButtonStateCircleFill}" Opacity="0" />
            <!-- Content -->
            <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
            <!-- Alternate Content -->
            <ContentPresenter x:Name="AlternateContentPresenter" AutomationProperties.AccessibilityView="Raw" Content="{Binding Path=(um:ControlExtensions.AlternateContent), RelativeSource={RelativeSource TemplatedParent}, FallbackValue=' ', TargetNullValue=' '}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Opacity="0" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialDefaultToggleButtonStyle" TargetType="ToggleButton" BasedOn="{StaticResource MaterialIconToggleButtonStyle}" />
  <!--origin: Styles\Controls\v2\ToggleSwitch.xaml-->
  <x:Double x:Key="SmallThumbOffSize">16</x:Double>
  <x:Double x:Key="MediumThumbOffSize">24</x:Double>
  <um:FromBoolToValueConverter x:Key="ToggleSwitchIsOnToOpacity" TrueValue="1" FalseValue="0" />
  <um:FromBoolToValueConverter x:Key="ToggleSwitchIsOffToOpacity" TrueValue="0" FalseValue="1" />
  <um:FromNullToValueConverter x:Key="ToggleSwitchOffContentToContentSize" NullValue="{StaticResource SmallThumbOffSize}" NotNullValue="{StaticResource MediumThumbOffSize}" />
  <um:FromNullToValueConverter x:Key="ToggleSwitchOffContentToContentMargin" NullValue="0,0,6,0" NotNullValue="0,0,2,0" />
  <Style x:Key="MaterialToggleSwitchStyle" TargetType="ToggleSwitch">
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="ManipulationMode" Value="System,TranslateX" />
    <Setter Property="FocusVisualMargin" Value="0" />
    <Setter Property="OnContent" Value="{x:Null}" />
    <Setter Property="OffContent" Value="{x:Null}" />
    <Setter Property="MinWidth" Value="{ThemeResource ToggleSwitchThemeMinWidth}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleSwitch">
          <Grid Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Stroke">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchOuterBorderStroke}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchOuterBorderFill}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="KnobOff" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobOffFill}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="KnobOn" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobOnFill}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobBoundsFill}" />
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOn" Storyboard.TargetProperty="Width" EnableDependentAnimation="True">
                      <SplineDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchFasterAnimationDuration}" KeySpline="{StaticResource MaterialToggleSwitchFastOutSlowInKeySpline}" Value="{ThemeResource MediumThumbSize}" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOn" Storyboard.TargetProperty="Height" EnableDependentAnimation="True">
                      <SplineDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchFasterAnimationDuration}" KeySpline="{StaticResource MaterialToggleSwitchFastOutSlowInKeySpline}" Value="{ThemeResource MediumThumbSize}" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOff" Storyboard.TargetProperty="Width" EnableDependentAnimation="True">
                      <SplineDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchFasterAnimationDuration}" KeySpline="{StaticResource MaterialToggleSwitchFastOutSlowInKeySpline}" Value="{Binding OffContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ToggleSwitchOffContentToContentSize}}" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOff" Storyboard.TargetProperty="Height" EnableDependentAnimation="True">
                      <SplineDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchFasterAnimationDuration}" KeySpline="{StaticResource MaterialToggleSwitchFastOutSlowInKeySpline}" Value="{Binding OffContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ToggleSwitchOffContentToContentSize}}" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="SwitchKnobOnShadow.Visibility" Value="Visible" />
                    <Setter Target="SwitchKnobOffShadow.Visibility" Value="Visible" />
                  </VisualState.Setters>
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="KnobOff" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobOffFillPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="KnobOn" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobOnFillPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobBoundsFillPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOn" Storyboard.TargetProperty="Width" EnableDependentAnimation="True">
                      <SplineDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchFasterAnimationDuration}" KeySpline="{StaticResource MaterialToggleSwitchFastOutSlowInKeySpline}" Value="{ThemeResource MediumThumbSize}" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOn" Storyboard.TargetProperty="Height" EnableDependentAnimation="True">
                      <SplineDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchFasterAnimationDuration}" KeySpline="{StaticResource MaterialToggleSwitchFastOutSlowInKeySpline}" Value="{ThemeResource MediumThumbSize}" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOff" Storyboard.TargetProperty="Width" EnableDependentAnimation="True">
                      <SplineDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchFasterAnimationDuration}" KeySpline="{StaticResource MaterialToggleSwitchFastOutSlowInKeySpline}" Value="{Binding OffContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ToggleSwitchOffContentToContentSize}}" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOff" Storyboard.TargetProperty="Height" EnableDependentAnimation="True">
                      <SplineDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchFasterAnimationDuration}" KeySpline="{StaticResource MaterialToggleSwitchFastOutSlowInKeySpline}" Value="{Binding OffContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ToggleSwitchOffContentToContentSize}}" />
                    </DoubleAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOnShadow" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobOnShadowFillPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOffShadow" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobOffShadowFillPointerOver}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="SwitchKnobOnShadow.Visibility" Value="Visible" />
                    <Setter Target="SwitchKnobOffShadow.Visibility" Value="Visible" />
                  </VisualState.Setters>
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="KnobOff" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobOffFillFocused}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="KnobOn" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobOnFillFocused}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobBoundsFillFocused}" />
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOn" Storyboard.TargetProperty="Width" EnableDependentAnimation="True">
                      <SplineDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchFasterAnimationDuration}" KeySpline="{StaticResource MaterialToggleSwitchFastOutSlowInKeySpline}" Value="{ThemeResource MediumThumbSize}" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOn" Storyboard.TargetProperty="Height" EnableDependentAnimation="True">
                      <SplineDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchFasterAnimationDuration}" KeySpline="{StaticResource MaterialToggleSwitchFastOutSlowInKeySpline}" Value="{ThemeResource MediumThumbSize}" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOff" Storyboard.TargetProperty="Width" EnableDependentAnimation="True">
                      <SplineDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchFasterAnimationDuration}" KeySpline="{StaticResource MaterialToggleSwitchFastOutSlowInKeySpline}" Value="{Binding OffContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ToggleSwitchOffContentToContentSize}}" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOff" Storyboard.TargetProperty="Height" EnableDependentAnimation="True">
                      <SplineDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchFasterAnimationDuration}" KeySpline="{StaticResource MaterialToggleSwitchFastOutSlowInKeySpline}" Value="{Binding OffContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ToggleSwitchOffContentToContentSize}}" />
                    </DoubleAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOnShadow" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobOnShadowFillFocused}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOffShadow" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobOffShadowFillFocused}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="KnobOn.Margin" Value="0" />
                    <Setter Target="KnobOff.Margin" Value="0" />
                    <Setter Target="SwitchKnobOnShadow.Visibility" Value="Visible" />
                    <Setter Target="SwitchKnobOffShadow.Visibility" Value="Visible" />
                  </VisualState.Setters>
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobBoundsFillPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="KnobOff" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobOffFillPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="KnobOn" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobOnFillPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOn" Storyboard.TargetProperty="Width" EnableDependentAnimation="True">
                      <SplineDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchFasterAnimationDuration}" KeySpline="{StaticResource MaterialToggleSwitchFastOutSlowInKeySpline}" Value="{ThemeResource LargeThumbSize}" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOn" Storyboard.TargetProperty="Height" EnableDependentAnimation="True">
                      <SplineDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchFasterAnimationDuration}" KeySpline="{StaticResource MaterialToggleSwitchFastOutSlowInKeySpline}" Value="{ThemeResource LargeThumbSize}" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOff" Storyboard.TargetProperty="Width" EnableDependentAnimation="True">
                      <SplineDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchFasterAnimationDuration}" KeySpline="{StaticResource MaterialToggleSwitchFastOutSlowInKeySpline}" Value="{ThemeResource LargeThumbSize}" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOff" Storyboard.TargetProperty="Height" EnableDependentAnimation="True">
                      <SplineDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchFasterAnimationDuration}" KeySpline="{StaticResource MaterialToggleSwitchFastOutSlowInKeySpline}" Value="{ThemeResource LargeThumbSize}" />
                    </DoubleAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOnShadow" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobOnShadowFillPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOffShadow" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobOffShadowFillPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobBoundsFillDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DisabledOpacity}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="KnobOff" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobOffFillDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="KnobOn" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobOnFillDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOn" Storyboard.TargetProperty="Width" EnableDependentAnimation="True">
                      <SplineDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" KeySpline="{StaticResource MaterialToggleSwitchFastOutSlowInKeySpline}" Value="{ThemeResource MediumThumbSize}" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOn" Storyboard.TargetProperty="Height" EnableDependentAnimation="True">
                      <SplineDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" KeySpline="{StaticResource MaterialToggleSwitchFastOutSlowInKeySpline}" Value="{ThemeResource MediumThumbSize}" />
                    </DoubleAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OnIconPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchOnIconPresenterForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OffIconPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchOffIconPresenterForegroundDisabled}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OffIconPresenter" Storyboard.TargetProperty="Opacity">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="0.62" />
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOff" Storyboard.TargetProperty="Width" EnableDependentAnimation="True">
                      <SplineDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchFasterAnimationDuration}" KeySpline="{StaticResource MaterialToggleSwitchFastOutSlowInKeySpline}" Value="{Binding OffContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ToggleSwitchOffContentToContentSize}}" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOff" Storyboard.TargetProperty="Height" EnableDependentAnimation="True">
                      <SplineDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchFasterAnimationDuration}" KeySpline="{StaticResource MaterialToggleSwitchFastOutSlowInKeySpline}" Value="{Binding OffContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ToggleSwitchOffContentToContentSize}}" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ToggleStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition x:Name="DraggingToOnTransition" From="Dragging" To="On" GeneratedDuration="0">
                    <Storyboard>
                      <RepositionThemeAnimation TargetName="SwitchKnob" FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobCurrentToOnOffset}" />
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOn" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOff" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOnShadow" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOffShadow" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition x:Name="OnToDraggingTransition" From="On" To="Dragging" GeneratedDuration="0">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="0" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOn" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="0" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOff" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="0" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOnShadow" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="0" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOffShadow" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="0" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition x:Name="DraggingToOffTransition" From="Dragging" To="Off" GeneratedDuration="0">
                    <Storyboard>
                      <RepositionThemeAnimation TargetName="SwitchKnob" FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobCurrentToOffOffset}" />
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOn" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOff" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOnShadow" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOffShadow" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition x:Name="OnToOffTransition" From="On" To="Off" GeneratedDuration="0">
                    <Storyboard>
                      <RepositionThemeAnimation TargetName="SwitchKnob" FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobOnToOffOffset}" />
                      <!--#region uno#9507: UNO specific workaround to reset the states-->
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOn" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOff" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOnShadow" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOffShadow" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <!--#endregion-->
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition x:Name="OffToOnTransition" From="Off" To="On" GeneratedDuration="0">
                    <Storyboard>
                      <RepositionThemeAnimation TargetName="SwitchKnob" FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobOffToOnOffset}" />
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOn" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOff" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOnShadow" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOffShadow" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Dragging">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                      <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="{Binding IsOn, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ToggleSwitchIsOnToOpacity}}" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                      <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="{Binding IsOn, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ToggleSwitchIsOffToOpacity}}" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOn" Storyboard.TargetProperty="Opacity">
                      <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="{Binding IsOn, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ToggleSwitchIsOnToOpacity}}" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOff" Storyboard.TargetProperty="Opacity">
                      <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="{Binding IsOn, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ToggleSwitchIsOffToOpacity}}" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOnShadow" Storyboard.TargetProperty="Opacity">
                      <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="{Binding IsOn, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ToggleSwitchIsOnToOpacity}}" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOffShadow" Storyboard.TargetProperty="Opacity">
                      <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="{Binding IsOn, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ToggleSwitchIsOffToOpacity}}" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Off">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOnShadow" Storyboard.TargetProperty="Opacity">
                      <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOffShadow" Storyboard.TargetProperty="Opacity">
                      <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="On">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                      <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                      <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOn" Storyboard.TargetProperty="Opacity">
                      <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobOff" Storyboard.TargetProperty="Opacity">
                      <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOnShadow" Storyboard.TargetProperty="Opacity">
                      <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOffShadow" Storyboard.TargetProperty="Opacity">
                      <LinearDoubleKeyFrame KeyTime="{StaticResource MaterialToggleSwitchNormalAnimationDuration}" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Top">
              <!-- Off -->
              <Rectangle x:Name="OuterBorder" Width="{ThemeResource SwitchKnobWidth}" Height="{ThemeResource SwitchKnobHeight}" RadiusX="{ThemeResource SwitchKnobRadius}" RadiusY="{ThemeResource SwitchKnobRadius}" Fill="{ThemeResource ToggleSwitchOffOuterBorderFill}" Stroke="{ThemeResource ToggleSwitchOffOuterBorderStroke}" StrokeThickness="{ThemeResource SwitchKnobStrokeThickness}" HorizontalAlignment="Center" />
              <!-- On -->
              <Rectangle x:Name="SwitchKnobBounds" Width="{ThemeResource SwitchKnobWidth}" Height="{ThemeResource SwitchKnobHeight}" RadiusX="{ThemeResource SwitchKnobRadius}" RadiusY="{ThemeResource SwitchKnobRadius}" Fill="{ThemeResource ToggleSwitchOnSwitchKnobBoundsFill}" HorizontalAlignment="Center" Opacity="0" />
              <Grid x:Name="SwitchKnob" HorizontalAlignment="Left" Width="{ThemeResource SwitchKnobIncludingOffShadowWidth}" Height="{ThemeResource SwitchKnobHeight}">
                <!-- Switch Knob - On -->
                <Grid x:Name="SwitchKnobOn" Width="{ThemeResource LargeThumbSize}" Height="{ThemeResource LargeThumbSize}" Margin="{ThemeResource SwitchKnobOnMargin}" CornerRadius="{ThemeResource LargeThumbCornerRadius}" HorizontalAlignment="Left">
                  <!-- Knob On -->
                  <Ellipse x:Name="KnobOn" Opacity="0" Width="{ThemeResource MediumThumbSize}" Height="{ThemeResource MediumThumbSize}" Margin="{ThemeResource KnobOnMargin}" VerticalAlignment="Center" HorizontalAlignment="Left" Fill="{ThemeResource ToggleSwitchKnobOnFill}" />
                  <!-- On Icon -->
                  <Border Height="{ThemeResource KnobIconSize}" Width="{ThemeResource KnobIconSize}" Padding="{ThemeResource KnobIconPadding}" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Viewbox>
                      <ContentPresenter x:Name="OnIconPresenter" Content="{TemplateBinding OnContent}" Visibility="{Binding IsOn, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialTrueToVisible}}" VerticalAlignment="Center" HorizontalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Foreground="{ThemeResource ToggleSwitchOnIconPresenterForeground}" />
                    </Viewbox>
                  </Border>
                </Grid>
                <!-- Switch Knob - Off -->
                <Grid x:Name="SwitchKnobOff" Width="{ThemeResource LargeThumbSize}" Height="{ThemeResource LargeThumbSize}" Margin="{ThemeResource SwitchKnobOffMargin}" CornerRadius="{ThemeResource LargeThumbCornerRadius}" HorizontalAlignment="Right">
                  <!-- Knob Off -->
                  <Ellipse x:Name="KnobOff" Fill="{ThemeResource ToggleSwitchKnobOffFill}" Height="{Binding OffContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ToggleSwitchOffContentToContentSize}}" Width="{Binding OffContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ToggleSwitchOffContentToContentSize}}" Margin="{Binding OffContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ToggleSwitchOffContentToContentMargin}}" VerticalAlignment="Center" HorizontalAlignment="Right" />
                  <!-- Off Icon -->
                  <Border Height="{ThemeResource KnobIconSize}" Width="{ThemeResource KnobIconSize}" Padding="{ThemeResource KnobIconPadding}" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Viewbox>
                      <ContentPresenter x:Name="OffIconPresenter" Content="{TemplateBinding OffContent}" Visibility="{Binding IsOn, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialTrueToCollapsed}}" VerticalAlignment="Center" HorizontalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Foreground="{ThemeResource ToggleSwitchOffIconPresenterForeground}" />
                    </Viewbox>
                  </Border>
                </Grid>
              </Grid>
              <!-- On State Layer -->
              <Ellipse x:Name="SwitchKnobOnShadow" Width="{ThemeResource SwitchKnobShadowSize}" Height="{ThemeResource SwitchKnobShadowSize}" Margin="{ThemeResource SwitchKnobOnShadowMargin}" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{ThemeResource ToggleSwitchKnobOnShadowFill}" Opacity="0" />
              <!-- Off State Layer -->
              <Ellipse x:Name="SwitchKnobOffShadow" Width="{ThemeResource SwitchKnobShadowSize}" Height="{ThemeResource SwitchKnobShadowSize}" Margin="{ThemeResource SwitchKnobOffShadowMargin}" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{ThemeResource ToggleSwitchKnobOffShadowFill}" Opacity="0" />
              <!-- SwitchThumb -->
              <Thumb x:Name="SwitchThumb" AutomationProperties.AccessibilityView="Raw">
                <Thumb.Template>
                  <ControlTemplate TargetType="Thumb">
                    <Rectangle Fill="{ThemeResource ToggleSwitchThumb}" />
                  </ControlTemplate>
                </Thumb.Template>
              </Thumb>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MaterialDefaultToggleSwitchStyle" TargetType="ToggleSwitch" BasedOn="{StaticResource MaterialToggleSwitchStyle}" />
  <!--origin: Styles\Controls\v2\_Resources.xaml-->
  <Style BasedOn="{StaticResource MaterialDefaultAppBarButtonStyle}" TargetType="AppBarButton" />
  <Style BasedOn="{StaticResource MaterialDefaultButtonStyle}" TargetType="Button" />
  <Style BasedOn="{StaticResource MaterialDefaultCalendarDatePickerStyle}" TargetType="CalendarDatePicker" />
  <Style BasedOn="{StaticResource MaterialDefaultCalendarViewStyle}" TargetType="CalendarView" />
  <Style BasedOn="{StaticResource MaterialDefaultCheckBoxStyle}" TargetType="CheckBox" />
  <Style BasedOn="{StaticResource MaterialDefaultComboBoxStyle}" TargetType="ComboBox" />
  <Style BasedOn="{StaticResource MaterialDefaultCommandBarStyle}" TargetType="CommandBar" />
  <Style BasedOn="{StaticResource MaterialDefaultContentDialogStyle}" TargetType="ContentDialog" />
  <Style BasedOn="{StaticResource MaterialDefaultDatePickerStyle}" TargetType="DatePicker" />
  <Style BasedOn="{StaticResource MaterialDefaultFlyoutPresenterStyle}" TargetType="FlyoutPresenter" />
  <Style BasedOn="{StaticResource MaterialDefaultHyperlinkButtonStyle}" TargetType="HyperlinkButton" />
  <Style BasedOn="{StaticResource MaterialDefaultListViewItemStyle}" TargetType="ListViewItem" />
  <Style BasedOn="{StaticResource MaterialDefaultListViewStyle}" TargetType="ListView" />
  <Style BasedOn="{StaticResource MaterialDefaultMediaTransportControlsStyle}" TargetType="MediaTransportControls" />
  <Style BasedOn="{StaticResource MaterialDefaultMenuFlyoutItemStyle}" TargetType="MenuFlyoutItem" />
  <Style BasedOn="{StaticResource MaterialDefaultMenuFlyoutPresenterStyle}" TargetType="MenuFlyoutPresenter" />
  <Style BasedOn="{StaticResource MaterialDefaultMenuFlyoutSeparatorStyle}" TargetType="MenuFlyoutSeparator" />
  <Style BasedOn="{StaticResource MaterialDefaultMenuFlyoutSubItemStyle}" TargetType="MenuFlyoutSubItem" />
  <Style BasedOn="{StaticResource MaterialDefaultNavigationViewStyle}" TargetType="controls:NavigationView" />
  <Style BasedOn="{StaticResource MaterialDefaultNavigationViewItemStyle}" TargetType="controls:NavigationViewItem" />
  <Style BasedOn="{StaticResource MaterialDefaultPasswordBoxStyle}" TargetType="PasswordBox" />
  <Style BasedOn="{StaticResource MaterialDefaultPipsPagerStyle}" TargetType="controls:PipsPager" />
  <Style BasedOn="{StaticResource MaterialDefaultProgressBarStyle}" TargetType="controls:ProgressBar" />
  <Style BasedOn="{StaticResource MaterialDefaultProgressRingStyle}" TargetType="controls:ProgressRing" />
  <Style BasedOn="{StaticResource MaterialDefaultRadioButtonStyle}" TargetType="RadioButton" />
  <Style BasedOn="{StaticResource MaterialDefaultRatingControlStyle}" TargetType="RatingControl" />
  <Style BasedOn="{StaticResource MaterialDefaultRippleStyle}" TargetType="um:Ripple" />
  <Style BasedOn="{StaticResource MaterialDefaultSliderStyle}" TargetType="Slider" />
  <Style BasedOn="{StaticResource MaterialDefaultTextBlockStyle}" TargetType="TextBlock" />
  <Style BasedOn="{StaticResource MaterialDefaultTextBoxStyle}" TargetType="TextBox" />
  <Style BasedOn="{StaticResource MaterialDefaultToggleButtonStyle}" TargetType="ToggleButton" />
  <Style BasedOn="{StaticResource MaterialDefaultToggleMenuFlyoutItemStyle}" TargetType="ToggleMenuFlyoutItem" />
  <Style BasedOn="{StaticResource MaterialDefaultToggleSwitchStyle}" TargetType="ToggleSwitch" />
  <StaticResource x:Key="AppBarButtonStyle" ResourceKey="MaterialAppBarButtonStyle" />
  <StaticResource x:Key="BodyMedium" ResourceKey="MaterialBodyMedium" />
  <StaticResource x:Key="CalendarDatePickerStyle" ResourceKey="MaterialCalendarDatePickerStyle" />
  <StaticResource x:Key="CalendarViewStyle" ResourceKey="MaterialCalendarViewStyle" />
  <StaticResource x:Key="CheckBoxStyle" ResourceKey="MaterialCheckBoxStyle" />
  <StaticResource x:Key="ContentDialogStyle" ResourceKey="MaterialContentDialogStyle" />
  <StaticResource x:Key="ComboBoxStyle" ResourceKey="MaterialComboBoxStyle" />
  <StaticResource x:Key="CommandBarStyle" ResourceKey="MaterialCommandBarStyle" />
  <StaticResource x:Key="DatePickerStyle" ResourceKey="MaterialDatePickerStyle" />
  <StaticResource x:Key="FilledButtonStyle" ResourceKey="MaterialFilledButtonStyle" />
  <StaticResource x:Key="FlyoutPresenterStyle" ResourceKey="MaterialFlyoutPresenterStyle" />
  <StaticResource x:Key="HyperlinkButtonStyle" ResourceKey="MaterialHyperlinkButtonStyle" />
  <StaticResource x:Key="IconToggleButtonStyle" ResourceKey="MaterialIconToggleButtonStyle" />
  <StaticResource x:Key="ListViewItemStyle" ResourceKey="MaterialListViewItemStyle" />
  <StaticResource x:Key="ListViewStyle" ResourceKey="MaterialListViewStyle" />
  <StaticResource x:Key="MediaTransportControlsStyle" ResourceKey="MaterialMediaTransportControlsStyle" />
  <StaticResource x:Key="MenuFlyoutItemStyle" ResourceKey="MaterialMenuFlyoutItemStyle" />
  <StaticResource x:Key="MenuFlyoutPresenterStyle" ResourceKey="MaterialMenuFlyoutPresenterStyle" />
  <StaticResource x:Key="MenuFlyoutSeparatorStyle" ResourceKey="MaterialMenuFlyoutSeparatorStyle" />
  <StaticResource x:Key="MenuFlyoutSubItemStyle" ResourceKey="MaterialMenuFlyoutSubItemStyle" />
  <StaticResource x:Key="NavigationViewStyle" ResourceKey="MaterialNavigationViewStyle" />
  <StaticResource x:Key="NavigationViewItemStyle" ResourceKey="MaterialNavigationViewItemStyle" />
  <StaticResource x:Key="OutlinedPasswordBoxStyle" ResourceKey="MaterialOutlinedPasswordBoxStyle" />
  <StaticResource x:Key="OutlinedTextBoxStyle" ResourceKey="MaterialOutlinedTextBoxStyle" />
  <StaticResource x:Key="PipsPagerStyle" ResourceKey="MaterialPipsPagerStyle" />
  <StaticResource x:Key="ProgressBarStyle" ResourceKey="MaterialProgressBarStyle" />
  <StaticResource x:Key="ProgressRingStyle" ResourceKey="MaterialProgressRingStyle" />
  <StaticResource x:Key="RadioButtonStyle" ResourceKey="MaterialRadioButtonStyle" />
  <StaticResource x:Key="RatingControlStyle" ResourceKey="MaterialRatingControlStyle" />
  <StaticResource x:Key="RippleStyle" ResourceKey="MaterialRippleStyle" />
  <StaticResource x:Key="SliderStyle" ResourceKey="MaterialSliderStyle" />
  <StaticResource x:Key="ToggleMenuFlyoutItemStyle" ResourceKey="MaterialToggleMenuFlyoutItemStyle" />
  <StaticResource x:Key="ToggleSwitchStyle" ResourceKey="MaterialToggleSwitchStyle" />
  <StaticResource x:Key="BodyLarge" ResourceKey="MaterialBodyLarge" />
  <StaticResource x:Key="BodySmall" ResourceKey="MaterialBodySmall" />
  <StaticResource x:Key="CaptionLarge" ResourceKey="MaterialCaptionLarge" />
  <StaticResource x:Key="CaptionMedium" ResourceKey="MaterialCaptionMedium" />
  <StaticResource x:Key="CaptionSmall" ResourceKey="MaterialCaptionSmall" />
  <StaticResource x:Key="DefaultMaterialCalendarViewStyle" ResourceKey="MaterialDefaultCalendarViewStyle" />
  <StaticResource x:Key="DisplayLarge" ResourceKey="MaterialDisplayLarge" />
  <StaticResource x:Key="DisplayMedium" ResourceKey="MaterialDisplayMedium" />
  <StaticResource x:Key="DisplaySmall" ResourceKey="MaterialDisplaySmall" />
  <StaticResource x:Key="ElevatedButtonStyle" ResourceKey="MaterialElevatedButtonStyle" />
  <StaticResource x:Key="FabStyle" ResourceKey="MaterialFabStyle" />
  <StaticResource x:Key="FilledTonalButtonStyle" ResourceKey="MaterialFilledTonalButtonStyle" />
  <StaticResource x:Key="HeadlineLarge" ResourceKey="MaterialHeadlineLarge" />
  <StaticResource x:Key="HeadlineMedium" ResourceKey="MaterialHeadlineMedium" />
  <StaticResource x:Key="HeadlineSmall" ResourceKey="MaterialHeadlineSmall" />
  <StaticResource x:Key="IconButtonStyle" ResourceKey="MaterialIconButtonStyle" />
  <StaticResource x:Key="LabelExtraSmall" ResourceKey="MaterialLabelExtraSmall" />
  <StaticResource x:Key="LabelLarge" ResourceKey="MaterialLabelLarge" />
  <StaticResource x:Key="LabelMedium" ResourceKey="MaterialLabelMedium" />
  <StaticResource x:Key="LabelSmall" ResourceKey="MaterialLabelSmall" />
  <StaticResource x:Key="LargeFabStyle" ResourceKey="MaterialLargeFabStyle" />
  <StaticResource x:Key="OutlinedButtonStyle" ResourceKey="MaterialOutlinedButtonStyle" />
  <StaticResource x:Key="FilledPasswordBoxStyle" ResourceKey="MaterialFilledPasswordBoxStyle" />
  <StaticResource x:Key="FilledTextBoxStyle" ResourceKey="MaterialFilledTextBoxStyle" />
  <StaticResource x:Key="SecondaryCheckBoxStyle" ResourceKey="MaterialSecondaryCheckBoxStyle" />
  <StaticResource x:Key="SecondaryFabStyle" ResourceKey="MaterialSecondaryFabStyle" />
  <StaticResource x:Key="SecondaryHyperlinkButtonStyle" ResourceKey="MaterialSecondaryHyperlinkButtonStyle" />
  <StaticResource x:Key="SecondaryLargeFabStyle" ResourceKey="MaterialSecondaryLargeFabStyle" />
  <StaticResource x:Key="SecondarySmallFabStyle" ResourceKey="MaterialSecondarySmallFabStyle" />
  <StaticResource x:Key="SmallFabStyle" ResourceKey="MaterialSmallFabStyle" />
  <StaticResource x:Key="SurfaceFabStyle" ResourceKey="MaterialSurfaceFabStyle" />
  <StaticResource x:Key="SurfaceLargeFabStyle" ResourceKey="MaterialSurfaceLargeFabStyle" />
  <StaticResource x:Key="SurfaceSmallFabStyle" ResourceKey="MaterialSurfaceSmallFabStyle" />
  <StaticResource x:Key="TertiaryFabStyle" ResourceKey="MaterialTertiaryFabStyle" />
  <StaticResource x:Key="TertiaryLargeFabStyle" ResourceKey="MaterialTertiaryLargeFabStyle" />
  <StaticResource x:Key="TertiarySmallFabStyle" ResourceKey="MaterialTertiarySmallFabStyle" />
  <StaticResource x:Key="TextButtonStyle" ResourceKey="MaterialTextButtonStyle" />
  <StaticResource x:Key="TextToggleButtonStyle" ResourceKey="MaterialTextToggleButtonStyle" />
  <StaticResource x:Key="TitleLarge" ResourceKey="MaterialTitleLarge" />
  <StaticResource x:Key="TitleMedium" ResourceKey="MaterialTitleMedium" />
  <StaticResource x:Key="TitleSmall" ResourceKey="MaterialTitleSmall" />
  <!--origin: Styles\Application\v2\Typography.xaml-->
  <!--origin: Styles\Application\Common\AnimationConstants.xaml-->
  <CubicEase x:Key="MaterialEaseInOutFunction" EasingMode="EaseInOut" />
  <CubicEase x:Key="MaterialEaseOutFunction" EasingMode="EaseOut" />
  <Duration x:Key="MaterialAnimationDuration">0:0:0.25</Duration>
  <Duration x:Key="MaterialTextBoxAnimationDuration">0:0:0.25</Duration>
  <x:String x:Key="MaterialDelayedBeginTime">0:0:0.15</x:String>
  <x:String x:Key="MaterialToggleSwitchFastOutSlowInKeySpline">0.5,0,0.5,1</x:String>
  <x:String x:Key="MaterialToggleSwitchNormalAnimationDuration">00:00:00.225</x:String>
  <x:String x:Key="MaterialToggleSwitchFasterAnimationDuration">00:00:00.180</x:String>
  <!--origin: Styles\Application\Common\Converters.xaml-->
  <um:FromBoolToValueConverter x:Key="MaterialTrueToVisible" TrueValue="Visible" FalseValue="Collapsed" NullValue="Collapsed" />
  <um:FromBoolToValueConverter x:Key="MaterialTrueToCollapsed" TrueValue="Collapsed" FalseValue="Visible" NullValue="Visible" />
  <um:FromEmptyStringToValueConverter x:Key="MaterialEmptyToFalse" NotNullOrEmptyValue="True" NullOrEmptyValue="False" />
  <um:FromEmptyStringToValueConverter x:Key="MaterialEmptyToTrue" NotNullOrEmptyValue="False" NullOrEmptyValue="True" />
  <um:FromEmptyStringToValueConverter x:Key="MaterialEmptyToVisible" NotNullOrEmptyValue="Collapsed" NullOrEmptyValue="Visible" />
  <um:FromEmptyStringToValueConverter x:Key="MaterialEmptyToCollapsed" NotNullOrEmptyValue="Visible" NullOrEmptyValue="Collapsed" />
  <um:FromNullToValueConverter x:Key="MaterialNullToCollapsedConverter" NotNullValue="Visible" NullValue="Collapsed" />
  <um:FromNullToValueConverter x:Key="MaterialNullToVisibleConverter" NotNullValue="Visible" NullValue="Collapsed" />
  <um:FromNullToValueConverter x:Key="MaterialNullToTransparent" NotNullValue="1" NullValue="0" />
  <um:FromEmptyStringOrNullObjectToValueConverter x:Key="MaterialEmptyOrNullToVisible" NotEmptyOrNullValue="Collapsed" EmptyOrNullValue="Visible" />
  <um:FromEmptyStringOrNullObjectToValueConverter x:Key="MaterialEmptyOrNullToCollapsed" NotEmptyOrNullValue="Visible" EmptyOrNullValue="Collapsed" />
  <um:StringFormatConverter x:Key="StringFormatConverter" />
  <um:FirstCharacterConverter x:Key="FirstCharacterConverter" />
  <!--origin: Styles\Application\Common\TextBoxVariables.xaml-->
  <StaticResource x:Key="TextBoxLabelDefaultColorBrush" ResourceKey="MaterialOnSurfaceMediumBrush" />
  <StaticResource x:Key="TextBoxLabelFocusColorBrush" ResourceKey="MaterialPrimaryBrush" />
  <StaticResource x:Key="TextBoxIconColorBrush" ResourceKey="MaterialOnSurfaceMediumBrush" />
  <x:Double x:Key="TextBoxFocusStrokeWidth">2</x:Double>
  <SolidColorBrush x:Key="TextBoxFilledBackgroundColorBrush" Color="{ThemeResource MaterialOnSurfaceColor}" Opacity="0.12" />
  <StaticResource x:Key="TextBoxFilledIndicatorColorBrush" ResourceKey="MaterialOnSurfaceMediumBrush" />
  <StaticResource x:Key="TextBoxFilledFocusIndicatorColorBrush" ResourceKey="MaterialPrimaryBrush" />
  <x:Double x:Key="TextBoxOutlinedStrokeHeight">1</x:Double>
  <StaticResource x:Key="TextBoxOutlinedStrokeColorBrush" ResourceKey="MaterialOnSurfaceMediumBrush" />
  <StaticResource x:Key="TextBoxOutlinedFocusStrokeColorBrush" ResourceKey="MaterialPrimaryBrush" />
  <x:Double x:Key="TextBoxOutlinedCorderRadius">4</x:Double>
</ResourceDictionary>