<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:ios="http://uno.ui/ios"
					xmlns:macos="http://uno.ui/macos"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:not_macos="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:um="using:Uno.Material"
					mc:Ignorable="ios macos">

	<x:String x:Key="MaterialRevealGlyphPathData">M11 0.5C6 0.5 1.73 3.61 0 8C1.73 12.39 6 15.5 11 15.5C16 15.5 20.27 12.39 22 8C20.27 3.61 16 0.5 11 0.5ZM11 13C8.24 13 6 10.76 6 8C6 5.24 8.24 3 11 3C13.76 3 16 5.24 16 8C16 10.76 13.76 13 11 13ZM11 5C9.34 5 8 6.34 8 8C8 9.66 9.34 11 11 11C12.66 11 14 9.66 14 8C14 6.34 12.66 5 11 5Z</x:String>

	<SolidColorBrush x:Key="MaterialDisabledOutlinedPasswordBoxBorderBrush"
					 Opacity="0.12"
					 Color="{ThemeResource OnSurfaceColor}" />

	<!-- PasswordBox text based on Body Large Typo -->
	<StaticResource x:Key="MaterialPasswordBoxFontFamily"
					ResourceKey="MaterialBodyLargeFontFamily" />
	<StaticResource x:Key="MaterialPasswordBoxFontWeight"
					ResourceKey="MaterialBodyLargeFontWeight" />
	<StaticResource x:Key="MaterialPasswordBoxFontSize"
					ResourceKey="MaterialBodyLargeFontSize" />
	<StaticResource x:Key="MaterialPasswordBoxCharacterSpacing"
					ResourceKey="MaterialBodyLargeCharacterSpacing" />

	<Style x:Key="MaterialRevealButtonStyle"
		   TargetType="Button">
		<Setter Property="Foreground"
				Value="{StaticResource OnSurfaceBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="ButtonLayoutGrid"
						  Background="Transparent">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver" />
								<VisualState x:Name="Pressed" />
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="ButtonLayoutGrid.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Path x:Name="GlyphElement"
							  Width="20"
							  HorizontalAlignment="Center"
							  VerticalAlignment="Center"
							  ios:Margin="0,2,0,0"
							  AutomationProperties.AccessibilityView="Raw"
							  Data="{StaticResource MaterialRevealGlyphPathData}"
							  Fill="{TemplateBinding Foreground}"
							  Stretch="Uniform" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialFilledPasswordBoxStyle"
		   TargetType="PasswordBox">
		<Setter Property="Foreground"
				Value="{StaticResource OnSurfaceVariantBrush}" />
		<Setter Property="Background"
				Value="{StaticResource SurfaceVariantBrush}" />
		<Setter Property="BorderBrush"
				Value="{StaticResource OnSurfaceLowBrush}" />
		<Setter Property="HorizontalContentAlignment"
				Value="Left" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="CornerRadius"
				Value="4,4,0,0" />

		<!-- Start: Body Large Typo -->
		<Setter Property="FontFamily"
				Value="{StaticResource MaterialPasswordBoxFontFamily}" />
		<Setter Property="FontWeight"
				Value="{StaticResource MaterialPasswordBoxFontWeight}" />
		<Setter Property="FontSize"
				Value="{StaticResource MaterialPasswordBoxFontSize}" />
		<Setter Property="CharacterSpacing"
				Value="{StaticResource MaterialPasswordBoxCharacterSpacing}" />
		<!-- End: Body Large Typo -->

		<Setter Property="Padding"
				Value="16,4,8,4" />
		<Setter Property="MinHeight"
				Value="58" />

		<!--  Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388  -->
		<Setter Property="um:ControlExtensions.Icon"
				Value="{x:Null}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="PasswordBox">
					<Grid x:Name="Root"
						  Background="{TemplateBinding Background}"
						  CornerRadius="{TemplateBinding CornerRadius}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />

								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="NormalBorder.Fill"
												Value="{StaticResource OnSurfaceBrush}" />
										<Setter Target="NormalBorder.Height"
												Value="2" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Pressed" />

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="NormalBorder.Fill"
												Value="{StaticResource OnSurfaceLowBrush}" />
										<Setter Target="ContentElement.Opacity"
												Value="{StaticResource DisabledOpacity}" />
										<Setter Target="PlaceholderElement.Foreground"
												Value="{StaticResource OnSurfaceLowBrush}" />
										<Setter Target="Root.Background"
												Value="{StaticResource OnSurfaceDisabledLowBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="PlaceholderElement.Foreground"
												Value="{StaticResource PrimaryBrush}" />
										<Setter Target="NormalBorder.Fill"
												Value="{StaticResource PrimaryBrush}" />
										<Setter Target="NormalBorder.Height"
												Value="2" />
									</VisualState.Setters>

									<Storyboard>
										<DoubleAnimation EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 Storyboard.TargetName="Scale"
														 Storyboard.TargetProperty="ScaleX"
														 To="1"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="ButtonStates">

								<VisualState x:Name="ButtonVisible">
									<VisualState.Setters>
										<Setter Target="RevealButton.Visibility"
												Value="Visible" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="ButtonCollapsed" />
							</VisualStateGroup>

							<VisualStateGroup x:Name="HeaderStates">

								<VisualState x:Name="NotEmpty">
									<Storyboard>
										<DoubleAnimation EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 Storyboard.TargetName="Transform"
														 Storyboard.TargetProperty="TranslateY"
														 To="-11"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}" />
										<DoubleAnimation EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 Storyboard.TargetName="ContentTransform"
														 Storyboard.TargetProperty="TranslateY"
														 To="8"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}" />
										<DoubleAnimation EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 Storyboard.TargetName="Transform"
														 Storyboard.TargetProperty="ScaleX"
														 To="0.7"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}" />
										<DoubleAnimation EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 Storyboard.TargetName="Transform"
														 Storyboard.TargetProperty="ScaleY"
														 To="0.7"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}" />
									</Storyboard>

									<VisualState.StateTriggers>
										<StateTrigger IsActive="{Binding Password, Converter={StaticResource MaterialEmptyToFalse}, RelativeSource={RelativeSource TemplatedParent}}" />
									</VisualState.StateTriggers>
								</VisualState>

								<VisualState x:Name="Empty">
									<VisualState.StateTriggers>
										<StateTrigger IsActive="{Binding Password, Converter={StaticResource MaterialEmptyToTrue}, RelativeSource={RelativeSource TemplatedParent}}" />
									</VisualState.StateTriggers>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid Padding="{TemplateBinding Padding}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>

							<ContentPresenter x:Name="IconPresenter"
											  MinWidth="25"
											  MaxWidth="34"
											  MaxHeight="34"
											  Margin="0,0,8,0"
											  HorizontalAlignment="Center"
											  VerticalAlignment="Center"
											  Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
											  Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />

							<ScrollViewer x:Name="ContentElement"
										  Grid.Column="1"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  AutomationProperties.AccessibilityView="Raw"
										  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
										  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
										  IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
										  IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
										  IsTabStop="False"
										  IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
										  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
										  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
										  ZoomMode="Disabled">
								<ScrollViewer.RenderTransform>
									<CompositeTransform x:Name="ContentTransform" />
								</ScrollViewer.RenderTransform>
							</ScrollViewer>

							<TextBlock x:Name="PlaceholderElement"
									   Grid.Column="1"
									   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									   Foreground="{StaticResource OnSurfaceVariantBrush}"
									   IsHitTestVisible="False"
									   RenderTransformOrigin="0,0.5"
									   Text="{TemplateBinding PlaceholderText}">
								<TextBlock.RenderTransform>
									<CompositeTransform x:Name="Transform" />
								</TextBlock.RenderTransform>
							</TextBlock>

							<Button x:Name="RevealButton"
									Grid.Column="2"
									MinWidth="34"
									MinHeight="34"
									VerticalAlignment="Stretch"
									AutomationProperties.AccessibilityView="Raw"
									IsTabStop="False"
									Foreground="{StaticResource OnSurfaceVariantBrush}"
									Style="{StaticResource MaterialRevealButtonStyle}"
									Visibility="Collapsed" />
						</Grid>

						<Rectangle x:Name="NormalBorder"
								   Grid.ColumnSpan="3"
								   Height="{StaticResource TextBoxOutlinedStrokeHeight}"
								   VerticalAlignment="Bottom"
								   Fill="{TemplateBinding BorderBrush}" />

						<Rectangle x:Name="FocusedBorder"
								   Grid.ColumnSpan="3"
								   Height="{StaticResource TextBoxFocusStrokeWidth}"
								   VerticalAlignment="Bottom"
								   macos:RenderTransformOrigin="0.0,0.5"
								   not_macos:RenderTransformOrigin="0.5,0.5"
								   Fill="{StaticResource PrimaryBrush}">
							<Rectangle.RenderTransform>
								<ScaleTransform x:Name="Scale"
												ScaleX="0" />
							</Rectangle.RenderTransform>
						</Rectangle>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialOutlinedPasswordBoxStyle"
		   TargetType="PasswordBox">
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="Foreground"
				Value="{StaticResource OnSurfaceBrush}" />
		<Setter Property="BorderBrush"
				Value="{StaticResource OnSurfaceLowBrush}" />
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="CornerRadius"
				Value="4" />

		<!-- Start: Body Large Typo -->
		<Setter Property="FontFamily"
				Value="{StaticResource MaterialPasswordBoxFontFamily}" />
		<Setter Property="FontWeight"
				Value="{StaticResource MaterialPasswordBoxFontWeight}" />
		<Setter Property="FontSize"
				Value="{StaticResource MaterialPasswordBoxFontSize}" />
		<Setter Property="CharacterSpacing"
				Value="{StaticResource MaterialPasswordBoxCharacterSpacing}" />
		<!-- End: Body Large Typo -->

		<Setter Property="HorizontalContentAlignment"
				Value="Left" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Padding"
				Value="16,4,8,4" />
		<Setter Property="MinHeight"
				Value="56" />

		<!--  Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388  -->
		<Setter Property="um:ControlExtensions.Icon"
				Value="{x:Null}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="PasswordBox">
					<Grid x:Name="Root"
						  Padding="{TemplateBinding Padding}"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  CornerRadius="{TemplateBinding CornerRadius}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />

								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="Root.BorderBrush"
												Value="{StaticResource OnSurfaceBrush}" />
										<Setter Target="Root.BorderThickness"
												Value="2" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Pressed" />

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="Root.BorderBrush"
												Value="{StaticResource OnSurfaceDisabledLowBrush}" />
										<Setter Target="ContentElement.Opacity"
												Value="{StaticResource DisabledOpacity}" />
										<Setter Target="PlaceholderElement.Foreground"
												Value="{StaticResource OnSurfaceLowBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="Root.BorderBrush"
												Value="{StaticResource PrimaryBrush}" />
										<Setter Target="PlaceholderElement.Foreground"
												Value="{StaticResource PrimaryBrush}" />
										<Setter Target="Root.BorderThickness"
												Value="2" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="ButtonStates">

								<VisualState x:Name="ButtonVisible">
									<VisualState.Setters>
										<Setter Target="RevealButton.Visibility"
												Value="Visible" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="ButtonCollapsed" />
							</VisualStateGroup>

							<VisualStateGroup x:Name="HeaderStates">

								<VisualState x:Name="NotEmpty">
									<Storyboard>
										<DoubleAnimation EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 Storyboard.TargetName="Transform"
														 Storyboard.TargetProperty="TranslateY"
														 To="-11"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}" />
										<DoubleAnimation EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 Storyboard.TargetName="ContentTransform"
														 Storyboard.TargetProperty="TranslateY"
														 To="8"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}" />
										<DoubleAnimation EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 Storyboard.TargetName="Transform"
														 Storyboard.TargetProperty="ScaleX"
														 To="0.7"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}" />
										<DoubleAnimation EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 Storyboard.TargetName="Transform"
														 Storyboard.TargetProperty="ScaleY"
														 To="0.7"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}" />
									</Storyboard>

									<VisualState.StateTriggers>
										<StateTrigger IsActive="{Binding Password, Converter={StaticResource MaterialEmptyToFalse}, RelativeSource={RelativeSource TemplatedParent}}" />
									</VisualState.StateTriggers>
								</VisualState>

								<VisualState x:Name="Empty">
									<VisualState.StateTriggers>
										<StateTrigger IsActive="{Binding Password, Converter={StaticResource MaterialEmptyToTrue}, RelativeSource={RelativeSource TemplatedParent}}" />
									</VisualState.StateTriggers>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>

						<ContentPresenter x:Name="IconPresenter"
										  MinWidth="25"
										  MaxWidth="34"
										  MaxHeight="34"
										  Margin="0,0,8,0"
										  HorizontalAlignment="Center"
										  VerticalAlignment="Center"
										  Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
										  Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />

						<ScrollViewer x:Name="ContentElement"
									  Grid.Column="1"
									  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									  AutomationProperties.AccessibilityView="Raw"
									  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
									  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
									  IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
									  IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
									  IsTabStop="False"
									  IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
									  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
									  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
									  ZoomMode="Disabled">
							<ScrollViewer.RenderTransform>
								<CompositeTransform x:Name="ContentTransform" />
							</ScrollViewer.RenderTransform>
						</ScrollViewer>

						<TextBlock x:Name="PlaceholderElement"
								   Grid.Column="1"
								   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								   Foreground="{StaticResource OnSurfaceLowBrush}"
								   IsHitTestVisible="False"
								   RenderTransformOrigin="0,0.5"
								   Text="{TemplateBinding PlaceholderText}">
							<TextBlock.RenderTransform>
								<CompositeTransform x:Name="Transform" />
							</TextBlock.RenderTransform>
						</TextBlock>

						<Button x:Name="RevealButton"
								Grid.Column="2"
								MinWidth="34"
								MinHeight="34"
								VerticalAlignment="Stretch"
								AutomationProperties.AccessibilityView="Raw"
								IsTabStop="False"
								Style="{StaticResource MaterialRevealButtonStyle}"
								Visibility="Collapsed" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
