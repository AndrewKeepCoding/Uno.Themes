<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:um="using:Uno.Material"
					xmlns:toolkit="using:Uno.UI.Toolkit"
					xmlns:not_win="http://uno.ui/not_win"
					mc:Ignorable="d not_win">

	<!-- Converters -->
	<um:FromNullToValueConverter x:Key="M3MaterialNullToTextButtonMarginConverter"
								 NotNullValue="0,0,2,0"
								 NullValue="0" />

	<!-- Documented variables -->
	<Thickness x:Key="M3MaterialButtonMinHeight">40</Thickness>
	<Thickness x:Key="M3MaterialButtonMinWidth">48</Thickness>
	<Thickness x:Key="M3MaterialButtonPadding">16,0</Thickness>
	<Thickness x:Key="M3MaterialTextButtonPadding">12,0</Thickness>
	<CornerRadius x:Key="M3MaterialButtonCornerRadius">20</CornerRadius>
	<!-- Text button label based on Label Large Typo -->
	<x:Double x:Key="M3MaterialButtonFontSize">14</x:Double>
	<x:Double x:Key="M3MaterialButtonCharacterSpacing">7.143</x:Double>

	<!-- ELEVATED -->
	<Style x:Key="M3MaterialElevatedButtonStyle"
		   TargetType="Button">

		<Setter Property="Foreground"
				Value="{StaticResource PrimaryBrush}" />
		<Setter Property="Background"
				Value="{StaticResource SurfaceBrush}" />

		<!--Start: Label Large Typo-->
		<Setter Property="FontSize"
				Value="{StaticResource M3MaterialButtonFontSize}" />
		<Setter Property="FontWeight"
				Value="Medium" />
		<Setter Property="FontFamily"
				Value="{StaticResource MaterialMediumFontFamily}" />
		<Setter Property="CharacterSpacing"
				Value="{StaticResource M3MaterialButtonCharacterSpacing}" />
		<!--End: Label Large Typo-->

		<Setter Property="MinHeight"
				Value="{StaticResource M3MaterialButtonMinHeight}" />
		<Setter Property="MinWidth"
				Value="{StaticResource M3MaterialButtonMinWidth}" />
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="Padding"
				Value="{StaticResource M3MaterialButtonPadding}" />
		<Setter Property="CornerRadius"
				Value="{StaticResource M3MaterialButtonCornerRadius}" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />

		<!-- Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388 -->
		<Setter Property="um:ControlExtensions.Icon"
				Value="{x:Null}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">

					<toolkit:ElevatedView x:Name="ElevatedView"
										  Margin="0,0,0,1"
										  Elevation="1"
										  CornerRadius="{TemplateBinding CornerRadius}"
										  Background="Transparent">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">

								<VisualState x:Name="Normal" />

								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="StateLayer.Background"
												Value="{StaticResource PrimaryHoverBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="StateLayer.Background"
												Value="{StaticResource PrimaryPressedBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="Root.Background"
												Value="{StaticResource OnSurfaceDisabledLowBrush}" />
										<Setter Target="IconPresenter.Foreground"
												Value="{StaticResource OnSurfaceDisabledBrush}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{StaticResource OnSurfaceDisabledBrush}" />
										<Setter Target="ElevatedView.Margin"
												Value="0" />
										<Setter Target="ElevatedView.Elevation"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="FocusStates">

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="StateLayer.Background"
												Value="{StaticResource PrimaryFocusedBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerFocused">
									<VisualState.Setters>
										<Setter Target="StateLayer.Background"
												Value="{StaticResource PrimaryFocusedBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid x:Name="Root"
							  Background="{TemplateBinding Background}"
							  BorderBrush="{TemplateBinding BorderBrush}"
							  BorderThickness="{TemplateBinding BorderThickness}"
							  CornerRadius="{TemplateBinding CornerRadius}">

							<Border x:Name="StateLayer"
									Background="Transparent"
									CornerRadius="{TemplateBinding CornerRadius}" />

							<um:Ripple x:Name="Ripple"
									   Feedback="{TemplateBinding Foreground}"
									   FeedbackOpacity="{StaticResource PressedOpacity}"
									   CornerRadius="{TemplateBinding CornerRadius}"
									   Padding="{TemplateBinding Padding}"
									   AutomationProperties.AccessibilityView="Raw"
									   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
									   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}">
								<um:Ripple.Content>
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="*" />
										</Grid.ColumnDefinitions>

										<ContentPresenter x:Name="IconPresenter"
														  Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
														  MinWidth="18"
														  HorizontalAlignment="Stretch"
														  VerticalAlignment="Stretch"
														  Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}"
														  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
														  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />

										<ContentPresenter x:Name="ContentPresenter"
														  Grid.Column="1"
														  Margin="8,0"
														  Content="{TemplateBinding Content}"
														  ContentTemplate="{TemplateBinding ContentTemplate}"
														  ContentTransitions="{TemplateBinding ContentTransitions}"
														  FontFamily="{TemplateBinding FontFamily}"
														  FontSize="{TemplateBinding FontSize}"
														  FontWeight="{TemplateBinding FontWeight}"
														  CharacterSpacing="{TemplateBinding CharacterSpacing}"
														  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
														  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
									</Grid>
								</um:Ripple.Content>
							</um:Ripple>
						</Grid>
					</toolkit:ElevatedView>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- FILLED -->
	<Style x:Key="M3MaterialFilledButtonStyle"
		   TargetType="Button">

		<Setter Property="Foreground"
				Value="{StaticResource OnPrimaryBrush}" />
		<Setter Property="Background"
				Value="{StaticResource PrimaryBrush}" />

		<!--Start: Label Large Typo-->
		<Setter Property="FontSize"
				Value="{StaticResource M3MaterialButtonFontSize}" />
		<Setter Property="FontWeight"
				Value="Medium" />
		<Setter Property="FontFamily"
				Value="{StaticResource MaterialMediumFontFamily}" />
		<Setter Property="CharacterSpacing"
				Value="{StaticResource M3MaterialButtonCharacterSpacing}" />
		<!--End: Label Large Typo-->

		<Setter Property="MinHeight"
				Value="{StaticResource M3MaterialButtonMinHeight}" />
		<Setter Property="MinWidth"
				Value="{StaticResource M3MaterialButtonMinWidth}" />
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="Padding"
				Value="{StaticResource M3MaterialButtonPadding}" />
		<Setter Property="CornerRadius"
				Value="{StaticResource M3MaterialButtonCornerRadius}" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />

		<!-- Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388 -->
		<Setter Property="um:ControlExtensions.Icon"
				Value="{x:Null}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">

					<toolkit:ElevatedView x:Name="ElevatedView"
										  Margin="0"
										  Elevation="0"
										  CornerRadius="{TemplateBinding CornerRadius}"
										  Background="Transparent">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">

								<VisualState x:Name="Normal" />

								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="StateLayer.Background"
												Value="{StaticResource OnPrimaryHoverBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="StateLayer.Background"
												Value="{StaticResource OnPrimaryPressedBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="Root.Background"
												Value="{StaticResource OnSurfaceDisabledLowBrush}" />
										<Setter Target="IconPresenter.Foreground"
												Value="{StaticResource OnSurfaceDisabledBrush}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{StaticResource OnSurfaceDisabledBrush}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="FocusStates">

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="StateLayer.Background"
												Value="{StaticResource OnPrimaryFocusedBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerFocused">
									<VisualState.Setters>
										<Setter Target="StateLayer.Background"
												Value="{StaticResource OnPrimaryFocusedBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid x:Name="Root"
							  Background="{TemplateBinding Background}"
							  BorderBrush="{TemplateBinding BorderBrush}"
							  BorderThickness="{TemplateBinding BorderThickness}"
							  CornerRadius="{TemplateBinding CornerRadius}">

							<Border x:Name="StateLayer"
									Background="Transparent"
									CornerRadius="{TemplateBinding CornerRadius}" />

							<um:Ripple x:Name="Ripple"
									   Feedback="{TemplateBinding Foreground}"
									   FeedbackOpacity="{StaticResource PressedOpacity}"
									   CornerRadius="{TemplateBinding CornerRadius}"
									   Padding="{TemplateBinding Padding}"
									   AutomationProperties.AccessibilityView="Raw"
									   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
									   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}">
								<um:Ripple.Content>
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="*" />
										</Grid.ColumnDefinitions>

										<ContentPresenter x:Name="IconPresenter"
														  Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
														  MinWidth="18"
														  HorizontalAlignment="Stretch"
														  VerticalAlignment="Stretch"
														  Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}"
														  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
														  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />

										<ContentPresenter x:Name="ContentPresenter"
														  Grid.Column="1"
														  Margin="8,0"
														  Content="{TemplateBinding Content}"
														  ContentTemplate="{TemplateBinding ContentTemplate}"
														  ContentTransitions="{TemplateBinding ContentTransitions}"
														  FontFamily="{TemplateBinding FontFamily}"
														  FontSize="{TemplateBinding FontSize}"
														  FontWeight="{TemplateBinding FontWeight}"
														  CharacterSpacing="{TemplateBinding CharacterSpacing}"
														  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
														  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
									</Grid>
								</um:Ripple.Content>
							</um:Ripple>
						</Grid>
					</toolkit:ElevatedView>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- FILLED TONAL-->
	<Style x:Key="M3MaterialFilledTonalButtonStyle"
		   TargetType="Button">

		<Setter Property="Foreground"
				Value="{StaticResource OnSecondaryContainerBrush}" />
		<Setter Property="Background"
				Value="{StaticResource SecondaryContainerBrush}" />

		<!--Start: Label Large Typo-->
		<Setter Property="FontSize"
				Value="{StaticResource M3MaterialButtonFontSize}" />
		<Setter Property="FontWeight"
				Value="Medium" />
		<Setter Property="FontFamily"
				Value="{StaticResource MaterialMediumFontFamily}" />
		<Setter Property="CharacterSpacing"
				Value="{StaticResource M3MaterialButtonCharacterSpacing}" />
		<!--End: Label Large Typo-->

		<Setter Property="MinHeight"
				Value="{StaticResource M3MaterialButtonMinHeight}" />
		<Setter Property="MinWidth"
				Value="{StaticResource M3MaterialButtonMinWidth}" />
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="Padding"
				Value="{StaticResource M3MaterialButtonPadding}" />
		<Setter Property="CornerRadius"
				Value="{StaticResource M3MaterialButtonCornerRadius}" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />

		<!-- Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388 -->
		<Setter Property="um:ControlExtensions.Icon"
				Value="{x:Null}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">

					<toolkit:ElevatedView x:Name="ElevatedView"
										  Margin="0"
										  Elevation="0"
										  CornerRadius="{TemplateBinding CornerRadius}"
										  Background="Transparent">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">

								<VisualState x:Name="Normal" />

								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="StateLayer.Background"
												Value="{StaticResource OnSecondaryContainerHoverBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="StateLayer.Background"
												Value="{StaticResource OnSecondaryContainerPressedBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="Root.Background"
												Value="{StaticResource OnSurfaceDisabledLowBrush}" />
										<Setter Target="IconPresenter.Foreground"
												Value="{StaticResource OnSurfaceDisabledBrush}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{StaticResource OnSurfaceDisabledBrush}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="FocusStates">

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="StateLayer.Background"
												Value="{StaticResource OnSecondaryContainerFocusedBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerFocused">
									<VisualState.Setters>
										<Setter Target="StateLayer.Background"
												Value="{StaticResource OnSecondaryContainerFocusedBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid x:Name="Root"
							  Background="{TemplateBinding Background}"
							  BorderBrush="{TemplateBinding BorderBrush}"
							  BorderThickness="{TemplateBinding BorderThickness}"
							  CornerRadius="{TemplateBinding CornerRadius}">

							<Border x:Name="StateLayer"
									Background="Transparent"
									CornerRadius="{TemplateBinding CornerRadius}" />

							<um:Ripple x:Name="Ripple"
									   Feedback="{TemplateBinding Foreground}"
									   FeedbackOpacity="{StaticResource PressedOpacity}"
									   CornerRadius="{TemplateBinding CornerRadius}"
									   Padding="{TemplateBinding Padding}"
									   AutomationProperties.AccessibilityView="Raw"
									   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
									   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}">
								<um:Ripple.Content>
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="*" />
										</Grid.ColumnDefinitions>

										<ContentPresenter x:Name="IconPresenter"
														  Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
														  MinWidth="18"
														  HorizontalAlignment="Stretch"
														  VerticalAlignment="Stretch"
														  Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}"
														  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
														  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />

										<ContentPresenter x:Name="ContentPresenter"
														  Grid.Column="1"
														  Margin="8,0"
														  Content="{TemplateBinding Content}"
														  ContentTemplate="{TemplateBinding ContentTemplate}"
														  ContentTransitions="{TemplateBinding ContentTransitions}"
														  FontFamily="{TemplateBinding FontFamily}"
														  FontSize="{TemplateBinding FontSize}"
														  FontWeight="{TemplateBinding FontWeight}"
														  CharacterSpacing="{TemplateBinding CharacterSpacing}"
														  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
														  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
									</Grid>
								</um:Ripple.Content>
							</um:Ripple>
						</Grid>
					</toolkit:ElevatedView>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- OUTLINED-->
	<Style x:Key="M3MaterialOutlinedButtonStyle"
		   TargetType="Button">

		<Setter Property="Foreground"
				Value="{StaticResource PrimaryBrush}" />
		<Setter Property="Background"
				Value="{StaticResource SurfaceBrush}" />

		<!--Start: Label Large Typo-->
		<Setter Property="FontSize"
				Value="{StaticResource M3MaterialButtonFontSize}" />
		<Setter Property="FontWeight"
				Value="Medium" />
		<Setter Property="FontFamily"
				Value="{StaticResource MaterialMediumFontFamily}" />
		<Setter Property="CharacterSpacing"
				Value="{StaticResource M3MaterialButtonCharacterSpacing}" />
		<!--End: Label Large Typo-->

		<Setter Property="MinHeight"
				Value="{StaticResource M3MaterialButtonMinHeight}" />
		<Setter Property="MinWidth"
				Value="{StaticResource M3MaterialButtonMinWidth}" />
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="BorderBrush"
				Value="{StaticResource OutlineBrush}" />
		<Setter Property="Padding"
				Value="{StaticResource M3MaterialButtonPadding}" />
		<Setter Property="CornerRadius"
				Value="{StaticResource M3MaterialButtonCornerRadius}" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />

		<!-- Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388 -->
		<Setter Property="um:ControlExtensions.Icon"
				Value="{x:Null}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">

					<Grid x:Name="Root"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  CornerRadius="{TemplateBinding CornerRadius}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">

								<VisualState x:Name="Normal" />

								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="StateLayer.Background"
												Value="{StaticResource PrimaryHoverBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="StateLayer.Background"
												Value="{StaticResource PrimaryPressedBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="Root.Background"
												Value="{StaticResource OnSurfaceDisabledLowBrush}" />
										<Setter Target="IconPresenter.Foreground"
												Value="{StaticResource OnSurfaceDisabledBrush}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{StaticResource OnSurfaceDisabledBrush}" />
										<Setter Target="Root.BorderThickness"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="FocusStates">

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="StateLayer.Background"
												Value="{StaticResource PrimaryFocusedBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerFocused">
									<VisualState.Setters>
										<Setter Target="StateLayer.Background"
												Value="{StaticResource PrimaryFocusedBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Border x:Name="StateLayer"
								Background="Transparent"
								CornerRadius="{TemplateBinding CornerRadius}" />

						<um:Ripple x:Name="Ripple"
								   Feedback="{TemplateBinding Foreground}"
								   FeedbackOpacity="{StaticResource PressedOpacity}"
								   CornerRadius="{TemplateBinding CornerRadius}"
								   Padding="{TemplateBinding Padding}"
								   AutomationProperties.AccessibilityView="Raw"
								   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
								   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}">
							<um:Ripple.Content>
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>

									<ContentPresenter x:Name="IconPresenter"
													  Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
													  MinWidth="18"
													  HorizontalAlignment="Stretch"
													  VerticalAlignment="Stretch"
													  Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}"
													  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
													  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />

									<ContentPresenter x:Name="ContentPresenter"
													  Grid.Column="1"
													  Margin="8,0"
													  Content="{TemplateBinding Content}"
													  ContentTemplate="{TemplateBinding ContentTemplate}"
													  ContentTransitions="{TemplateBinding ContentTransitions}"
													  FontFamily="{TemplateBinding FontFamily}"
													  FontSize="{TemplateBinding FontSize}"
													  FontWeight="{TemplateBinding FontWeight}"
													  CharacterSpacing="{TemplateBinding CharacterSpacing}"
													  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
													  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
								</Grid>
							</um:Ripple.Content>
						</um:Ripple>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- TEXT -->
	<Style x:Key="M3MaterialTextButtonStyle"
		   TargetType="Button">

		<Setter Property="Foreground"
				Value="{StaticResource PrimaryBrush}" />
		<Setter Property="Background"
				Value="Transparent" />

		<!--Start: Label Large Typo-->
		<Setter Property="FontSize"
				Value="{StaticResource M3MaterialButtonFontSize}" />
		<Setter Property="FontWeight"
				Value="Medium" />
		<Setter Property="FontFamily"
				Value="{StaticResource MaterialMediumFontFamily}" />
		<Setter Property="CharacterSpacing"
				Value="{StaticResource M3MaterialButtonCharacterSpacing}" />
		<!--End: Label Large Typo-->

		<Setter Property="MinHeight"
				Value="{StaticResource M3MaterialButtonMinHeight}" />
		<Setter Property="MinWidth"
				Value="{StaticResource M3MaterialButtonMinWidth}" />
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="Padding"
				Value="{StaticResource M3MaterialTextButtonPadding}" />
		<Setter Property="CornerRadius"
				Value="{StaticResource M3MaterialButtonCornerRadius}" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />

		<!-- Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388 -->
		<Setter Property="um:ControlExtensions.Icon"
				Value="{x:Null}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">

					<Grid x:Name="Root"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  CornerRadius="{TemplateBinding CornerRadius}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">

								<VisualState x:Name="Normal" />

								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="StateLayer.Background"
												Value="{StaticResource PrimaryHoverBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="StateLayer.Background"
												Value="{StaticResource PrimaryPressedBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="IconPresenter.Foreground"
												Value="{StaticResource OnSurfaceDisabledBrush}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{StaticResource OnSurfaceDisabledBrush}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="FocusStates">

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="StateLayer.Background"
												Value="{StaticResource PrimaryFocusedBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerFocused">
									<VisualState.Setters>
										<Setter Target="StateLayer.Background"
												Value="{StaticResource PrimaryFocusedBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Border x:Name="StateLayer"
								Background="Transparent"
								CornerRadius="{TemplateBinding CornerRadius}" />

						<um:Ripple x:Name="Ripple"
								   Feedback="{TemplateBinding Foreground}"
								   FeedbackOpacity="{StaticResource PressedOpacity}"
								   CornerRadius="{TemplateBinding CornerRadius}"
								   Padding="{TemplateBinding Padding}"
								   AutomationProperties.AccessibilityView="Raw"
								   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
								   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}">
							<um:Ripple.Content>
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>

									<ContentPresenter x:Name="IconPresenter"
													  Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
													  MinWidth="18"
													  Margin="0,0,8,0"
													  HorizontalAlignment="Stretch"
													  VerticalAlignment="Stretch"
													  Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}"
													  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
													  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />

									<ContentPresenter x:Name="ContentPresenter"
													  Grid.Column="1"
													  Margin="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource M3MaterialNullToTextButtonMarginConverter}, FallbackValue=0, TargetNullValue=0}"
													  Content="{TemplateBinding Content}"
													  ContentTemplate="{TemplateBinding ContentTemplate}"
													  ContentTransitions="{TemplateBinding ContentTransitions}"
													  FontFamily="{TemplateBinding FontFamily}"
													  FontSize="{TemplateBinding FontSize}"
													  FontWeight="{TemplateBinding FontWeight}"
													  CharacterSpacing="{TemplateBinding CharacterSpacing}"
													  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
													  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
								</Grid>
							</um:Ripple.Content>
						</um:Ripple>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ICON BUTTON -->
	<Style x:Key="M3MaterialIconButtonStyle"
		   TargetType="Button">
		<Setter Property="Foreground"
				Value="{StaticResource OnSurfaceBrush}" />
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="MinHeight"
				Value="40" />
		<Setter Property="MinWidth"
				Value="40" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="RootGrid"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="PressedOverlay.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="ContentPresenter.Foreground"
												Value="{StaticResource OnSurfaceLowBrush}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<!-- Ellipse for PointedOver State -->
						<Ellipse x:Name="HoverOverlay"
								 HorizontalAlignment="Stretch"
								 VerticalAlignment="Stretch"
								 Fill="{StaticResource PrimaryHoverBrush}"
								 Opacity="0" />

						<!-- Ellipse for Pressed State -->
						<Ellipse x:Name="PressedOverlay"
								 HorizontalAlignment="Stretch"
								 VerticalAlignment="Stretch"
								 Fill="{StaticResource PrimaryPressedBrush}"
								 Opacity="0" />

						<!-- Ellipse for Focused State -->
						<Ellipse x:Name="FocusedOverlay"
								 HorizontalAlignment="Stretch"
								 VerticalAlignment="Stretch"
								 Fill="{StaticResource PrimaryFocusedBrush}"
								 Opacity="0" />

						<!-- Content -->
						<ContentPresenter x:Name="ContentPresenter"
										  AutomationProperties.AccessibilityView="Raw"
										  Content="{TemplateBinding Content}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
