<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:um="using:Uno.Material"
					xmlns:media="using:Microsoft.UI.Xaml.Media"
					xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
					xmlns:primitives="using:Microsoft.UI.Xaml.Controls.Primitives"
					xmlns:skia="http://uno.ui/skia"
					xmlns:xamarin="http://uno.ui/xamarin"
					xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:contract4Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:contract4NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,4)"
					xmlns:contract7Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:contract7NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,7)"
					xmlns:primitiveContract7Present="using:Microsoft.UI.Xaml.Controls.Primitives"
					mc:Ignorable="skia xamarin contract4NotPresent contract7NotPresent">

	<!--
		Source taken/modified from: https://github.com/unoplatform/uno/tree/2e4c84310d8f88f24d2cae284cec8f5c93375a22
		- src\Uno.UI\Microsoft\UI\Xaml\Controls\NavigationView\NavigationView.xaml
		- src\Uno.UI\Microsoft\UI\Xaml\Controls\NavigationView\NavigationView_rs1_themeresources.xaml
		- src\Uno.UI\UI\Xaml\Style\Generic\Generic.xaml (SplitView)
	-->
	<!--
		https://developercommunity.visualstudio.com/content/problem/937077/conditional-xaml-does-not-work-with-setters.html
		note: conditional xmlns on Style\Setter doesnt work on uwp
		since we are targetting at least uwp v1903 (UniversalApiContract: 8), the conditionals are no longer needed:
		- ?IsApiContractPresent: removed
		- ?IsApiContractNotPresent: ignored
	-->

	<!--#region ThemeResources-->

	<ResourceDictionary.ThemeDictionaries>
		<ResourceDictionary x:Key="Dark">
			<StaticResource x:Key="M3MaterialNavigationViewDefaultPaneBackground" ResourceKey="SurfaceBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewExpandedPaneBackground" ResourceKey="SurfaceBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewTopPaneBackground" ResourceKey="SurfaceBrush" />

			<StaticResource x:Key="M3MaterialNavigationViewItemBackground" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundPointerOver" ResourceKey="OnSurfaceHoverBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundPressed" ResourceKey="OnSecondaryContainerPressedBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundChecked" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundCheckedPointerOver" ResourceKey="SystemControlHighlightListLowBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundCheckedPressed" ResourceKey="SystemControlHighlightListMediumBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundCheckedDisabled" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundSelected" ResourceKey="SecondaryContainerBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundSelectedPointerOver" ResourceKey="OnSecondaryContainerHoverBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundSelectedPressed" ResourceKey="OnSecondaryContainerPressedBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundSelectedDisabled" ResourceKey="SystemControlTransparentBrush" />

			<StaticResource x:Key="M3MaterialNavigationViewItemForeground" ResourceKey="OnSurfaceVariantBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundPointerOver" ResourceKey="OnSurfaceBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundPressed" ResourceKey="OnSecondaryContainerBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundChecked" ResourceKey="OnSecondaryContainerBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundCheckedPointerOver" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundCheckedPressed" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundCheckedDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundSelected" ResourceKey="OnSecondaryContainerBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundSelectedPointerOver" ResourceKey="OnSecondaryContainerBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundSelectedPressed" ResourceKey="OnSecondaryContainerBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundSelectedDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />

			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrush" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushPointerOver" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushPressed" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushChecked" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushCheckedPointerOver" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushCheckedPressed" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushCheckedDisabled" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushSelected" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushSelectedPressed" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushSelectedDisabled" ResourceKey="SystemControlTransparentBrush" />

			<StaticResource x:Key="M3MaterialNavigationViewItemSeparatorForeground" ResourceKey="SystemControlForegroundBaseLowBrush" />

			<StaticResource x:Key="M3MaterialNavigationViewSelectionIndicatorForeground" ResourceKey="SystemControlTransparentBrush" />

			<StaticResource x:Key="M3MaterialTopNavigationViewItemForeground" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
			<StaticResource x:Key="M3MaterialTopNavigationViewItemForegroundPointerOver" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
			<StaticResource x:Key="M3MaterialTopNavigationViewItemForegroundPressed" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
			<StaticResource x:Key="M3MaterialTopNavigationViewItemForegroundSelected" ResourceKey="OnSecondaryContainerBrush" />
			<StaticResource x:Key="M3MaterialTopNavigationViewItemForegroundDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />
			<StaticResource x:Key="M3MaterialTopNavigationViewItemBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialTopNavigationViewItemBackgroundPressed" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialTopNavigationViewItemBackgroundSelected" ResourceKey="SystemControlTransparentBrush" />

			<StaticResource x:Key="M3MaterialTopNavigationViewItemRevealBackgroundFocused" ResourceKey="SystemControlHighlightAccentBrush" />
			<StaticResource x:Key="M3MaterialTopNavigationViewItemRevealIconForegroundFocused" ResourceKey="SystemControlHighlightAltChromeWhiteBrush" />
			<StaticResource x:Key="M3MaterialTopNavigationViewItemRevealContentForegroundFocused" ResourceKey="SystemControlHighlightAltChromeWhiteBrush" />

			<StaticResource x:Key="M3MaterialTopNavigationViewItemSeparatorForeground" ResourceKey="SystemControlForegroundBaseLowBrush" />

			<StaticResource x:Key="M3MaterialNavigationViewButtonBackgroundPointerOver" ResourceKey="SystemControlHighlightListLowBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewButtonBackgroundPressed" ResourceKey="SystemControlHighlightListMediumBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewButtonBackgroundDisabled" ResourceKey="SystemControlBackgroundBaseLowBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewButtonForegroundPointerOver" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewButtonForegroundPressed" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewButtonForegroundDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />
		</ResourceDictionary>

		<ResourceDictionary x:Key="Light">
			<StaticResource x:Key="M3MaterialNavigationViewDefaultPaneBackground" ResourceKey="SurfaceBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewExpandedPaneBackground" ResourceKey="SurfaceBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewTopPaneBackground" ResourceKey="SurfaceBrush" />

			<StaticResource x:Key="M3MaterialNavigationViewItemBackground" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundPointerOver" ResourceKey="OnSurfaceHoverBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundPressed" ResourceKey="OnSecondaryContainerPressedBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundChecked" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundCheckedPointerOver" ResourceKey="SystemControlHighlightListLowBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundCheckedPressed" ResourceKey="SystemControlHighlightListMediumBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundCheckedDisabled" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundSelected" ResourceKey="SecondaryContainerBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundSelectedPointerOver" ResourceKey="OnSecondaryContainerHoverBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundSelectedPressed" ResourceKey="OnSecondaryContainerPressedBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundSelectedDisabled" ResourceKey="SystemControlTransparentBrush" />

			<StaticResource x:Key="M3MaterialNavigationViewItemForeground" ResourceKey="OnSurfaceVariantBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundPointerOver" ResourceKey="OnSurfaceBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundPressed" ResourceKey="OnSurfaceVariantBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundChecked" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundCheckedPointerOver" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundCheckedPressed" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundCheckedDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundSelected" ResourceKey="OnSecondaryContainerBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundSelectedPointerOver" ResourceKey="OnSecondaryContainerBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundSelectedPressed" ResourceKey="OnSecondaryContainerBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundSelectedDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />

			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrush" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushPointerOver" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushPressed" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushChecked" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushCheckedPointerOver" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushCheckedPressed" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushCheckedDisabled" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushSelected" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushSelectedPressed" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushSelectedDisabled" ResourceKey="SystemControlTransparentBrush" />

			<StaticResource x:Key="M3MaterialNavigationViewItemSeparatorForeground" ResourceKey="SystemControlForegroundBaseLowBrush" />

			<StaticResource x:Key="M3MaterialNavigationViewSelectionIndicatorForeground" ResourceKey="SystemControlTransparentBrush" />

			<StaticResource x:Key="M3MaterialTopNavigationViewItemForeground" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
			<StaticResource x:Key="M3MaterialTopNavigationViewItemForegroundPointerOver" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
			<StaticResource x:Key="M3MaterialTopNavigationViewItemForegroundPressed" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
			<StaticResource x:Key="M3MaterialTopNavigationViewItemForegroundSelected" ResourceKey="OnSecondaryContainerBrush" />
			<StaticResource x:Key="M3MaterialTopNavigationViewItemForegroundDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />
			<StaticResource x:Key="M3MaterialTopNavigationViewItemBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialTopNavigationViewItemBackgroundPressed" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialTopNavigationViewItemBackgroundSelected" ResourceKey="SystemControlTransparentBrush" />

			<StaticResource x:Key="M3MaterialTopNavigationViewItemRevealBackgroundFocused" ResourceKey="SystemControlHighlightAccentBrush" />
			<StaticResource x:Key="M3MaterialTopNavigationViewItemRevealIconForegroundFocused" ResourceKey="SystemControlHighlightAltChromeWhiteBrush" />
			<StaticResource x:Key="M3MaterialTopNavigationViewItemRevealContentForegroundFocused" ResourceKey="SystemControlHighlightAltChromeWhiteBrush" />

			<StaticResource x:Key="M3MaterialTopNavigationViewItemSeparatorForeground" ResourceKey="SystemControlForegroundBaseLowBrush" />

			<StaticResource x:Key="M3MaterialNavigationViewButtonBackgroundPointerOver" ResourceKey="SystemControlHighlightListLowBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewButtonBackgroundPressed" ResourceKey="SystemControlHighlightListMediumBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewButtonBackgroundDisabled" ResourceKey="SystemControlBackgroundBaseLowBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewButtonForegroundPointerOver" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewButtonForegroundPressed" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewButtonForegroundDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />
		</ResourceDictionary>

		<ResourceDictionary x:Key="HighContrast">
			<StaticResource x:Key="M3MaterialNavigationViewDefaultPaneBackground" ResourceKey="SurfaceBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewExpandedPaneBackground" ResourceKey="SystemColorWindowColor" />
			<StaticResource x:Key="M3MaterialNavigationViewTopPaneBackground" ResourceKey="SurfaceBrush" />

			<StaticResource x:Key="M3MaterialNavigationViewItemBackground" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundPointerOver" ResourceKey="OnSurfaceHoverBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundPressed" ResourceKey="OnSecondaryContainerPressedBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundDisabled" ResourceKey="SystemControlBackgroundBaseLowBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundChecked" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundCheckedPointerOver" ResourceKey="SystemControlHighlightListLowBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundCheckedPressed" ResourceKey="SystemControlHighlightListMediumBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundCheckedDisabled" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundSelected" ResourceKey="SecondaryContainerBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundSelectedPointerOver" ResourceKey="OnSecondaryContainerHoverBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundSelectedPressed" ResourceKey="OnSecondaryContainerPressedBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBackgroundSelectedDisabled" ResourceKey="SystemControlTransparentBrush" />

			<StaticResource x:Key="M3MaterialNavigationViewItemForeground" ResourceKey="OnSurfaceVariantBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundPointerOver" ResourceKey="OnSurfaceBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundPressed" ResourceKey="OnSurfaceVariantBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundChecked" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundCheckedPointerOver" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundCheckedPressed" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundCheckedDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundSelected" ResourceKey="OnSecondaryContainerBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundSelectedPointerOver" ResourceKey="OnSecondaryContainerBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundSelectedPressed" ResourceKey="OnSecondaryContainerBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemForegroundSelectedDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />

			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrush" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushPointerOver" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushPressed" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushChecked" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushCheckedPointerOver" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushCheckedPressed" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushCheckedDisabled" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushSelected" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushSelectedPressed" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewItemBorderBrushSelectedDisabled" ResourceKey="SystemControlTransparentBrush" />

			<StaticResource x:Key="M3MaterialNavigationViewItemSeparatorForeground" ResourceKey="SystemControlForegroundBaseLowBrush" />

			<StaticResource x:Key="M3MaterialNavigationViewSelectionIndicatorForeground" ResourceKey="SystemControlTransparentBrush" />

			<StaticResource x:Key="M3MaterialTopNavigationViewItemForeground" ResourceKey="M3MaterialNavigationViewItemForeground" />
			<StaticResource x:Key="M3MaterialTopNavigationViewItemForegroundPointerOver" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
			<StaticResource x:Key="M3MaterialTopNavigationViewItemForegroundPressed" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
			<StaticResource x:Key="M3MaterialTopNavigationViewItemForegroundSelected" ResourceKey="OnSecondaryContainerBrush" />
			<StaticResource x:Key="M3MaterialTopNavigationViewItemForegroundDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />
			<StaticResource x:Key="M3MaterialTopNavigationViewItemBackgroundPointerOver" ResourceKey="SystemControlHighlightAccentBrush" />
			<StaticResource x:Key="M3MaterialTopNavigationViewItemBackgroundPressed" ResourceKey="SystemControlHighlightAccentBrush" />
			<StaticResource x:Key="M3MaterialTopNavigationViewItemBackgroundSelected" ResourceKey="SystemControlHighlightAccentBrush" />

			<StaticResource x:Key="M3MaterialTopNavigationViewItemRevealBackgroundFocused" ResourceKey="SystemControlHighlightAccentBrush" />
			<StaticResource x:Key="M3MaterialTopNavigationViewItemRevealIconForegroundFocused" ResourceKey="SystemControlHighlightAltChromeWhiteBrush" />
			<StaticResource x:Key="M3MaterialTopNavigationViewItemRevealContentForegroundFocused" ResourceKey="SystemControlHighlightAltChromeWhiteBrush" />

			<StaticResource x:Key="M3MaterialTopNavigationViewItemSeparatorForeground" ResourceKey="SystemControlForegroundBaseLowBrush" />

			<StaticResource x:Key="M3MaterialNavigationViewButtonBackgroundPointerOver" ResourceKey="SystemControlHighlightListLowBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewButtonBackgroundPressed" ResourceKey="SystemControlHighlightListMediumBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewButtonBackgroundDisabled" ResourceKey="SystemControlBackgroundBaseLowBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewButtonForegroundPointerOver" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewButtonForegroundPressed" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
			<StaticResource x:Key="M3MaterialNavigationViewButtonForegroundDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />
		</ResourceDictionary>
	</ResourceDictionary.ThemeDictionaries>

	<Thickness x:Key="M3MaterialNavigationViewAutoSuggestBoxMargin">10,0,16,0</Thickness>
	<Thickness x:Key="M3MaterialTopNavigationViewAutoSuggestBoxMargin">12,0,12,0</Thickness>
	<x:Double x:Key="M3MaterialNavigationViewPaneToggleButtonSize">40</x:Double>
	<x:Double x:Key="M3MaterialNavigationViewPaneToggleButtonHeight">40</x:Double>
	<x:Double x:Key="M3MaterialNavigationViewPaneToggleButtonWidth">40</x:Double>
	<x:Double x:Key="M3MaterialNavigationViewCompactPaneLength">40</x:Double>
	<x:Double x:Key="M3MaterialNavigationViewTopPaneHeight">40</x:Double>
	<x:Double x:Key="M3MaterialTopNavigationViewPaneCustomContentMinWidth">48</x:Double>
	<x:Double x:Key="M3MaterialTopNavigationViewOverflowButtonWidth">48</x:Double>
	<x:Double x:Key="M3MaterialTopNavigationViewOverflowButtonHeight">40</x:Double>

	<x:Double x:Key="M3MaterialNavigationViewItemOnLeftMinHeight">40</x:Double>
	<x:Double x:Key="M3MaterialNavigationViewPaneHeaderRowMinHeight">4</x:Double>

	<x:Double x:Key="M3MaterialNavigationViewItemSeparatorHeight">1</x:Double>
	<x:Double x:Key="M3MaterialTopNavigationViewItemSeparatorWidth">1</x:Double>

	<Thickness x:Key="M3MaterialNavigationViewToggleBorderThickness">1</Thickness>
	<Thickness x:Key="M3MaterialNavigationViewItemBorderThickness">1</Thickness>
	<Thickness x:Key="M3MaterialNavigationViewItemOnLeftIconBoxMargin">12,0,12,0</Thickness>
	<Thickness x:Key="M3MaterialNavigationViewItemInnerHeaderMargin">10,0,0,0</Thickness>
	<Thickness x:Key="M3MaterialNavigationViewMinimalHeaderMargin">8,5,0,0</Thickness>
	<Thickness x:Key="M3MaterialNavigationViewHeaderMargin">12,5,0,11</Thickness>
	<Thickness x:Key="M3MaterialNavigationViewPaneTitlePresenterMargin">8,4,0,0</Thickness>
	<Thickness x:Key="M3MaterialNavigationViewItemMargin">0</Thickness>
	<Thickness x:Key="M3MaterialTopNavigationViewItemMargin">0</Thickness>
	<Thickness x:Key="M3MaterialNavigationViewItemSeparatorMargin">16,10</Thickness>
	<Thickness x:Key="M3MaterialNavigationViewCompactItemSeparatorMargin">16,10</Thickness>
	<Thickness x:Key="M3MaterialTopNavigationViewItemSeparatorMargin">10,0</Thickness>
	<Thickness x:Key="M3MaterialTopNavigationViewOverflowButtonMargin">0</Thickness>
	<Thickness x:Key="M3MaterialNavigationViewItemContentPresenterMargin">0,0,20,0</Thickness>
	<Thickness x:Key="M3MaterialNavigationViewCompactItemContentPresenterMargin">0,0,0,0</Thickness>
	<Thickness x:Key="M3MaterialTopNavigationViewItemContentPresenterMargin">8,0,16,0</Thickness>
	<Thickness x:Key="M3MaterialTopNavigationViewItemContentOnlyContentPresenterMargin">12,0</Thickness>
	<Thickness x:Key="M3MaterialNavigationViewItemExpandChevronMargin">-20,0,6,0</Thickness>
	<Thickness x:Key="M3MaterialTopNavigationViewItemExpandChevronMargin">-16,0,0,0</Thickness>
	<Thickness x:Key="M3MaterialTopNavigationViewItemIconOnlyExpandChevronMargin">0,0,0,0</Thickness>
	<Thickness x:Key="M3MaterialTopNavigationViewItemContentOnlyExpandChevronMargin">-12,0,0,0</Thickness>
	<Thickness x:Key="M3MaterialTopNavigationViewItemOnOverflowContentPresenterMargin">12,0,20,0</Thickness>
	<Thickness x:Key="M3MaterialTopNavigationViewItemOnOverflowNoIconContentPresenterMargin">16,0,20,0</Thickness>
	<Thickness x:Key="M3MaterialTopNavigationViewItemOnOverflowExpandChevronMargin">-4,0,6,0</Thickness>
	<Thickness x:Key="M3MaterialTopNavigationViewItemOnOverflowExpandChevronPadding">12,0,12,0</Thickness>

	<!-- The two resources below must be defined at the app level in order to take effect. -->
	<Thickness x:Key="M3MaterialTopNavigationViewOverflowMenuPadding">0,8</Thickness>
	<Thickness x:Key="M3MaterialNavigationViewItemChildrenMenuFlyoutPadding">0,8</Thickness>

	<!--
		The resource below must be defined at the app level in order to affect the expand/collapse chevron font size
		used in the Top NavigationView's Overflow menu.
	-->
	<x:Double x:Key="M3MaterialNavigationViewItemExpandedGlyphFontSize">12.0</x:Double>
	<x:String x:Key="M3MaterialNavigationViewItemExpandedGlyph">&#xE70D;</x:String>

	<!--#endregion-->
	<!--#region Resource overrides-->

	<!-- NavigationView -->
	<StaticResource x:Key="M3MaterialNavigationViewDefaultPaneBackground" ResourceKey="SurfaceBrush" />
	<StaticResource x:Key="M3MaterialNavigationViewSelectionIndicatorForeground" ResourceKey="SystemControlTransparentBrush" />
	<StaticResource x:Key="M3MaterialNavigationViewPaneBorderBrush" ResourceKey="SystemControlTransparentBrush" />
	<Thickness x:Key="M3MaterialNavigationViewPaneBorderThickness">0</Thickness>

	<StaticResource x:Key="M3MaterialNavigationViewRippleFeedback" ResourceKey="PrimaryFocusedBrush" />

	<Thickness x:Key="M3MaterialNavigationViewItemPadding">8,2</Thickness>
	<CornerRadius x:Key="M3MaterialNavigationViewItemCornerRadius">16</CornerRadius>

	<!--#endregion-->

	<!--#region NavigationView-->

	<!-- to reset default style on SplitView from Uno.Material -->
	<xamarin:Style x:Key="M3MaterialNavigationViewResetSplitViewStyle"
				   TargetType="SplitView">
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="CornerRadius" Value="16" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="OpenPaneLength" Value="{ThemeResource SplitViewOpenPaneThemeLength}" />
		<Setter Property="CompactPaneLength" Value="{ThemeResource SplitViewCompactPaneThemeLength}" />
		<Setter Property="PaneBackground" Value="{ThemeResource SystemControlPageBackgroundChromeLowBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="SplitView">
					<Grid Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="DisplayModeStates">
								<VisualStateGroup.Transitions>
									<VisualTransition From="Closed"
													  To="OpenOverlayLeft">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<xamarin:DoubleAnimation Storyboard.TargetName="PaneTransform"
																	 Storyboard.TargetProperty="TranslateX"
																	 From="{Binding TemplateSettings.NegativeOpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	 To="0"
																	 Duration="0:0:0.35" />
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="Closed"
													  To="OpenOverlayRight">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Right" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Left" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<xamarin:DoubleAnimation Storyboard.TargetName="PaneTransform"
																	 Storyboard.TargetProperty="TranslateX"
																	 From="{Binding TemplateSettings.OpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	 To="0"
																	 Duration="0:0:0.35" />
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="ClosedCompactLeft"
													  To="OpenCompactOverlayLeft">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.CompactPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="ClosedCompactRight"
													  To="OpenCompactOverlayRight">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="*" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition2" Storyboard.TargetProperty="Width">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.CompactPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Right" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Left" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="OpenOverlayLeft"
													  To="Closed">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<xamarin:DoubleAnimation Storyboard.TargetName="PaneTransform"
																	 Storyboard.TargetProperty="TranslateX"
																	 From="0"
																	 To="{Binding TemplateSettings.NegativeOpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	 Duration="0:0:0.12" />
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="OpenOverlayRight"
													  To="Closed">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Right" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Left" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<xamarin:DoubleAnimation Storyboard.TargetName="PaneTransform"
																	 Storyboard.TargetProperty="TranslateX"
																	 To="{Binding TemplateSettings.OpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	 Duration="0:0:0.12" />
											<win:DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform"
																			   Storyboard.TargetProperty="TranslateX">
												<SplineDoubleKeyFrame KeyTime="0:0:0.12"
																	  KeySpline="0.1,0.9 0.2,1.0"
																	  Value="{Binding TemplateSettings.OpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
											</win:DoubleAnimationUsingKeyFrames>
											<win:DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform"
																			   Storyboard.TargetProperty="TranslateX">
												<SplineDoubleKeyFrame KeyTime="0:0:0.12"
																	  KeySpline="0.1,0.9 0.2,1.0"
																	  Value="{Binding TemplateSettings.NegativeOpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
											</win:DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="OpenCompactOverlayLeft"
													  To="ClosedCompactLeft">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.CompactPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<win:DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform"
																			   Storyboard.TargetProperty="TranslateX">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="0" />
												<SplineDoubleKeyFrame KeyTime="0:0:0.12"
																	  KeySpline="0.1,0.9 0.2,1.0"
																	  Value="{Binding TemplateSettings.NegativeOpenPaneLengthMinusCompactLength, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
											</win:DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="OpenCompactOverlayRight"
													  To="ClosedCompactRight">
										<Storyboard>
											<xamarin:ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Clip"
																				   Storyboard.TargetName="PaneRoot">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.RightClip, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
											</xamarin:ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="*" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition2" Storyboard.TargetProperty="Width">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.CompactPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Right" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Left" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<win:DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform"
																			   Storyboard.TargetProperty="TranslateX">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0"
																		Value="0" />
												<SplineDoubleKeyFrame KeyTime="0:0:0.12"
																	  KeySpline="0.1,0.9 0.2,1.0"
																	  Value="{Binding TemplateSettings.OpenPaneLengthMinusCompactLength, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
											</win:DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Closed">
									<!-- Workaround because values aren't properly reset on Wasm. -->
									<!--<Storyboard>
										<netstdref:ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
																			Storyboard.TargetName="PaneRoot">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="Collapsed" />
										</netstdref:ObjectAnimationUsingKeyFrames>
										<netstdref:ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)"
																			Storyboard.TargetName="ContentRoot">
											<DiscreteObjectKeyFrame KeyTime="0:0:0"
																	Value="0" />
										</netstdref:ObjectAnimationUsingKeyFrames>
									</Storyboard>-->
								</VisualState>
								<VisualState x:Name="ClosedCompactLeft">
									<VisualState.Setters>
										<Setter Target="PaneTransform.TranslateX" Value="0" />
									</VisualState.Setters>
									<Storyboard>
										<xamarin:ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Clip"
																			   Storyboard.TargetName="PaneRoot">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.LeftClip, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
										</xamarin:ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.CompactPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<win:DoubleAnimation Storyboard.TargetName="PaneClipRectangleTransform"
															 Storyboard.TargetProperty="TranslateX"
															 To="{Binding TemplateSettings.NegativeOpenPaneLengthMinusCompactLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"
															 Duration="0:0:0" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ClosedCompactRight">
									<Storyboard>
										<xamarin:ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Clip"
																			   Storyboard.TargetName="PaneRoot">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.RightClip, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
										</xamarin:ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="*" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition2" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.CompactPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="2" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Right" />
										</ObjectAnimationUsingKeyFrames>
										<win:DoubleAnimation Storyboard.TargetName="PaneClipRectangleTransform"
															 Storyboard.TargetProperty="TranslateX"
															 To="{Binding TemplateSettings.OpenPaneLengthMinusCompactLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"
															 Duration="0:0:0" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="OpenOverlayLeft">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="OpenOverlayRight">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Right" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Left" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="OpenInlineLeft">
									<VisualState.Setters>
										<Setter Target="PaneTransform.TranslateX" Value="0" />
									</VisualState.Setters>
									<Storyboard>
										<xamarin:ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Clip"
																			   Storyboard.TargetName="PaneRoot">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Null}" />
										</xamarin:ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="OpenInlineRight">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="*" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition2" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.OpenPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(Grid.Column)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Left" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="OpenCompactOverlayLeft">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.CompactPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="OpenCompactOverlayRight">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="*" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition2" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.CompactPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Right" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Left" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid.ColumnDefinitions>
							<ColumnDefinition x:Name="ColumnDefinition1"
											  Width="{Binding TemplateSettings.OpenPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
							<ColumnDefinition x:Name="ColumnDefinition2"
											  Width="*" />
						</Grid.ColumnDefinitions>

						<!-- Content Area -->
						<Grid x:Name="ContentRoot"
							  Grid.ColumnSpan="2">
							<Border Child="{TemplateBinding Content}" />
							<win:Rectangle x:Name="LightDismissLayer"
										   Fill="{StaticResource SplitViewDismissBackgroundColor}"
										   Visibility="Collapsed" />
							<xamarin:Button x:Name="LightDismissLayer"
											Visibility="Collapsed"
											HorizontalAlignment="Stretch"
											VerticalAlignment="Stretch">
								<Button.Template>
									<ControlTemplate>
										<Border Background="{StaticResource SplitViewDismissBackgroundColor}" />
									</ControlTemplate>
								</Button.Template>
							</xamarin:Button>
						</Grid>

						<!-- Pane Content Area -->
						<Grid x:Name="PaneRoot"
							  Grid.ColumnSpan="2"
							  HorizontalAlignment="Left"
							  Visibility="Collapsed"
							  CornerRadius="{TemplateBinding CornerRadius}"
							  Background="{TemplateBinding PaneBackground}"
							  Width="{Binding TemplateSettings.OpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}">
							<win:Grid.Clip>
								<RectangleGeometry x:Name="PaneClipRectangle">
									<win:RectangleGeometry.Transform>
										<CompositeTransform x:Name="PaneClipRectangleTransform" />
									</win:RectangleGeometry.Transform>
								</RectangleGeometry>
							</win:Grid.Clip>
							<Grid.RenderTransform>
								<CompositeTransform x:Name="PaneTransform" />
							</Grid.RenderTransform>
							<Border Child="{TemplateBinding Pane}" />
							<Rectangle x:Name="HCPaneBorder"
									   Visibility="Collapsed"
									   Fill="{ThemeResource SystemControlForegroundTransparentBrush}"
									   x:DeferLoadStrategy="Lazy"
									   Width="1"
									   HorizontalAlignment="Right" />
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</xamarin:Style>

	<Style x:Key="M3MaterialNavigationViewPaneToggleButtonStyle"
		   TargetType="Button">
		<Setter Property="FontSize" Value="16" />
		<Setter Property="FontFamily" Value="{StaticResource SymbolThemeFontFamily}" />
		<Setter Property="MinHeight" Value="{StaticResource M3MaterialNavigationViewPaneToggleButtonHeight}" />
		<Setter Property="MinWidth" Value="{StaticResource M3MaterialNavigationViewPaneToggleButtonWidth}" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Background" Value="{ThemeResource M3MaterialNavigationViewItemBackground}" />
		<Setter Property="Foreground" Value="{ThemeResource M3MaterialNavigationViewItemForeground}" />
		<Setter Property="BorderThickness" Value="{ThemeResource M3MaterialNavigationViewToggleBorderThickness}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="LayoutRoot"
						  MinWidth="{TemplateBinding MinWidth}"
						  Height="{TemplateBinding MinHeight}"
						  Margin="{TemplateBinding Padding}"
						  Background="{TemplateBinding Background}"
						  HorizontalAlignment="Stretch">
						<Grid.ColumnDefinitions>
							<ColumnDefinition x:Name="PaneToggleButtonIconWidthColumn"
											  Width="{ThemeResource M3MaterialNavigationViewPaneToggleButtonWidth}" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="{ThemeResource M3MaterialNavigationViewPaneToggleButtonHeight}" />
						</Grid.RowDefinitions>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialNavigationViewButtonBackgroundPointerOver}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialNavigationViewButtonForegroundPointerOver}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialNavigationViewButtonForegroundPointerOver}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialNavigationViewButtonBackgroundPressed}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialNavigationViewButtonForegroundPressed}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialNavigationViewButtonForegroundPressed}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialNavigationViewButtonBackgroundDisabled}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialNavigationViewButtonForegroundDisabled}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Checked">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background" Value="{ThemeResource ToggleButtonBackgroundChecked}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundChecked}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="CheckedPointerOver">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background" Value="{ThemeResource ToggleButtonBackgroundCheckedPointerOver}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedPointerOver}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="CheckedPressed">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background" Value="{ThemeResource ToggleButtonBackgroundCheckedPressed}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedPressed}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="CheckedDisabled">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background" Value="{ThemeResource ToggleButtonBackgroundCheckedDisabled}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedDisabled}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Viewbox x:Name="IconHost"
								 Width="16"
								 Height="16"
								 HorizontalAlignment="Center"
								 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								 AutomationProperties.AccessibilityView="Raw">

							<TextBlock x:Name="Icon"
									   Text="&#xE700;"
									   FontFamily="{StaticResource SymbolThemeFontFamily}"
									   FontSize="{TemplateBinding FontSize}"
									   AutomationProperties.AccessibilityView="Raw" />

						</Viewbox>

						<ContentPresenter x:Name="ContentPresenter"
										  VerticalContentAlignment="Center"
										  Content="{TemplateBinding Content}"
										  FontSize="{TemplateBinding FontSize}"
										  Grid.Column="1" />

						<Border x:Name="RevealBorder"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Grid.ColumnSpan="2" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="M3MaterialNavigationViewPaneSearchButtonStyle"
		   TargetType="Button">
		<Setter Property="MinHeight" Value="40" />
		<Setter Property="Content" Value="&#xE11A;" />
		<Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
		<Setter Property="BorderThickness" Value="{ThemeResource M3MaterialNavigationViewToggleBorderThickness}" />
		<Setter Property="Background" Value="{ThemeResource M3MaterialNavigationViewItemBackground}" />
		<Setter Property="Foreground" Value="{ThemeResource M3MaterialNavigationViewItemForeground}" />
	</Style>

	<Style x:Key="M3MaterialNavigationViewOverflowButtonStyleWhenPaneOnTop"
		   TargetType="Button">
		<Setter Property="Background" Value="{ThemeResource M3MaterialNavigationViewItemBackground}" />
		<Setter Property="Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForeground}" />
		<Setter Property="BorderBrush" Value="{ThemeResource M3MaterialNavigationViewItemBorderBrush}" />
		<Setter Property="BorderThickness" Value="{StaticResource M3MaterialNavigationViewItemBorderThickness}" />
		<Setter Property="Height" Value="{StaticResource M3MaterialTopNavigationViewOverflowButtonHeight}" />
		<Setter Property="Width" Value="{StaticResource M3MaterialTopNavigationViewOverflowButtonWidth}" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="UseSystemFocusVisuals" Value="True" />
		<Setter Property="FocusVisualMargin" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="RootGrid"
						  Height="{TemplateBinding Height}"
						  Width="{TemplateBinding Width}"
						  Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="RootGrid.Background" Value="{ThemeResource M3MaterialTopNavigationViewItemBackgroundPointerOver}" />
										<Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialNavigationViewItemBackgroundPointerOver}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForegroundPointerOver}" />
										<!--Removing RevealBrush usage for now as it is not present in WinUI 3-->
										<!--<contract4Present:Setter Target="RootGrid.(media:RevealBrush.State)"
																 Value="PointerOver" />-->
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="RootGrid.Background" Value="{ThemeResource M3MaterialTopNavigationViewItemBackgroundPressed}" />
										<Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialNavigationViewItemBackgroundPressed}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForegroundPressed}" />
										<!--Removing RevealBrush usage for now as it is not present in WinUI 3-->
										<!--<contract4Present:Setter Target="RootGrid.(media:RevealBrush.State)"
																 Value="Pressed" />-->
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForegroundDisabled}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="PointerRectangle"
								   Fill="Transparent"
								   Visibility="Collapsed" />
						<Border x:Name="RevealBorder"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}" />
						<FontIcon x:Name="Icon"
								  VerticalAlignment="Center"
								  HorizontalAlignment="Center"
								  AutomationProperties.AccessibilityView="Raw"
								  FontFamily="{ThemeResource SymbolThemeFontFamily}"
								  FontSize="20"
								  Glyph="&#xE10C;"
								  Foreground="{TemplateBinding Foreground}"
								  IsHitTestVisible="False" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="M3MaterialNavigationViewOverflowButtonNoLabelStyleWhenPaneOnTop"
		   TargetType="Button">
		<Setter Property="Background" Value="{ThemeResource M3MaterialNavigationViewItemBackground}" />
		<Setter Property="Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForeground}" />
		<Setter Property="BorderBrush" Value="{ThemeResource M3MaterialNavigationViewItemBorderBrush}" />
		<Setter Property="BorderThickness" Value="{StaticResource M3MaterialNavigationViewItemBorderThickness}" />
		<Setter Property="Height" Value="{StaticResource M3MaterialTopNavigationViewOverflowButtonHeight}" />
		<Setter Property="Width" Value="{StaticResource M3MaterialTopNavigationViewOverflowButtonWidth}" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="UseSystemFocusVisuals" Value="True" />
		<Setter Property="FocusVisualMargin" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="RootGrid"
						  Height="{TemplateBinding Height}"
						  Width="{TemplateBinding Width}"
						  Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="RootGrid.Background" Value="{ThemeResource M3MaterialTopNavigationViewItemBackgroundPointerOver}" />
										<Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialNavigationViewItemBackgroundPointerOver}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForegroundPointerOver}" />
										<!--Removing RevealBrush usage for now as it is not present in WinUI 3-->
										<!--<contract4Present:Setter Target="RootGrid.(media:RevealBrush.State)"
																 Value="PointerOver" />-->
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="RootGrid.Background" Value="{ThemeResource M3MaterialTopNavigationViewItemBackgroundPressed}" />
										<Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialNavigationViewItemBackgroundPressed}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForegroundPressed}" />
										<!--Removing RevealBrush usage for now as it is not present in WinUI 3-->
										<!--<contract4Present:Setter Target="RootGrid.(media:RevealBrush.State)"
																 Value="Pressed" />-->
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForegroundDisabled}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="PointerRectangle"
								   Fill="Transparent" />
						<Border x:Name="RevealBorder"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}" />
						<FontIcon x:Name="Icon"
								  VerticalAlignment="Center"
								  HorizontalAlignment="Center"
								  AutomationProperties.AccessibilityView="Raw"
								  FontFamily="{ThemeResource SymbolThemeFontFamily}"
								  FontSize="20"
								  Glyph="&#xE10C;"
								  Foreground="{TemplateBinding Foreground}"
								  IsHitTestVisible="False" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="M3MaterialNavigationViewItemHeaderTextStyle"
		   TargetType="TextBlock"
		   BasedOn="{StaticResource M3MaterialTitleSmall}">
		<Setter Property="Foreground"
				Value="{StaticResource OnSurfaceBrush}" />
	</Style>

	<!-- based on TitleSmall TextBlockStyle -->
	<Style x:Key="M3MaterialNavigationViewTitleHeaderContentControlTextStyle"
		   TargetType="ContentControl">
		<Setter Property="FontSize" Value="14" />
		<Setter Property="FontWeight" Value="Medium" />
		<Setter Property="FontFamily" Value="{StaticResource MaterialMediumFontFamily}" />
		<Setter Property="Margin" Value="{ThemeResource M3MaterialNavigationViewHeaderMargin}" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
	</Style>

	<Style x:Key="BaseM3MaterialNavigationViewStyle"
		   TargetType="muxc:NavigationView">
		<Setter Property="PaneToggleButtonStyle" Value="{StaticResource M3MaterialNavigationViewPaneToggleButtonStyle}" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="CompactPaneLength" Value="{ThemeResource M3MaterialNavigationViewCompactPaneLength}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="muxc:NavigationView">
					<Grid x:Name="RootGrid">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="DisplayModeGroup">
								<VisualState x:Name="Compact" />

								<VisualState x:Name="Expanded" />

								<VisualState x:Name="Minimal">
									<VisualState.Setters>
										<Setter Target="HeaderContent.Margin" Value="{ThemeResource M3MaterialNavigationViewMinimalHeaderMargin}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="TopNavigationMinimal" />

								<VisualState x:Name="MinimalWithBackButton">
									<VisualState.Setters>
										<Setter Target="HeaderContent.Margin" Value="{ThemeResource M3MaterialNavigationViewMinimalHeaderMargin}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="TogglePaneGroup">
								<VisualState x:Name="TogglePaneButtonVisible" />
								<VisualState x:Name="TogglePaneButtonCollapsed" />
							</VisualStateGroup>

							<VisualStateGroup x:Name="HeaderGroup">
								<VisualState x:Name="HeaderVisible" />
								<VisualState x:Name="HeaderCollapsed">
									<VisualState.Setters>
										<Setter Target="HeaderContent.Visibility" Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="AutoSuggestGroup">
								<VisualState x:Name="AutoSuggestBoxVisible" />
								<VisualState x:Name="AutoSuggestBoxCollapsed" />
							</VisualStateGroup>

							<VisualStateGroup x:Name="PaneStateGroup">
								<VisualState x:Name="NotClosedCompact" />
								<VisualState x:Name="ClosedCompact" />
							</VisualStateGroup>

							<VisualStateGroup x:Name="PaneStateListSizeGroup">
								<VisualState x:Name="ListSizeFull" />
								<VisualState x:Name="ListSizeCompact">
									<VisualState.Setters>
										<Setter Target="PaneContentGrid.Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CompactPaneLength}" />
										<Setter Target="PaneTitleTextBlock.Visibility" Value="Collapsed" />
										<Setter Target="PaneHeaderContentBorder.Visibility"
												Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="TitleBarVisibilityGroup">
								<VisualState x:Name="TitleBarVisible" />
								<VisualState x:Name="TitleBarCollapsed">
									<VisualState.Setters>
										<Setter Target="PaneContentGrid.Margin" Value="0,32,0,0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="OverflowLabelGroup">
								<VisualState x:Name="OverflowButtonWithLabel" />
								<VisualState x:Name="OverflowButtonNoLabel" />
							</VisualStateGroup>

							<VisualStateGroup x:Name="BackButtonGroup">
								<VisualState x:Name="BackButtonVisible" />
								<VisualState x:Name="BackButtonCollapsed">
									<VisualState.Setters>
										<Setter Target="BackButtonPlaceholderOnTopNav.Width" Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="PaneVisibilityGroup">
								<VisualState x:Name="PaneVisible" />
								<VisualState x:Name="PaneCollapsed">
									<VisualState.Setters>
										<!-- Note that RootSplitView.DisplayMode is set in code so we don't want to -->
										<!-- write it here and interfere. But these values work together to hide -->
										<!-- the left pane. -->
										<Setter Target="RootSplitView.CompactPaneLength" Value="0" />
										<Setter Target="PaneToggleButtonGrid.Visibility" Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<!-- Content layouts -->
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>

							<!-- DisplayMode top -->
							<StackPanel x:Name="TopNavArea" />

							<!-- Displaymode (compact/minimal/normal) left -->
							<SplitView x:Name="RootSplitView"
									   Background="{TemplateBinding Background}"
									   CompactPaneLength="{TemplateBinding CompactPaneLength}"
									   DisplayMode="Inline"
									   IsPaneOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPaneOpen, Mode=TwoWay}"
									   IsTabStop="False"
									   OpenPaneLength="{TemplateBinding OpenPaneLength}"
									   PaneBackground="{ThemeResource M3MaterialNavigationViewDefaultPaneBackground}"
									   xamarin:Style="{StaticResource M3MaterialNavigationViewResetSplitViewStyle}"
									   Grid.Row="1">

								<SplitView.Pane>
									<Grid x:Name="PaneContentGrid"
										  HorizontalAlignment="Left"
										  CornerRadius="16"
										  BorderBrush="{StaticResource M3MaterialNavigationViewPaneBorderBrush}"
										  BorderThickness="{StaticResource M3MaterialNavigationViewPaneBorderThickness}"
										  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.LeftPaneVisibility}">
										<Grid.RowDefinitions>
											<RowDefinition x:Name="PaneContentGridToggleButtonRow"
														   Height="Auto"
														   MinHeight="{StaticResource M3MaterialNavigationViewPaneHeaderRowMinHeight}" />
											<RowDefinition Height="8" />
											<!-- above list margin -->
											<RowDefinition x:Name="ItemsContainerRow"
														   Height="*" />
										</Grid.RowDefinitions>

										<Grid x:Name="PaneHeaderContentBorderWrapper"
											  MinHeight="{StaticResource M3MaterialNavigationViewPaneHeaderRowMinHeight}">
											<!-- TODO: Uno specific: MinHeight and x:Name used here as RowDefinifiont.MinHeight does not work (issue #4727) -->
											<Grid.RowDefinitions>
												<RowDefinition x:Name="PaneHeaderContentBorderRow" />
											</Grid.RowDefinitions>

											<Grid.ColumnDefinitions>
												<ColumnDefinition x:Name="PaneHeaderCloseButtonColumn" />
												<ColumnDefinition x:Name="PaneHeaderToggleButtonColumn" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>

											<ContentControl x:Name="PaneHeaderContentBorder"
															IsTabStop="False"
															VerticalContentAlignment="Stretch"
															HorizontalContentAlignment="Stretch"
															Grid.Column="2" />
										</Grid>

										<!-- "Non header" content -->
										<!-- MenuItems -->
										<ScrollViewer x:Name="ItemsContainerGrid"
													  Grid.Row="2"
													  Margin="0,0,0,8"
													  MinHeight="{ThemeResource M3MaterialNavigationViewItemOnLeftMinHeight}"
													  TabNavigation="Local"
													  HorizontalAlignment="Stretch"
													  VerticalAlignment="Stretch"
													  VerticalScrollBarVisibility="Auto">
											<!-- Left nav ItemsRepeater -->
											<muxc:ItemsRepeater x:Name="MenuItemsHost"
																AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}"
																AutomationProperties.AccessibilityView="Content" />
										</ScrollViewer>
									</Grid>
								</SplitView.Pane>

								<SplitView.Content>
									<Grid x:Name="ContentGrid">
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="*" />
										</Grid.RowDefinitions>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="*" />
										</Grid.ColumnDefinitions>

										<Grid x:Name="ContentTopPadding"
											  Grid.ColumnSpan="2"
											  Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"
											  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.LeftPaneVisibility}" />

										<Grid x:Name="ContentLeftPadding"
											  Grid.Row="1" />

										<ContentControl x:Name="HeaderContent"
														Grid.Row="1"
														Grid.Column="1"
														MinHeight="{StaticResource M3MaterialNavigationViewPaneToggleButtonHeight}"
														IsTabStop="False"
														Content="{TemplateBinding Header}"
														ContentTemplate="{TemplateBinding HeaderTemplate}"
														VerticalContentAlignment="Stretch"
														HorizontalContentAlignment="Stretch"
														Style="{StaticResource M3MaterialNavigationViewTitleHeaderContentControlTextStyle}" />

										<ContentPresenter AutomationProperties.LandmarkType="Main"
														  Grid.Row="2"
														  Grid.ColumnSpan="2"
														  Content="{TemplateBinding Content}" />
									</Grid>
								</SplitView.Content>
							</SplitView>

						</Grid>

						<!-- Button grid -->
						<!--
							TODO: Uno Specific: Canvas.ZIndex is not implemented, so the
							button Grid is moved below the content SplitView in the template
						-->
						<Grid x:Name="PaneToggleButtonGrid"
							  Margin="0,0,0,8"
							  HorizontalAlignment="Left"
							  VerticalAlignment="Top"
							  Canvas.ZIndex="100">

							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<Grid x:Name="TogglePaneTopPadding"
								  Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}" />

							<Grid x:Name="ButtonHolderGrid"
								  Grid.Row="1">
								<Button x:Name="NavigationViewBackButton"
										Style="{StaticResource NavigationBackButtonNormalStyle}"
										VerticalAlignment="Top"
										Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.BackButtonVisibility}"
										IsEnabled="{TemplateBinding IsBackEnabled}">
									<ToolTipService.ToolTip>
										<ToolTip x:Name="NavigationViewBackButtonToolTip" />
									</ToolTipService.ToolTip>
								</Button>
								<Button x:Name="NavigationViewCloseButton"
										Style="{StaticResource NavigationBackButtonNormalStyle}"
										VerticalAlignment="Top">
									<ToolTipService.ToolTip>
										<ToolTip x:Name="NavigationViewCloseButtonToolTip" />
									</ToolTipService.ToolTip>
								</Button>
								<Button x:Name="TogglePaneButton"
										Style="{TemplateBinding PaneToggleButtonStyle}"
										AutomationProperties.LandmarkType="Navigation"
										HorizontalAlignment="Center"
										Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.PaneToggleButtonVisibility}"
										VerticalAlignment="Top">
									<TextBlock x:Name="PaneTitleTextBlock"
											   Grid.Column="0"
											   Text="{TemplateBinding PaneTitle}"
											   HorizontalAlignment="Left"
											   VerticalAlignment="Center"
											   Style="{StaticResource M3MaterialNavigationViewItemHeaderTextStyle}" />
								</Button>
								<Grid x:Name="PaneTitleHolder"
									  Visibility="Collapsed">
									<ContentControl x:Name="PaneTitlePresenter"
													Margin="{ThemeResource M3MaterialNavigationViewPaneTitlePresenterMargin}"
													IsTabStop="False"
													HorizontalContentAlignment="Stretch"
													VerticalContentAlignment="Stretch" />
								</Grid>
							</Grid>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--#endregion-->
	<!--#region NavigationViewItem-->

	<Style TargetType="primitives:NavigationViewItemPresenter"
		   x:Key="M3MaterialNavigationViewItemPresenterStyleWhenOnLeftPane">
		<Setter Property="Foreground" Value="{ThemeResource M3MaterialNavigationViewItemForeground}" />
		<Setter Property="Background" Value="{ThemeResource M3MaterialNavigationViewItemBackground}" />
		<Setter Property="BorderBrush" Value="{ThemeResource M3MaterialNavigationViewItemBorderBrush}" />
		<Setter Property="BorderThickness" Value="{StaticResource M3MaterialNavigationViewItemBorderThickness}" />
		<Setter Property="UseSystemFocusVisuals" Value="True" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="primitives:NavigationViewItemPresenter">
					<Grid x:Name="LayoutRoot"
						  MinHeight="{ThemeResource M3MaterialNavigationViewItemOnLeftMinHeight}"
						  Control.IsTemplateFocusTarget="True">
						<Grid.Resources>
							<Storyboard x:Name="ExpandCollapseRotateExpandedStoryboard">
								<DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
												 Storyboard.TargetProperty="Angle"
												 From="0.0"
												 To="180.0"
												 Duration="0:0:0.1" />
							</Storyboard>
							<Storyboard x:Name="ExpandCollapseRotateCollapsedStoryboard">
								<DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
												 Storyboard.TargetProperty="Angle"
												 From="180.0"
												 To="0.0"
												 Duration="0:0:0.1" />
							</Storyboard>
						</Grid.Resources>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="PointerStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<!--Removing RevealBrush usage for now as it is not present in WinUI 3-->
										<!--<contract4Present:Setter Target="LayoutRoot.(media:RevealBrush.State)"
																 Value="PointerOver" />-->
										<Setter Target="BackgroundBorder.Background" Value="{ThemeResource M3MaterialNavigationViewItemBackgroundPointerOver}" />
										<Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource M3MaterialNavigationViewItemBorderBrushPointerOver}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialNavigationViewItemForegroundPointerOver}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialNavigationViewItemForegroundPointerOver}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<!--Removing RevealBrush usage for now as it is not present in WinUI 3-->
										<!--<contract4Present:Setter Target="LayoutRoot.(media:RevealBrush.State)"
																 Value="Pressed" />-->
										<Setter Target="BackgroundBorder.Background" Value="{ThemeResource M3MaterialNavigationViewItemBackgroundPressed}" />
										<Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource M3MaterialNavigationViewItemBorderBrushPressed}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialNavigationViewItemForegroundPressed}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialNavigationViewItemForegroundPressed}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Selected">
									<VisualState.Setters>
										<Setter Target="SelectionIndicatorBorder.Background" Value="{ThemeResource M3MaterialNavigationViewItemBackgroundSelected}" />
										<contract4Present:Setter Target="RevealBorder.BorderBrush"
																 Value="{ThemeResource M3MaterialNavigationViewItemBorderBrushSelected}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialNavigationViewItemForegroundSelected}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialNavigationViewItemForegroundSelected}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerOverSelected">
									<VisualState.Setters>
										<!--Removing RevealBrush usage for now as it is not present in WinUI 3-->
										<!--<contract4Present:Setter Target="LayoutRoot.(media:RevealBrush.State)"
																 Value="PointerOver" />-->
										<Setter Target="BackgroundBorder.Background" Value="{ThemeResource M3MaterialNavigationViewItemBackgroundSelectedPointerOver}" />
										<Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource M3MaterialNavigationViewItemBorderBrushSelectedPointerOver}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialNavigationViewItemForegroundSelectedPointerOver}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialNavigationViewItemForegroundSelectedPointerOver}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PressedSelected">
									<VisualState.Setters>
										<!--Removing RevealBrush usage for now as it is not present in WinUI 3-->
										<!--<contract4Present:Setter Target="LayoutRoot.(media:RevealBrush.State)"
																 Value="Pressed" />-->
										<Setter Target="BackgroundBorder.Background" Value="{ThemeResource M3MaterialNavigationViewItemBackgroundSelectedPressed}" />
										<Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource M3MaterialNavigationViewItemBorderBrushSelectedPressed}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialNavigationViewItemForegroundSelectedPressed}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialNavigationViewItemForegroundSelectedPressed}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="DisabledStates">
								<VisualState x:Name="Enabled" />
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource M3MaterialNavigationViewItemBorderBrushCheckedDisabled}" />
										<Setter Target="LayoutRoot.Opacity" Value="{ThemeResource ListViewItemDisabledThemeOpacity}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="IconStates">
								<VisualState x:Name="IconVisible" />
								<VisualState x:Name="IconCollapsed">
									<VisualState.Setters>
										<Setter Target="IconBox.Visibility" Value="Collapsed" />
										<Setter Target="IconColumn.Width" Value="16" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="ChevronStates">
								<VisualState x:Name="ChevronHidden" />
								<VisualState x:Name="ChevronVisibleOpen">
									<VisualState.Setters>
										<Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
										<Setter Target="ExpandCollapseChevronRotateTransform.Angle" Value="180" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="ChevronVisibleClosed">
									<VisualState.Setters>
										<Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
										<Setter Target="ExpandCollapseChevronRotateTransform.Angle" Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="PaneAndTopLevelItemStates">
								<VisualState x:Name="NotClosedCompactAndTopLevelItem" />
								<VisualState x:Name="ClosedCompactAndTopLevelItem">
									<VisualState.Setters>
										<Setter Target="ContentPresenter.Margin" Value="{ThemeResource M3MaterialNavigationViewCompactItemContentPresenterMargin}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Border x:Name="BackgroundBorder"
								CornerRadius="{TemplateBinding CornerRadius}"
								Background="{TemplateBinding Background}"
								Margin="{TemplateBinding Padding}" />
						<Border x:Name="SelectionIndicatorBorder"
								CornerRadius="{TemplateBinding CornerRadius}"
								Background="Transparent"
								Margin="{TemplateBinding Padding}" />
						<Border x:Name="RevealBorder"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}" />
						<Border Margin="{TemplateBinding Padding}">
							<!-- dont apply Margin on Ripple, as it will be applied twice (on the Ripple and on its template root) -->
							<!-- material#446: skia:Opacity to workaround Ripple opacity issue -->
							<um:Ripple Feedback="{StaticResource M3MaterialNavigationViewRippleFeedback}"
											 skia:Opacity="0.12"
											 CornerRadius="{TemplateBinding CornerRadius}" />
						</Border>

						<!-- disabled hit-test because we dont want the content or the chevron to block the click event -->
						<!-- as the ripple above would need it to play its effect -->
						<Grid x:Name="PresenterContentRootGrid"
							  IsHitTestVisible="False">
							<!-- Wrap SelectionIndicator in a grid so that its offset is 0,0 - this enables the offset animation. -->
							<Grid Margin="4,0,0,0"
								  HorizontalAlignment="Left"
								  VerticalAlignment="Center">

								<Rectangle x:Name="SelectionIndicator"
										   Width="2"
										   Height="24"
										   Fill="{ThemeResource M3MaterialNavigationViewSelectionIndicatorForeground}"
										   Opacity="0.0"
										   Visibility="Collapsed"
										   contract7Present:RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
										   contract7Present:RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}"
										   contract7NotPresent:RadiusX="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
										   contract7NotPresent:RadiusY="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}" />
							</Grid>

							<Grid HorizontalAlignment="Stretch"
								  x:Name="ContentGrid"
								  MinHeight="{ThemeResource M3MaterialNavigationViewItemOnLeftMinHeight}">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="8" />
									<ColumnDefinition x:Name="IconColumn"
													  Width="{ThemeResource M3MaterialNavigationViewCompactPaneLength}" />
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>

								<Viewbox x:Name="IconBox"
										 Grid.Column="1"
										 Height="16"
										 Margin="{ThemeResource M3MaterialNavigationViewItemOnLeftIconBoxMargin}">
									<ContentPresenter x:Name="Icon"
													  Content="{TemplateBinding Icon}" />
								</Viewbox>
								<ContentPresenter x:Name="ContentPresenter"
												  Grid.Column="2"
												  FontSize="14"
												  FontWeight="Medium"
												  FontFamily="{StaticResource MaterialMediumFontFamily}"
												  Margin="{ThemeResource M3MaterialNavigationViewItemContentPresenterMargin}"
												  ContentTransitions="{TemplateBinding ContentTransitions}"
												  ContentTemplate="{TemplateBinding ContentTemplate}"
												  Content="{TemplateBinding Content}"
												  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
												  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
												  Padding="{TemplateBinding Padding}"
												  AutomationProperties.AccessibilityView="Raw" />

								<Grid x:Name="ExpandCollapseChevron"
									  Grid.Column="3"
									  Visibility="Collapsed"
									  HorizontalAlignment="Right"
									  Width="40"
									  Margin="{ThemeResource M3MaterialNavigationViewItemExpandChevronMargin}"
									  Background="Transparent">
									<TextBlock RenderTransformOrigin="0.5, 0.5"
											   Foreground="{ThemeResource M3MaterialNavigationViewItemForeground}"
											   FontSize="{ThemeResource M3MaterialNavigationViewItemExpandedGlyphFontSize}"
											   Text="{StaticResource M3MaterialNavigationViewItemExpandedGlyph}"
											   FontFamily="{StaticResource SymbolThemeFontFamily}"
											   HorizontalAlignment="Center"
											   VerticalAlignment="Center"
											   AutomationProperties.AccessibilityView="Raw"
											   IsTextScaleFactorEnabled="False">
										<TextBlock.RenderTransform>
											<RotateTransform x:Name="ExpandCollapseChevronRotateTransform" Angle="0" />
										</TextBlock.RenderTransform>
									</TextBlock>
								</Grid>
							</Grid>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="primitives:NavigationViewItemPresenter"
		   x:Key="M3MaterialNavigationViewItemPresenterStyleWhenOnLeftPaneWithRevealFocus">
		<Setter Property="Foreground" Value="Green" />
		<Setter Property="Background" Value="Red" />
		<Setter Property="BorderBrush" Value="{ThemeResource M3MaterialNavigationViewItemBorderBrush}" />
		<Setter Property="BorderThickness" Value="{StaticResource M3MaterialNavigationViewItemBorderThickness}" />
		<Setter Property="UseSystemFocusVisuals" Value="True" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="primitives:NavigationViewItemPresenter">
					<Grid x:Name="LayoutRoot"
						  MinHeight="{ThemeResource M3MaterialNavigationViewItemOnLeftMinHeight}"
						  Background="{TemplateBinding Background}"
						  Control.IsTemplateFocusTarget="True">
						<Grid.Resources>
							<Storyboard x:Name="ExpandCollapseRotateExpandedStoryboard">
								<DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
												 Storyboard.TargetProperty="Angle"
												 From="0.0"
												 To="180.0"
												 Duration="0:0:0.1" />
							</Storyboard>
							<Storyboard x:Name="ExpandCollapseRotateCollapsedStoryboard">
								<DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
												 Storyboard.TargetProperty="Angle"
												 From="180.0"
												 To="0.0"
												 Duration="0:0:0.1" />
							</Storyboard>
						</Grid.Resources>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="DisabledStates">
								<VisualState x:Name="Enabled" />
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Opacity" Value="{ThemeResource ListViewItemDisabledThemeOpacity}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background" Value="{ThemeResource SystemControlHighlightAccentBrush}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource SystemControlHighlightAltChromeWhiteBrush}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SystemControlHighlightAltChromeWhiteBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Unfocused" />
								<VisualState x:Name="PointerFocused" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="IconStates">
								<VisualState x:Name="IconVisible" />
								<VisualState x:Name="IconCollapsed">
									<VisualState.Setters>
										<Setter Target="IconBox.Visibility" Value="Collapsed" />
										<Setter Target="IconColumn.Width" Value="16" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ChevronStates">
								<VisualState x:Name="ChevronHidden" />
								<VisualState x:Name="ChevronVisibleOpen">
									<VisualState.Setters>
										<Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
										<Setter Target="ExpandCollapseChevronRotateTransform.Angle" Value="180" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="ChevronVisibleClosed">
									<VisualState.Setters>
										<Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
										<Setter Target="ExpandCollapseChevronRotateTransform.Angle" Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="PaneAndTopLevelItemStates">
								<VisualState x:Name="NotClosedCompactAndTopLevelItem" />
								<VisualState x:Name="ClosedCompactAndTopLevelItem">
									<VisualState.Setters>
										<Setter Target="ContentPresenter.Margin" Value="{ThemeResource M3MaterialNavigationViewCompactItemContentPresenterMargin}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Border x:Name="RevealBorder"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}" />
						<Grid x:Name="PresenterContentRootGrid">
							<!-- Wrap SelectionIndicator in a grid so that its offset is 0,0 - this enables the offset animation. -->
							<Grid Margin="4,0,0,0"
								  HorizontalAlignment="Left"
								  VerticalAlignment="Center">

								<Rectangle x:Name="SelectionIndicator"
										   Width="2"
										   Height="24"
										   Fill="{ThemeResource M3MaterialNavigationViewSelectionIndicatorForeground}"
										   Opacity="0.0"
										   contract7Present:RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
										   contract7Present:RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}"
										   contract7NotPresent:RadiusX="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
										   contract7NotPresent:RadiusY="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}" />
							</Grid>
							<Grid x:Name="ContentGrid"
								  MinHeight="{ThemeResource M3MaterialNavigationViewItemOnLeftMinHeight}"
								  HorizontalAlignment="Left">
								<Grid.ColumnDefinitions>
									<ColumnDefinition x:Name="IconColumn"
													  Width="{ThemeResource M3MaterialNavigationViewCompactPaneLength}" />
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>

								<Viewbox x:Name="IconBox"
										 Height="16"
										 Margin="{ThemeResource M3MaterialNavigationViewItemOnLeftIconBoxMargin}">
									<ContentPresenter x:Name="Icon"
													  Foreground="{TemplateBinding Foreground}"
													  Content="{TemplateBinding Icon}" />
								</Viewbox>

								<ContentPresenter x:Name="ContentPresenter"
												  Grid.Column="1"
												  Foreground="{TemplateBinding Foreground}"
												  ContentTransitions="{TemplateBinding ContentTransitions}"
												  ContentTemplate="{TemplateBinding ContentTemplate}"
												  Content="{TemplateBinding Content}"
												  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
												  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
												  Margin="{ThemeResource M3MaterialNavigationViewItemContentPresenterMargin}"
												  Padding="{TemplateBinding Padding}"
												  AutomationProperties.AccessibilityView="Raw" />

								<Grid x:Name="ExpandCollapseChevron"
									  Grid.Column="2"
									  Visibility="Collapsed"
									  HorizontalAlignment="Right"
									  Width="40"
									  Margin="{ThemeResource M3MaterialNavigationViewItemExpandChevronMargin}"
									  Background="Transparent">
									<TextBlock Foreground="{ThemeResource M3MaterialNavigationViewItemForeground}"
											   RenderTransformOrigin="0.5, 0.5"
											   FontSize="{ThemeResource M3MaterialNavigationViewItemExpandedGlyphFontSize}"
											   Text="{StaticResource M3MaterialNavigationViewItemExpandedGlyph}"
											   FontFamily="{StaticResource SymbolThemeFontFamily}"
											   HorizontalAlignment="Center"
											   VerticalAlignment="Center"
											   AutomationProperties.AccessibilityView="Raw"
											   IsTextScaleFactorEnabled="False">
										<TextBlock.RenderTransform>
											<RotateTransform x:Name="ExpandCollapseChevronRotateTransform" />
										</TextBlock.RenderTransform>
									</TextBlock>
								</Grid>
							</Grid>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="muxc:NavigationViewItem"
		   x:Key="M3MaterialNavigationViewSettingsItemStyleWhenOnTopPane">
		<Setter Property="Foreground" Value="{ThemeResource M3MaterialNavigationViewItemForeground}" />
		<Setter Property="Background" Value="{ThemeResource M3MaterialNavigationViewItemBackground}" />
		<Setter Property="BorderBrush" Value="{ThemeResource M3MaterialNavigationViewItemBorderBrush}" />
		<Setter Property="BorderThickness" Value="{StaticResource M3MaterialNavigationViewItemBorderThickness}" />
		<Setter Property="FontFamily" Value="{StaticResource MaterialRegularFontFamily}" />
		<Setter Property="FontWeight" Value="Normal" />
		<Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
		<Setter Property="UseSystemFocusVisuals" Value="True" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="muxc:NavigationViewItem">
					<Grid x:Name="LayoutRoot"
						  Background="{TemplateBinding Background}"
						  Control.IsTemplateFocusTarget="True">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="PointerStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialTopNavigationViewItemBackgroundPointerOver}" />
										<Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialNavigationViewItemBackgroundPointerOver}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForegroundPointerOver}" />
										<!--Removing RevealBrush usage for now as it is not present in WinUI 3-->
										<!--<contract4Present:Setter Target="LayoutRoot.(media:RevealBrush.State)"
																 Value="PointerOver" />-->
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialTopNavigationViewItemBackgroundPressed}" />
										<Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialNavigationViewItemBackgroundPressed}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForegroundPressed}" />
										<!--Removing RevealBrush usage for now as it is not present in WinUI 3-->
										<!--<contract4Present:Setter Target="LayoutRoot.(media:RevealBrush.State)"
																 Value="Pressed" />-->
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Selected">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialTopNavigationViewItemBackgroundSelected}" />
										<Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialNavigationViewItemBackgroundSelected}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForegroundSelected}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerOverSelected">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialTopNavigationViewItemBackgroundPointerOver}" />
										<Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialNavigationViewItemBackgroundSelectedPointerOver}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForegroundPointerOver}" />
										<!--Removing RevealBrush usage for now as it is not present in WinUI 3-->
										<!--<contract4Present:Setter Target="LayoutRoot.(media:RevealBrush.State)"
																 Value="PointerOver" />-->
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PressedSelected">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialTopNavigationViewItemBackgroundPressed}" />
										<Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialNavigationViewItemBackgroundSelectedPressed}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForegroundPressed}" />
										<!--Removing RevealBrush usage for now as it is not present in WinUI 3-->
										<!--<contract4Present:Setter Target="LayoutRoot.(media:RevealBrush.State)"
																 Value="Pressed" />-->
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DisabledStates">
								<VisualState x:Name="Enabled" />
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForegroundDisabled}" />
										<Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource M3MaterialNavigationViewItemBorderBrushCheckedDisabled}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="PointerRectangle"
								   Fill="Transparent" />
						<Border x:Name="RevealBorder"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}" />
						<Grid x:Name="ContentGrid">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition x:Name="IconRow"
											   Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<Viewbox x:Name="IconBox"
									 Grid.Row="1"
									 Grid.Column="1"
									 Height="16"
									 Width="48"
									 Margin="0,0,0,0"
									 VerticalAlignment="Center"
									 HorizontalAlignment="Center">
								<ContentPresenter x:Name="Icon"
												  Content="{TemplateBinding Icon}"
												  Foreground="{TemplateBinding Foreground}" />
							</Viewbox>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="primitives:NavigationViewItemPresenter"
		   x:Key="M3MaterialNavigationViewItemPresenterStyleWhenOnTopPane">
		<Setter Property="Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForeground}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="primitives:NavigationViewItemPresenter">
					<Grid x:Name="LayoutRoot"
						  Background="{TemplateBinding Background}"
						  Control.IsTemplateFocusTarget="True">
						<Grid.Resources>
							<Storyboard x:Name="ExpandCollapseRotateExpandedStoryboard">
								<DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
												 Storyboard.TargetProperty="Angle"
												 From="0.0"
												 To="180.0"
												 Duration="0:0:0.1" />
							</Storyboard>
							<Storyboard x:Name="ExpandCollapseRotateCollapsedStoryboard">
								<DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
												 Storyboard.TargetProperty="Angle"
												 From="180.0"
												 To="0.0"
												 Duration="0:0:0.1" />
							</Storyboard>
						</Grid.Resources>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="PointerStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialTopNavigationViewItemBackgroundPointerOver}" />
										<Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialNavigationViewItemBackgroundPointerOver}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForegroundPointerOver}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForegroundPointerOver}" />
										<!--Removing RevealBrush usage for now as it is not present in WinUI 3-->
										<!--<contract4Present:Setter Target="LayoutRoot.(media:RevealBrush.State)"
																 Value="PointerOver" />-->
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialTopNavigationViewItemBackgroundPressed}" />
										<Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialNavigationViewItemBackgroundPressed}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForegroundPressed}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForegroundPressed}" />
										<!--Removing RevealBrush usage for now as it is not present in WinUI 3-->
										<!--<contract4Present:Setter Target="LayoutRoot.(media:RevealBrush.State)"
																 Value="Pressed" />-->
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Selected">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialTopNavigationViewItemBackgroundSelected}" />
										<Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialNavigationViewItemBackgroundSelected}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForegroundSelected}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForegroundSelected}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerOverSelected">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialTopNavigationViewItemBackgroundPointerOver}" />
										<Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialNavigationViewItemBackgroundSelectedPointerOver}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForegroundPointerOver}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForegroundPointerOver}" />
										<!--Removing RevealBrush usage for now as it is not present in WinUI 3-->
										<!--<contract4Present:Setter Target="LayoutRoot.(media:RevealBrush.State)"
																 Value="PointerOver" />-->
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PressedSelected">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialTopNavigationViewItemBackgroundPressed}" />
										<Setter Target="PointerRectangle.Fill" Value="{ThemeResource M3MaterialNavigationViewItemBackgroundSelectedPressed}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForegroundPressed}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForegroundPressed}" />
										<!--Removing RevealBrush usage for now as it is not present in WinUI 3-->
										<!--<contract4Present:Setter Target="LayoutRoot.(media:RevealBrush.State)"
																 Value="Pressed" />-->
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DisabledStates">
								<VisualState x:Name="Enabled" />
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForegroundDisabled}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForegroundDisabled}" />
										<Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource M3MaterialNavigationViewItemBorderBrushCheckedDisabled}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="NavigationViewIconPositionStates">
								<VisualState x:Name="IconOnLeft" />
								<VisualState x:Name="IconOnly">
									<VisualState.Setters>
										<Setter Target="PointerRectangle.Visibility" Value="Visible" />
										<Setter Target="LayoutRoot.MinWidth" Value="48" />
										<Setter Target="ContentPresenter.Visibility" Value="Collapsed" />
										<Setter Target="SelectionIndicatorGrid.Margin" Value="4,0,4,4" />
										<Setter Target="ExpandCollapseChevron.Margin" Value="{ThemeResource M3MaterialTopNavigationViewItemIconOnlyExpandChevronMargin}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="ContentOnly">
									<VisualState.Setters>
										<Setter Target="IconBox.Visibility" Value="Collapsed" />
										<Setter Target="ContentPresenter.Margin" Value="{ThemeResource M3MaterialTopNavigationViewItemContentOnlyContentPresenterMargin}" />
										<Setter Target="SelectionIndicatorGrid.Margin" Value="12,0,12,4" />
										<Setter Target="ExpandCollapseChevron.Margin" Value="{ThemeResource M3MaterialTopNavigationViewItemContentOnlyExpandChevronMargin}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ChevronStates">
								<VisualState x:Name="ChevronHidden" />
								<VisualState x:Name="ChevronVisibleOpen">
									<VisualState.Setters>
										<Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
										<Setter Target="ExpandCollapseChevronRotateTransform.Angle" Value="180" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="ChevronVisibleClosed">
									<VisualState.Setters>
										<Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
										<Setter Target="ExpandCollapseChevronRotateTransform.Angle" Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="PointerRectangle"
								   Fill="Transparent"
								   Visibility="Collapsed" />
						<Border x:Name="RevealBorder"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}" />
						<Grid x:Name="ContentGrid">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Viewbox x:Name="IconBox"
									 Height="16"
									 Width="16"
									 Margin="16,0,0,0"
									 VerticalAlignment="Center"
									 HorizontalAlignment="Center">
								<ContentPresenter x:Name="Icon"
												  Content="{TemplateBinding Icon}"
												  Foreground="{TemplateBinding Foreground}" />
							</Viewbox>
							<ContentPresenter x:Name="ContentPresenter"
											  Grid.Column="1"
											  Margin="{ThemeResource M3MaterialTopNavigationViewItemContentPresenterMargin}"
											  TextWrapping="NoWrap"
											  Foreground="{TemplateBinding Foreground}"
											  ContentTransitions="{TemplateBinding ContentTransitions}"
											  ContentTemplate="{TemplateBinding ContentTemplate}"
											  Content="{TemplateBinding Content}"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
											  VerticalAlignment="Center"
											  AutomationProperties.AccessibilityView="Raw" />
							<Grid x:Name="ExpandCollapseChevron"
								  Grid.Column="2"
								  Visibility="Collapsed"
								  HorizontalAlignment="Right"
								  Width="40"
								  Margin="{ThemeResource M3MaterialTopNavigationViewItemExpandChevronMargin}"
								  Background="Transparent">
								<TextBlock Foreground="{ThemeResource M3MaterialNavigationViewItemForeground}"
										   RenderTransformOrigin="0.5, 0.5"
										   FontSize="{ThemeResource M3MaterialNavigationViewItemExpandedGlyphFontSize}"
										   Text="{StaticResource M3MaterialNavigationViewItemExpandedGlyph}"
										   FontFamily="{StaticResource SymbolThemeFontFamily}"
										   VerticalAlignment="Center"
										   HorizontalAlignment="Center"
										   AutomationProperties.AccessibilityView="Raw"
										   IsTextScaleFactorEnabled="False">
									<TextBlock.RenderTransform>
										<RotateTransform x:Name="ExpandCollapseChevronRotateTransform" />
									</TextBlock.RenderTransform>
								</TextBlock>
							</Grid>
						</Grid>
						<Grid x:Name="SelectionIndicatorGrid"
							  Margin="16,0,16,4"
							  VerticalAlignment="Bottom">
							<Rectangle x:Name="SelectionIndicator"
									   Height="2"
									   Fill="{ThemeResource M3MaterialNavigationViewSelectionIndicatorForeground}"
									   Opacity="0"
									   contract7Present:RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
									   contract7Present:RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}"
									   contract7NotPresent:RadiusX="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
									   contract7NotPresent:RadiusY="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}" />
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="primitives:NavigationViewItemPresenter"
		   x:Key="M3MaterialNavigationViewItemPresenterStyleWhenOnTopPaneWithRevealFocus">
		<Setter Property="Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForeground}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="primitives:NavigationViewItemPresenter">
					<Grid x:Name="LayoutRoot"
						  Background="{TemplateBinding Background}"
						  Control.IsTemplateFocusTarget="True">
						<Grid.Resources>
							<Storyboard x:Name="ExpandCollapseRotateExpandedStoryboard">
								<DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
												 Storyboard.TargetProperty="Angle"
												 From="0.0"
												 To="180.0"
												 Duration="0:0:0.1" />
							</Storyboard>
							<Storyboard x:Name="ExpandCollapseRotateCollapsedStoryboard">
								<DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
												 Storyboard.TargetProperty="Angle"
												 From="180.0"
												 To="0.0"
												 Duration="0:0:0.1" />
							</Storyboard>
						</Grid.Resources>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="DisabledStates">
								<VisualState x:Name="Enabled" />
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForegroundDisabled}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForegroundDisabled}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialTopNavigationViewItemRevealBackgroundFocused}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemRevealIconForegroundFocused}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemRevealContentForegroundFocused}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Unfocused" />
								<VisualState x:Name="PointerFocused" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="NavigationViewIconPositionStates">
								<VisualState x:Name="IconOnLeft" />
								<VisualState x:Name="IconOnly">
									<VisualState.Setters>
										<Setter Target="PointerRectangle.Visibility" Value="Visible" />
										<Setter Target="LayoutRoot.MinWidth" Value="48" />
										<Setter Target="ContentPresenter.Visibility" Value="Collapsed" />
										<Setter Target="SelectionIndicatorGrid.Margin" Value="4,0" />
										<Setter Target="ExpandCollapseChevron.Margin" Value="{ThemeResource M3MaterialTopNavigationViewItemIconOnlyExpandChevronMargin}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="ContentOnly">
									<VisualState.Setters>
										<Setter Target="IconBox.Visibility" Value="Collapsed" />
										<Setter Target="ContentPresenter.Margin" Value="{ThemeResource M3MaterialTopNavigationViewItemContentOnlyContentPresenterMargin}" />
										<Setter Target="SelectionIndicatorGrid.Margin" Value="12,0" />
										<Setter Target="ExpandCollapseChevron.Margin" Value="{ThemeResource M3MaterialTopNavigationViewItemContentOnlyExpandChevronMargin}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ChevronStates">
								<VisualState x:Name="ChevronHidden" />
								<VisualState x:Name="ChevronVisibleOpen">
									<VisualState.Setters>
										<Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
										<Setter Target="ExpandCollapseChevronRotateTransform.Angle" Value="180" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="ChevronVisibleClosed">
									<VisualState.Setters>
										<Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
										<Setter Target="ExpandCollapseChevronRotateTransform.Angle" Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="PointerRectangle"
								   Fill="Transparent"
								   Visibility="Collapsed" />
						<Grid x:Name="ContentGrid">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Viewbox x:Name="IconBox"
									 Height="16"
									 Width="16"
									 Margin="16,0,0,0"
									 VerticalAlignment="Center"
									 HorizontalAlignment="Center">
								<ContentPresenter x:Name="Icon"
												  Content="{TemplateBinding Icon}"
												  Foreground="{TemplateBinding Foreground}" />
							</Viewbox>
							<ContentPresenter x:Name="ContentPresenter"
											  Grid.Column="1"
											  Margin="{ThemeResource M3MaterialTopNavigationViewItemContentPresenterMargin}"
											  Foreground="{TemplateBinding Foreground}"
											  TextWrapping="NoWrap"
											  ContentTransitions="{TemplateBinding ContentTransitions}"
											  ContentTemplate="{TemplateBinding ContentTemplate}"
											  Content="{TemplateBinding Content}"
											  VerticalAlignment="Center"
											  AutomationProperties.AccessibilityView="Raw" />
							<Grid x:Name="ExpandCollapseChevron"
								  Grid.Column="2"
								  Visibility="Collapsed"
								  HorizontalAlignment="Right"
								  Width="40"
								  Margin="{ThemeResource M3MaterialNavigationViewItemExpandChevronMargin}"
								  Background="Transparent">
								<TextBlock Foreground="{ThemeResource M3MaterialNavigationViewItemForeground}"
										   RenderTransformOrigin="0.5, 0.5"
										   FontSize="{ThemeResource M3MaterialNavigationViewItemExpandedGlyphFontSize}"
										   Text="{StaticResource M3MaterialNavigationViewItemExpandedGlyph}"
										   FontFamily="{StaticResource SymbolThemeFontFamily}"
										   VerticalAlignment="Center"
										   HorizontalAlignment="Center"
										   AutomationProperties.AccessibilityView="Raw"
										   IsTextScaleFactorEnabled="False">
									<TextBlock.RenderTransform>
										<RotateTransform x:Name="ExpandCollapseChevronRotateTransform" />
									</TextBlock.RenderTransform>
								</TextBlock>
							</Grid>
						</Grid>
						<Grid x:Name="SelectionIndicatorGrid"
							  Margin="16,0,16,4"
							  VerticalAlignment="Bottom">
							<Rectangle x:Name="SelectionIndicator"
									   Height="2"
									   Fill="{ThemeResource M3MaterialNavigationViewSelectionIndicatorForeground}"
									   Opacity="0"
									   contract7Present:RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
									   contract7Present:RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}"
									   contract7NotPresent:RadiusX="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
									   contract7NotPresent:RadiusY="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}" />
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="primitives:NavigationViewItemPresenter"
		   x:Key="M3MaterialNavigationViewItemPresenterStyleWhenOnTopPaneOverflow">
		<Setter Property="Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForeground}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="primitives:NavigationViewItemPresenter">
					<Grid x:Name="LayoutRoot"
						  Height="40"
						  Background="{TemplateBinding Background}"
						  Control.IsTemplateFocusTarget="True">
						<Grid.Resources>
							<Storyboard x:Name="ExpandCollapseRotateExpandedStoryboard">
								<DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
												 Storyboard.TargetProperty="Angle"
												 From="0.0"
												 To="180.0"
												 Duration="0:0:0.1" />
							</Storyboard>
							<Storyboard x:Name="ExpandCollapseRotateCollapsedStoryboard">
								<DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
												 Storyboard.TargetProperty="Angle"
												 From="180.0"
												 To="0.0"
												 Duration="0:0:0.1" />
							</Storyboard>
						</Grid.Resources>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="PointerStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialNavigationViewItemBackgroundPointerOver}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialNavigationViewItemForegroundPointerOver}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialNavigationViewItemForegroundPointerOver}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialNavigationViewItemBackgroundPressed}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialNavigationViewItemForegroundPressed}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialNavigationViewItemForegroundPressed}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Selected">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialNavigationViewItemBackgroundSelected}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialNavigationViewItemForegroundSelected}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialNavigationViewItemForegroundSelected}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerOverSelected">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialNavigationViewItemBackgroundSelectedPointerOver}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialNavigationViewItemForegroundPointerOver}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialNavigationViewItemForegroundPointerOver}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PressedSelected">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background" Value="{ThemeResource M3MaterialNavigationViewItemBackgroundSelectedPressed}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialNavigationViewItemForegroundPressed}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialNavigationViewItemForegroundPressed}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DisabledStates">
								<VisualState x:Name="Enabled" />
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="Icon.Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForegroundDisabled}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource M3MaterialTopNavigationViewItemForegroundDisabled}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="NavigationViewIconPositionStates">
								<VisualState x:Name="IconOnLeft" />
								<VisualState x:Name="IconOnly" />
								<VisualState x:Name="ContentOnly">
									<VisualState.Setters>
										<Setter Target="IconBox.Visibility" Value="Collapsed" />
										<Setter Target="ContentPresenter.Margin" Value="{ThemeResource M3MaterialTopNavigationViewItemOnOverflowNoIconContentPresenterMargin}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ChevronStates">
								<VisualState x:Name="ChevronHidden" />
								<VisualState x:Name="ChevronVisibleOpen">
									<VisualState.Setters>
										<Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
										<Setter Target="ExpandCollapseChevronRotateTransform.Angle" Value="180" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="ChevronVisibleClosed">
									<VisualState.Setters>
										<Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
										<Setter Target="ExpandCollapseChevronRotateTransform.Angle" Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="PresenterContentRootGrid">
							<!-- Wrap SelectionIndicator in a grid so that its offset is 0,0 - this enables the offset animation. -->
							<Grid Margin="4,0,0,0"
								  HorizontalAlignment="Left"
								  VerticalAlignment="Center">

								<Rectangle x:Name="SelectionIndicator"
										   Width="2"
										   Height="24"
										   Fill="{ThemeResource M3MaterialNavigationViewSelectionIndicatorForeground}"
										   Opacity="0.0"
										   contract7Present:RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
										   contract7Present:RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}"
										   contract7NotPresent:RadiusX="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
										   contract7NotPresent:RadiusY="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}" />
							</Grid>
							<Grid x:Name="ContentGrid">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Viewbox x:Name="IconBox"
										 Height="16"
										 Width="16"
										 Margin="16,0,0,0"
										 VerticalAlignment="Center"
										 HorizontalAlignment="Center">
									<ContentPresenter x:Name="Icon"
													  Content="{TemplateBinding Icon}"
													  Foreground="{TemplateBinding Foreground}" />
								</Viewbox>
								<ContentPresenter x:Name="ContentPresenter"
												  Grid.Column="1"
												  Margin="{ThemeResource M3MaterialTopNavigationViewItemOnOverflowContentPresenterMargin}"
												  Foreground="{TemplateBinding Foreground}"
												  TextWrapping="NoWrap"
												  ContentTransitions="{TemplateBinding ContentTransitions}"
												  ContentTemplate="{TemplateBinding ContentTemplate}"
												  Content="{TemplateBinding Content}"
												  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
												  VerticalAlignment="Center"
												  AutomationProperties.AccessibilityView="Raw" />
								<Grid x:Name="ExpandCollapseChevron"
									  Grid.Column="2"
									  Visibility="Collapsed"
									  HorizontalAlignment="Right"
									  Width="40"
									  Margin="{ThemeResource M3MaterialTopNavigationViewItemOnOverflowExpandChevronMargin}"
									  Padding="{ThemeResource M3MaterialTopNavigationViewItemOnOverflowExpandChevronPadding}"
									  Background="Transparent">
									<TextBlock Foreground="{ThemeResource M3MaterialNavigationViewItemForeground}"
											   RenderTransformOrigin="0.5, 0.5"
											   FontSize="{ThemeResource M3MaterialNavigationViewItemExpandedGlyphFontSize}"
											   Text="{StaticResource M3MaterialNavigationViewItemExpandedGlyph}"
											   FontFamily="{StaticResource SymbolThemeFontFamily}"
											   HorizontalAlignment="Center"
											   VerticalAlignment="Center"
											   AutomationProperties.AccessibilityView="Raw"
											   IsTextScaleFactorEnabled="False">
										<TextBlock.RenderTransform>
											<RotateTransform x:Name="ExpandCollapseChevronRotateTransform" />
										</TextBlock.RenderTransform>
									</TextBlock>
								</Grid>
							</Grid>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="BaseM3MaterialNavigationViewItemStyle"
		   TargetType="muxc:NavigationViewItem">
		<Setter Property="Foreground" Value="{ThemeResource M3MaterialNavigationViewItemForeground}" />
		<Setter Property="Background" Value="{ThemeResource M3MaterialNavigationViewItemBackground}" />
		<Setter Property="BorderBrush" Value="{ThemeResource M3MaterialNavigationViewItemBorderBrush}" />
		<Setter Property="BorderThickness" Value="{StaticResource M3MaterialNavigationViewItemBorderThickness}" />
		<Setter Property="FontFamily" Value="{StaticResource MaterialRegularFontFamily}" />
		<Setter Property="FontWeight" Value="Normal" />
		<Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
		<Setter Property="Margin" Value="{ThemeResource M3MaterialNavigationViewItemMargin}" />
		<Setter Property="Padding" Value="{ThemeResource M3MaterialNavigationViewItemPadding}" />
		<Setter Property="UseSystemFocusVisuals" Value="True" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="TabNavigation" Value="Once" />
		<contract7Present:Setter Property="CornerRadius"
								 Value="{ThemeResource M3MaterialNavigationViewItemCornerRadius}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="muxc:NavigationViewItem">
					<Grid x:Name="NVIRootGrid">
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ItemOnNavigationViewListPositionStates">
								<VisualState x:Name="OnLeftNavigation">
									<VisualState.Setters>
										<Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource M3MaterialNavigationViewItemPresenterStyleWhenOnLeftPane}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="OnLeftNavigationReveal">
									<VisualState.Setters>
										<Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource M3MaterialNavigationViewItemPresenterStyleWhenOnLeftPaneWithRevealFocus}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="OnTopNavigationPrimary">
									<VisualState.Setters>
										<Setter Target="NavigationViewItemPresenter.Margin" Value="{ThemeResource M3MaterialTopNavigationViewItemMargin}" />
										<Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource M3MaterialNavigationViewItemPresenterStyleWhenOnTopPane}" />
										<contract7NotPresent:Setter Target="ChildrenFlyout.Placement"
																	Value="Bottom" />
										<contract7Present:Setter Target="ChildrenFlyout.Placement"
																 Value="BottomEdgeAlignedLeft" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="OnTopNavigationPrimaryReveal">
									<VisualState.Setters>
										<Setter Target="NavigationViewItemPresenter.Margin" Value="{ThemeResource M3MaterialTopNavigationViewItemMargin}" />
										<Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource M3MaterialNavigationViewItemPresenterStyleWhenOnTopPaneWithRevealFocus}" />
										<contract7NotPresent:Setter Target="ChildrenFlyout.Placement"
																	Value="Bottom" />
										<contract7Present:Setter Target="ChildrenFlyout.Placement"
																 Value="BottomEdgeAlignedLeft" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="OnTopNavigationOverflow">
									<VisualState.Setters>
										<Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource M3MaterialNavigationViewItemPresenterStyleWhenOnTopPaneOverflow}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>


						<!-- on uwp: primitiveContract7Present:CornerRadius is to be expected, using contract7Present wont work. on uno, it is the opposite... -->
						<!-- opting to drop the conditional xmlns as it will be true anyways -->
						<primitives:NavigationViewItemPresenter x:Name="NavigationViewItemPresenter"
																Icon="{TemplateBinding Icon}"
																ContentTransitions="{TemplateBinding ContentTransitions}"
																ContentTemplate="{TemplateBinding ContentTemplate}"
																Margin="{TemplateBinding Margin}"
																Padding="{TemplateBinding Padding}"
																Foreground="{TemplateBinding Foreground}"
																Background="{TemplateBinding Background}"
																BorderBrush="{TemplateBinding BorderBrush}"
																BorderThickness="{TemplateBinding BorderThickness}"
																UseSystemFocusVisuals="{TemplateBinding UseSystemFocusVisuals}"
																VerticalAlignment="{TemplateBinding VerticalAlignment}"
																HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
																VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
																HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
																ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
																Content="{TemplateBinding Content}"
																CornerRadius="{TemplateBinding CornerRadius}"
																IsTabStop="false"
																Control.IsTemplateFocusTarget="True" />
						<muxc:ItemsRepeater Grid.Row="1"
											Visibility="Collapsed"
											x:Name="NavigationViewItemMenuItemsHost">
							<muxc:ItemsRepeater.Layout>
								<muxc:StackLayout Orientation="Vertical" />
							</muxc:ItemsRepeater.Layout>
						</muxc:ItemsRepeater>
						<FlyoutBase.AttachedFlyout>
							<Flyout x:Name="ChildrenFlyout"
									contract7NotPresent:Placement="Right"
									contract7Present:Placement="RightEdgeAlignedTop">
								<Flyout.FlyoutPresenterStyle>
									<Style TargetType="FlyoutPresenter">
										<Setter Property="Padding" Value="{ThemeResource M3MaterialNavigationViewItemChildrenMenuFlyoutPadding}" />
										<!-- Set negative top margin to make the flyout align exactly with the button -->
										<Setter Property="Margin" Value="0,-4,0,0" />
										<Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto" />
										<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
										<Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
										<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
										<Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
										<contract7Present:Setter Property="CornerRadius"
																 Value="{ThemeResource OverlayCornerRadius}" />
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="FlyoutPresenter">
													<ScrollViewer x:Name="ScrollViewer"
																  ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}"
																  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
																  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
																  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
																  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
																  AutomationProperties.AccessibilityView="Raw">
														<ContentPresenter x:Name="ContentPresenter"
																		  Background="{TemplateBinding Background}"
																		  BorderBrush="{TemplateBinding BorderBrush}"
																		  BorderThickness="{TemplateBinding BorderThickness}"
																		  Content="{TemplateBinding Content}"
																		  ContentTemplate="{TemplateBinding ContentTemplate}"
																		  ContentTransitions="{TemplateBinding ContentTransitions}"
																		  Padding="{TemplateBinding Padding}"
																		  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
																		  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
																		  contract7Present:CornerRadius="{TemplateBinding CornerRadius}"
																		  contract7NotPresent:CornerRadius="{ThemeResource OverlayCornerRadius}" />
													</ScrollViewer>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Flyout.FlyoutPresenterStyle>
								<Grid x:Name="FlyoutRootGrid">
									<Grid x:Name="FlyoutContentGrid" />
								</Grid>
							</Flyout>
						</FlyoutBase.AttachedFlyout>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--#endregion-->

	<!--#region Aliases & Default Styles -->

	<Style x:Key="M3MaterialNavigationViewStyle"
		   TargetType="muxc:NavigationView"
		   BasedOn="{StaticResource BaseM3MaterialNavigationViewStyle}" />

	<Style x:Key="M3MaterialNavigationViewItemStyle"
		   TargetType="muxc:NavigationViewItem"
		   BasedOn="{StaticResource BaseM3MaterialNavigationViewItemStyle}" />

	<!--#endregion -->

</ResourceDictionary>
