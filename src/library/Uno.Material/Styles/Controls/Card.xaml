<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:converters="using:Uno.Material.Converters"
					xmlns:controls="using:Uno.Material.Controls">

	<!-- Card ToggleButton Variables -->
	<SolidColorBrush x:Key="CardsBackgroundColorBrush"
					 Color="{ThemeResource SurfaceColor}" />
	<StaticResource x:Key="CardsStrokeColor"
					ResourceKey="OnSurfaceMediumBrush" />

	<StaticResource x:Key="CardsHoverOverlayColor"
					ResourceKey="OnSurfaceHoverBrush" />
	<StaticResource x:Key="CardsFocusedOverlayColor"
					ResourceKey="OnSurfaceFocusedBrush" />
	<StaticResource x:Key="CardsSelectedOverlayColor"
					ResourceKey="OnSurfaceFocusedBrush" />
	<StaticResource x:Key="CardsRippleColor"
					ResourceKey="OnSurfaceFocusedBrush" />
	<StaticResource x:Key="CardsIconColor"
					ResourceKey="OnSurfaceBrush" />
					
	<StaticResource x:Key="CardsExpanderSeparatorColor"
					ResourceKey="OnSurfaceFocusedBrush" />
					
	<StaticResource x:Key="CardsHeaderTypo"
					ResourceKey="Headline6" />
	<StaticResource x:Key="CardsSubHeaderTypo"
					ResourceKey="Body2" />
	<StaticResource x:Key="CardsSupportingTextTypo"
					ResourceKey="Body2" />

	<StaticResource x:Key="CardsExpenderToggleButtonStyle"
					ResourceKey="TextMaterialToggleButtonStyle" />
	
	<!-- Other Card Variables -->
	<CornerRadius x:Key="CardsBorderRadius">4</CornerRadius>
	<Thickness x:Key="CardsStrokeWidth">1</Thickness>

	<!-- Converters -->
	<converters:FromEmptyStringToValueConverter x:Name="EmptyToCollapsed"
												NotNullOrEmptyValue="Visible"
												NullOrEmptyValue="Collapsed" />

	<converters:FromNullToValueConverter x:Name="NullToCollapsed"
										 NotNullValue="Visible"
										 NullValue="Collapsed" />

	<Style x:Key="OutlinedMaterialCardStyle"
		   TargetType="controls:Card">

		<Setter Property="MinHeight"
				Value="72" />
		<Setter Property="MaxWidth"
				Value="344" />
		<Setter Property="Padding"
				Value="16,14" />
		<Setter Property="Background"
				Value="{StaticResource CardsBackgroundColorBrush}" />
		<Setter Property="BorderBrush"
				Value="{StaticResource CardsStrokeColor}" />
		<Setter Property="BorderThickness"
				Value="{StaticResource CardsStrokeWidth}" />
		<Setter Property="CornerRadius"
				Value="{StaticResource CardsBorderRadius}" />
		<Setter Property="HorizontalAlignment"
				Value="Stretch" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="controls:Card">

					<Grid x:Name="GridRoot"
						  MinWidth="{TemplateBinding MinWidth}"
						  MinHeight="{TemplateBinding MinHeight}"
						  MaxWidth="{TemplateBinding MaxWidth}"
						  MaxHeight="{TemplateBinding MaxHeight}"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  CornerRadius="{TemplateBinding CornerRadius}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  HorizontalAlignment="{TemplateBinding HorizontalAlignment}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">

								<VisualState x:Name="Normal">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="HoverOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0:0:0.25"
														 From="0"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
										<Setter Target="GridRoot.Opacity"
												Value="0.38" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="OpenStates">
								<VisualState x:Name="Closed">
									<Storyboard>
										<DoubleAnimation x:Name="CloseAnimation"
														 Storyboard.TargetName="ExpanderPresenter"
														 Storyboard.TargetProperty="Height"
														 Duration="00:00:00"
														 To="0"
														 EnableDependentAnimation="True">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseOut" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Opened">
									<Storyboard>
										<DoubleAnimation x:Name="OpeningAnimation"
														 Storyboard.TargetName="ExpanderPresenter"
														 Storyboard.TargetProperty="Height"
														 Duration="00:00:00"
														 To="{Binding PresenterHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
														 EnableDependentAnimation="True">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseOut" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualStateGroup.Transitions>
									<VisualTransition From="Opened"
													  To="Closed">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="ExpanderPresenter"
															 Storyboard.TargetProperty="Height"
															 Duration="00:00:00"
															 To="0"
															 EnableDependentAnimation="True">
												<DoubleAnimation.EasingFunction>
													<CubicEase EasingMode="EaseOut" />
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</VisualTransition>

									<VisualTransition From="Closed"
													  To="Opened">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="ExpanderPresenter"
															 Storyboard.TargetProperty="Height"
															 Duration="00:00:00"
															 To="{Binding PresenterHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
															 EnableDependentAnimation="True">
												<DoubleAnimation.EasingFunction>
													<CubicEase EasingMode="EaseOut" />
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</VisualTransition>
								</VisualStateGroup.Transitions>
							</VisualStateGroup>

							<VisualStateGroup x:Name="FocusStates">

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerFocused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Unfocused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>

						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>

						<!-- Border for PointerOver State-->
						<Border x:Name="HoverOverlay"
								Background="{StaticResource CardsHoverOverlayColor}"
								Opacity="0"
								Grid.RowSpan="4"
								Grid.ColumnSpan="2" />

						<!-- Border for Focused State-->
						<Border x:Name="FocusedOverlay"
								Background="{StaticResource CardsFocusedOverlayColor}"
								Opacity="0"
								Grid.RowSpan="4"
								Grid.ColumnSpan="2" />

						<!-- Border for Dragged/Selected State-->
						<!-- Todo: Add ElevatedView on Dragged/Selected state of button -->
						<Border x:Name="SelectedOverlay"
								Background="{StaticResource CardsSelectedOverlayColor}"
								Opacity="0"
								Grid.RowSpan="4"
								Grid.ColumnSpan="2" />

						<!-- Ripple effect -->
						<controls:Ripple Feedback="{StaticResource CardsRippleColor}"
										 BorderBrush="{TemplateBinding BorderBrush}"
										 BorderThickness="{TemplateBinding BorderThickness}"
										 CornerRadius="{StaticResource CardsBorderRadius}"
										 RippleSizeMultiplier="0.85"
										 Padding="{TemplateBinding Padding}"
										 AutomationProperties.AccessibilityView="Raw"
										 Grid.RowSpan="4"
										 Grid.ColumnSpan="2" />

						<!-- Media content part -->
						<ContentPresenter x:Name="MediaContentPresenter"
										  Content="{TemplateBinding MediaContent}"
										  ContentTemplate="{TemplateBinding MediaContentTemplate}"
										  Visibility="{Binding MediaContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EmptyToCollapsed}}"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										  AutomationProperties.AccessibilityView="Raw"
										  IsHitTestVisible="False"
										  Grid.ColumnSpan="2" />

						<StackPanel IsHitTestVisible="False"
									Padding="{TemplateBinding Padding}"
									Grid.Row="1"
									Grid.ColumnSpan="2">

							<!-- Header part-->
							<TextBlock Text="{TemplateBinding Header}"
									   Style="{StaticResource CardsHeaderTypo}" />

							<!-- SubHeader part-->
							<TextBlock Text="{TemplateBinding SubHeader}"
									   Style="{StaticResource CardsSubHeaderTypo}"
									   Grid.Row="1" />

							<!-- SupportingText part-->
							<TextBlock Visibility="{Binding SupportingText, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EmptyToCollapsed}}"
									   Text="{TemplateBinding SupportingText}"
									   Style="{StaticResource CardsSupportingTextTypo}"
									   Margin="0,12,0,0"
									   Grid.Row="1" />
						</StackPanel>

						<!-- Expender part -->
						<StackPanel Visibility="{Binding ExpanderHeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EmptyToCollapsed}}"
									Grid.Row="2"
									Grid.ColumnSpan="2">

							<Rectangle x:Name="ExpanderSeparator"
									   Fill="{StaticResource CardsExpanderSeparatorColor}"
									   Height="1"
									   HorizontalAlignment="Stretch"
									   Margin="0,12,0,0" />

							<ContentPresenter x:Name="ExpanderPresenter"
											  Content="{TemplateBinding ExpanderContent}"
											  ContentTemplate="{TemplateBinding ExpanderContentTemplate}"
											  Height="0" />

							<ToggleButton Content="{TemplateBinding ExpanderHeaderContent}"
										  Style="{StaticResource CardsExpenderToggleButtonStyle}"
										  IsChecked="{Binding IsOpened, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
										  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  Padding="10,2"
										  Margin="6" />
						</StackPanel>

						<!-- Buttons section part -->
						<ItemsControl Visibility="{Binding ButtonsItemsSource, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToCollapsed}}"
									  ItemsSource="{TemplateBinding ButtonsItemsSource}"
									  Grid.Row="3">

							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<StackPanel Orientation="Horizontal" />
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>

							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<Button Content="{Binding}"
											Style="{StaticResource TextMaterialButtonStyle}"
											Padding="10,2"
											Margin="6" />
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>

						<!-- Icons section part -->
						<ItemsControl Visibility="{Binding IconsItemsSource, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToCollapsed}}"
									  ItemsSource="{TemplateBinding IconsItemsSource}"
									  Grid.Row="3"
									  Grid.Column="1">

							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<StackPanel Orientation="Horizontal" />
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>

							<ItemsControl.ItemTemplate>
								<DataTemplate>

									<Button Content="{Binding}"
											Style="{StaticResource TextMaterialButtonStyle}"
											Margin="6"
											Padding="10,2">
										<Button.ContentTemplate>
											<DataTemplate>
												<Path Fill="{StaticResource CardsIconColor}"
													  Data="{Binding}"
													  HorizontalAlignment="Left" />
											</DataTemplate>
										</Button.ContentTemplate>
									</Button>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="OtherOutlinedLayoutMaterialCardStyle"
		   TargetType="controls:Card">

		<Setter Property="MinHeight"
				Value="72" />
		<Setter Property="MaxWidth"
				Value="344" />
		<Setter Property="Padding"
				Value="16,14" />
		<Setter Property="Background"
				Value="{StaticResource CardsBackgroundColorBrush}" />
		<Setter Property="BorderBrush"
				Value="{StaticResource CardsStrokeColor}" />
		<Setter Property="BorderThickness"
				Value="{StaticResource CardsStrokeWidth}" />
		<Setter Property="CornerRadius"
				Value="{StaticResource CardsBorderRadius}" />
		<Setter Property="HorizontalAlignment"
				Value="Stretch" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="controls:Card">

					<Grid x:Name="GridRoot"
						  MinWidth="{TemplateBinding MinWidth}"
						  MinHeight="{TemplateBinding MinHeight}"
						  MaxWidth="{TemplateBinding MaxWidth}"
						  MaxHeight="{TemplateBinding MaxHeight}"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  CornerRadius="{TemplateBinding CornerRadius}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  HorizontalAlignment="{TemplateBinding HorizontalAlignment}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">

								<VisualState x:Name="Normal">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="HoverOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0:0:0.25"
														 From="0"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
										<Setter Target="GridRoot.Opacity"
												Value="0.38" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="OpenStates">

								<VisualState x:Name="Closed">
									<Storyboard>
										<DoubleAnimation x:Name="CloseAnimation"
														 Storyboard.TargetName="ExpanderPresenter"
														 Storyboard.TargetProperty="Height"
														 Duration="00:00:00"
														 To="0"
														 EnableDependentAnimation="True">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseOut" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Opened">
									<Storyboard>
										<DoubleAnimation x:Name="OpeningAnimation"
														 Storyboard.TargetName="ExpanderPresenter"
														 Storyboard.TargetProperty="Height"
														 Duration="00:00:00"
														 To="{Binding PresenterHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
														 EnableDependentAnimation="True">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseOut" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualStateGroup.Transitions>
									<VisualTransition From="Opened"
													  To="Closed">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="ExpanderPresenter"
															 Storyboard.TargetProperty="Height"
															 Duration="00:00:00"
															 To="0"
															 EnableDependentAnimation="True">
												<DoubleAnimation.EasingFunction>
													<CubicEase EasingMode="EaseOut" />
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</VisualTransition>

									<VisualTransition From="Closed"
													  To="Opened">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="ExpanderPresenter"
															 Storyboard.TargetProperty="Height"
															 Duration="00:00:00"
															 To="{Binding PresenterHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
															 EnableDependentAnimation="True">
												<DoubleAnimation.EasingFunction>
													<CubicEase EasingMode="EaseOut" />
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</VisualTransition>
								</VisualStateGroup.Transitions>
							</VisualStateGroup>

							<VisualStateGroup x:Name="FocusStates">

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerFocused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Unfocused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>

						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>

						<!-- Border for PointedOver state -->
						<Border x:Name="HoverOverlay"
								Background="{StaticResource CardsHoverOverlayColor}"
								Opacity="0"
								Grid.RowSpan="5"
								Grid.ColumnSpan="3" />

						<!-- Border for Focus state -->
						<Border x:Name="FocusedOverlay"
								Background="{StaticResource CardsFocusedOverlayColor}"
								Opacity="0"
								Grid.RowSpan="5"
								Grid.ColumnSpan="3" />

						<!-- Border for Dragged/Selected state -->
						<!-- Todo: Add ElevatedView on Dragged/Selected state of button -->
						<Border x:Name="SelectedOverlay"
								Background="{StaticResource CardsSelectedOverlayColor}"
								Opacity="0"
								Grid.RowSpan="5"
								Grid.ColumnSpan="3" />

						<!-- Ripple effect -->
						<controls:Ripple Feedback="{StaticResource CardsRippleColor}"
										 RippleSizeMultiplier="0.85"
										 BorderBrush="{TemplateBinding BorderBrush}"
										 BorderThickness="{TemplateBinding BorderThickness}"
										 CornerRadius="{StaticResource CardsBorderRadius}"
										 Padding="{TemplateBinding Padding}"
										 AutomationProperties.AccessibilityView="Raw"
										 Grid.RowSpan="5"
										 Grid.ColumnSpan="3" />

						<!-- Avatart part -->
						<ContentPresenter x:Name="AvatarContentPresenter"
										  Content="{TemplateBinding AvatarContent}"
										  ContentTemplate="{TemplateBinding AvatarContentTemplate}"
										  Visibility="{Binding AvatarContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EmptyToCollapsed}}"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										  AutomationProperties.AccessibilityView="Raw"
										  IsHitTestVisible="False"
										  Margin="16,0,0,0" />

						<StackPanel IsHitTestVisible="False"
									Padding="{TemplateBinding Padding}"
									Grid.Column="1">

							<!-- Header part -->
							<TextBlock Text="{TemplateBinding Header}"
									   Style="{StaticResource CardsHeaderTypo}" />

							<!-- SubHeader part -->
							<TextBlock Text="{TemplateBinding SubHeader}"
									   Style="{StaticResource CardsSubHeaderTypo}"
									   Grid.Row="1" />
						</StackPanel>

						<!-- Icons buttons part -->
						<ItemsControl Visibility="{Binding IconsItemsSource, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToCollapsed}}"
									  ItemsSource="{TemplateBinding IconsItemsSource}"
									  Grid.Column="2">

							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<StackPanel Orientation="Horizontal" />
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>

							<ItemsControl.ItemTemplate>
								<DataTemplate>

									<Button Content="{Binding}"
											Style="{StaticResource TextMaterialButtonStyle}"
											Margin="6"
											Padding="10,2">
										<Button.ContentTemplate>
											<DataTemplate>
												<Path Fill="{StaticResource CardsIconColor}"
													  Data="{Binding}"
													  HorizontalAlignment="Left" />
											</DataTemplate>
										</Button.ContentTemplate>
									</Button>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>

						<!-- Media content part -->
						<ContentPresenter x:Name="MediaContentPresenter"
										  Content="{TemplateBinding MediaContent}"
										  ContentTemplate="{TemplateBinding MediaContentTemplate}"
										  Visibility="{Binding MediaContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EmptyToCollapsed}}"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										  AutomationProperties.AccessibilityView="Raw"
										  IsHitTestVisible="False"
										  Grid.Row="1"
										  Grid.ColumnSpan="3" />

						<!-- Supporting text part -->
						<TextBlock Visibility="{Binding SupportingText, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EmptyToCollapsed}}"
								   Text="{TemplateBinding SupportingText}"
								   Style="{StaticResource CardsSupportingTextTypo}"
								   Margin="16,12"
								   Grid.Row="2"
								   Grid.ColumnSpan="3" />

						<!-- Expander part -->
						<StackPanel Visibility="{Binding ExpanderHeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EmptyToCollapsed}}"
									Grid.Row="3"
									Grid.ColumnSpan="3">

							<Rectangle x:Name="ExpanderSeparator"
									   Fill="{StaticResource OnSurfaceFocusedBrush}"
									   Height="1"
									   HorizontalAlignment="Stretch"
									   Margin="0,12,0,0" />

							<ContentPresenter x:Name="ExpanderPresenter"
											  Content="{TemplateBinding ExpanderContent}"
											  ContentTemplate="{TemplateBinding ExpanderContentTemplate}"
											  Height="0" />

							<ToggleButton Content="{TemplateBinding ExpanderHeaderContent}"
										  Style="{StaticResource CardsExpenderToggleButtonStyle}"
										  IsChecked="{Binding IsOpened, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
										  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
						</StackPanel>

						<!-- Action Buttons part -->
						<ItemsControl Visibility="{Binding ButtonsItemsSource, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToCollapsed}}"
									  ItemsSource="{TemplateBinding ButtonsItemsSource}"
									  Grid.Row="4"
									  Grid.ColumnSpan="3">

							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<StackPanel Orientation="Horizontal" />
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>

							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<Button Content="{Binding}"
											Style="{StaticResource TextMaterialButtonStyle}"
											Margin="6"
											Padding="10,2" />
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
