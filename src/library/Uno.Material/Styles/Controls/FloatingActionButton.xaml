<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:controls="using:Uno.Material.Controls"
					xmlns:toolkit="using:Uno.UI.Toolkit"
					xmlns:ios="http://uno.ui/ios"
					xmlns:android="http://uno.ui/android"
					xmlns:not_android="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:wasm="http://uno.ui/wasm"
					xmlns:not_win="http://uno.ui/not_win"
					xmlns:extensions="using:Uno.Material.Extensions"
					mc:Ignorable="d ios android wasm not_win">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="../Application/Colors.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<!-- Need full color for disabled state or else the elevated view looks weird -->
	<ResourceDictionary.ThemeDictionaries>

		<!-- Light Theme -->
		<ResourceDictionary x:Key="Light">
			<Color x:Key="ButtonFabLowFabBackgroundColor">#9F9F9F</Color>
		</ResourceDictionary>
		
		<!-- Dark Theme -->
		<ResourceDictionary x:Key="Dark">
			<Color x:Key="ButtonFabLowFabBackgroundColor">#606060</Color>
		</ResourceDictionary>
	</ResourceDictionary.ThemeDictionaries>
			
	<SolidColorBrush x:Key="ButtonFabFocusOverlayBackgroundColor"
					 Color="Transparent" />
	<SolidColorBrush x:Key="ButtonFabLowFabBackgroundColorBrush"
					 Color="{ThemeResource ButtonFabLowFabBackgroundColor}" />
	<StaticResource x:Key="ButtonFabFocusOverlayBorderColor"
					ResourceKey="MaterialOnPrimaryBrush" />

	<!-- Documented variables -->
	<x:Double x:Key="MaterialFabFontSize">14</x:Double>
	<FontFamily x:Key="MaterialFabFontFamily">Roboto</FontFamily>

	<!-- Documented variables (adaptive) -->
	<!--
		Only "border" properties scale, content remains the same size (16):
		large: { height: 56, width: 56 + text?, padding: 20, corner-radius: 28 }
		small: { height: 40, width: 40 + text?, padding: 12, corner-radius: 20 }
	-->
	<CornerRadius x:Key="MaterialFabLargeCorderRadius">28</CornerRadius>
	<Thickness x:Key="MaterialFabLargePadding">20</Thickness>
	<CornerRadius x:Key="MaterialFabSmallCorderRadius">20</CornerRadius>
	<Thickness x:Key="MaterialFabSmallPadding">12</Thickness>

	<!-- Undocumented variables -->
	<x:Double x:Key="MaterialFabContentWidthOrHeight">16</x:Double>
	<x:Double x:Key="MaterialFabIconTextPadding">12</x:Double>

	<!-- Known Issue - Ellipse Fill with SolidColorBrushes that contain opacity is merged -->
	<!-- Known Issue - VisualState Setters can not be applied inside ElevatedView -->
	<!-- Known Issue - Wasm ElevatedView is cut off for some shapes (including ellipses) -->
	<Style x:Key="MaterialFabStyle"
		   TargetType="Button">

		<Setter Property="Background"
				Value="{StaticResource MaterialPrimaryBrush}" />
		<Setter Property="Foreground"
				Value="{StaticResource MaterialOnPrimaryBrush}" />
		<Setter Property="FontFamily"
				Value="{StaticResource MaterialButtonFontFamily}" />
		<Setter Property="FontSize"
				Value="{StaticResource MaterialFabFontSize}" />
		<Setter Property="FontWeight"
				Value="SemiBold" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="CornerRadius"
				Value="{StaticResource MaterialFabLargeCorderRadius}" />
		<Setter Property="Padding"
				Value="{StaticResource MaterialFabLargePadding}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid>

						<toolkit:ElevatedView x:Name="ElevatedView"
											  Margin="0,0,6,6"
											  Elevation="6"
											  CornerRadius="{TemplateBinding CornerRadius}"
											  Background="Transparent">

							<controls:Ripple x:Name="Ripple"
											 CornerRadius="{TemplateBinding CornerRadius}"
											 Feedback="{TemplateBinding Foreground}"
											 FeedbackOpacity="{StaticResource MaterialPressedOpacity}">

								<Grid x:Name="Root"
									  Background="{TemplateBinding Background}">
									<StackPanel x:Name="ContentPanel"
												Orientation="Horizontal"
												Margin="{TemplateBinding Padding}">

										<!-- Icon -->
										<Viewbox Height="{StaticResource MaterialFabContentWidthOrHeight}"
												 Width="{StaticResource MaterialFabContentWidthOrHeight}"
												 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
												 Visibility="{Binding Path=(extensions:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Material_NullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
											<ContentPresenter Content="{Binding Path=(extensions:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
															  Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
										</Viewbox>

										<!-- Icon/Content spacing -->
										<Border Visibility="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Material_EmptyToCollapsed}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
											<Border Width="{StaticResource MaterialFabIconTextPadding}"
													Visibility="{Binding Path=(extensions:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Material_NullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />
										</Border>

										<!-- Content -->
										<ContentPresenter x:Name="ContentPresenter"
														  Content="{TemplateBinding Content}"
														  ContentTemplate="{TemplateBinding ContentTemplate}"
														  ContentTransitions="{TemplateBinding ContentTransitions}"
														  CornerRadius="{StaticResource MaterialButtonCornerRadius}"
														  FontFamily="{TemplateBinding FontFamily}"
														  FontSize="{TemplateBinding FontSize}"
														  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
														  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
									</StackPanel>

									<Border x:Name="FabFocusBorder" />
								</Grid>
							</controls:Ripple>
						</toolkit:ElevatedView>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">

								<VisualState x:Name="Normal" />

								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="FabFocusBorder.Background"
												Value="{StaticResource MaterialOnSurfaceHoverBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Disabled">
									<VisualState.Setters>

										<Setter Target="Root.Background"
												Value="{StaticResource ButtonFabLowFabBackgroundColorBrush}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="FocusStates">

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="FabFocusBorder.Background"
												Value="{StaticResource MaterialOnSurfaceFocusedBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerFocused">
									<VisualState.Setters>
										<Setter Target="FabFocusBorder.Background"
												Value="{StaticResource MaterialOnSurfaceFocusedBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>

							<VisualStateGroup>

								<!-- Known Issue - Must be applied before smalldevices else issues on wasm and ios -->
								<VisualState x:Name="OtherDevices">
									<VisualState.StateTriggers>
										<AdaptiveTrigger MinWindowWidth="460" />
									</VisualState.StateTriggers>
								</VisualState>

								<VisualState x:Name="SmallDevices">
									<VisualState.StateTriggers>
										<AdaptiveTrigger MinWindowWidth="0" />
									</VisualState.StateTriggers>

									<VisualState.Setters>
										<Setter Target="ElevatedView.CornerRadius"
												Value="{StaticResource MaterialFabSmallCorderRadius}" />
										<Setter Target="Ripple.CornerRadius"
												Value="{StaticResource MaterialFabSmallCorderRadius}" />
										<Setter Target="ContentPanel.Margin"
												Value="{StaticResource MaterialFabSmallPadding}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Key="MaterialSecondaryFabStyle"
		   BasedOn="{StaticResource MaterialFabStyle}"
		   TargetType="Button">
		
		<Setter Property="Background"
				Value="{StaticResource MaterialSecondaryBrush}" />
		<Setter Property="Foreground"
				Value="{StaticResource MaterialOnSecondaryBrush}" />
	</Style>

</ResourceDictionary>
