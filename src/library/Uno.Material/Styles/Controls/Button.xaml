<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:controls="using:Uno.Material.Controls"
					xmlns:toolkit="using:Uno.UI.Toolkit"
					xmlns:ios="http://uno.ui/ios"
					xmlns:android="http://uno.ui/android"
					xmlns:not_android="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:wasm="http://uno.ui/wasm"
					xmlns:not_win="http://uno.ui/not_win"
					xmlns:extensions="using:Uno.Material.Extensions"
					mc:Ignorable="d ios android wasm not_win">

	<ResourceDictionary.MergedDictionaries>
		<MaterialFonts xmlns="using:Uno.Material" />
		<MaterialColors xmlns="using:Uno.Material" />
	</ResourceDictionary.MergedDictionaries>

	<!-- Documented variables -->
	<Thickness x:Key="MaterialButtonPadding">16,8</Thickness>
	<CornerRadius x:Key="MaterialButtonCornerRadius">4</CornerRadius>
	<x:Double x:Key="MaterialButtonFontSize">14</x:Double>
	<StaticResource x:Key="MaterialContainedButtonLowBackgroundBrush"
					ResourceKey="MaterialOnSurfaceLowBrush" />
	<StaticResource x:Key="MaterialContainedButtonLowForegroundBrush"
					ResourceKey="MaterialOnSurfaceLowBrush" />
	<StaticResource x:Key="MaterialOutlinedButtonLowBrush"
					ResourceKey="MaterialOnSurfaceLowBrush" />
	<StaticResource x:Key="MaterialTextButtonLowBrush"
					ResourceKey="MaterialOnSurfaceMediumBrush" />

	<!-- Button Styles -->
	<Style x:Key="MaterialContainedButtonStyle"
		   TargetType="Button">

		<Setter Property="Foreground"
				Value="{StaticResource MaterialOnPrimaryBrush}" />
		<Setter Property="Background"
				Value="{StaticResource MaterialPrimaryBrush}" />
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="Padding"
				Value="{ThemeResource MaterialButtonPadding}" />
		<Setter Property="CornerRadius"
				Value="{StaticResource MaterialButtonCornerRadius}" />
		<Setter Property="MinHeight"
				Value="40" />
		<Setter Property="FontFamily"
				Value="{StaticResource MaterialFontFamily}" />
		<Setter Property="FontSize"
				Value="{ThemeResource MaterialButtonFontSize}" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="FontWeight"
				Value="SemiBold" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">

					<Grid x:Name="Root"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  CornerRadius="{TemplateBinding CornerRadius}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">

								<VisualState x:Name="Normal">
									<VisualState.Setters>
										<Setter Target="CommonStatesOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="CommonStatesOverlay.Opacity"
												Value="{StaticResource MaterialHoverOpacity}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="CommonStatesOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="{StaticResource MaterialPressedOpacity}">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="Root.Background"
												Value="{StaticResource MaterialContainedButtonLowBackgroundBrush}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{StaticResource MaterialContainedButtonLowForegroundBrush}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="FocusStates">

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="{StaticResource MaterialFocusedOpacity}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerFocused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="{StaticResource MaterialFocusedOpacity}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Unfocused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Border x:Name="CommonStatesOverlay"
								Background="{TemplateBinding Foreground}"
								Opacity="0" />

						<Border x:Name="FocusedOverlay"
								Background="{TemplateBinding Foreground}"
								Opacity="0" />

						<controls:Ripple x:Name="ContentPresenter"
										 Feedback="{TemplateBinding Foreground}"
										 FeedbackOpacity="{StaticResource MaterialPressedOpacity}"
										 BorderBrush="{TemplateBinding BorderBrush}"
										 BorderThickness="{TemplateBinding BorderThickness}"
										 CornerRadius="{TemplateBinding CornerRadius}"
										 Padding="{TemplateBinding Padding}"
										 AutomationProperties.AccessibilityView="Raw"
										 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}">
							<controls:Ripple.Content>
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>

									<ContentPresenter x:Name="IconPresenter"
													  Content="{Binding Path=(extensions:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
													  Margin="0,0,8,0"
													  MaxHeight="34"
													  MaxWidth="34"
													  MinWidth="25"
													  HorizontalAlignment="Stretch"
													  VerticalAlignment="Stretch"
													  VerticalContentAlignment="Center"
													  Visibility="{Binding Path=(extensions:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />

									<ContentPresenter Grid.Column="1"
													  Content="{TemplateBinding Content}"
													  ContentTemplate="{TemplateBinding ContentTemplate}"
													  ContentTransitions="{TemplateBinding ContentTransitions}"
													  FontFamily="{TemplateBinding FontFamily}"
													  FontSize="{TemplateBinding FontSize}"
													  FontWeight="{TemplateBinding FontWeight}"
													  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
													  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
								</Grid>
							</controls:Ripple.Content>
						</controls:Ripple>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialContainedSecondaryButtonStyle"
		   BasedOn="{StaticResource MaterialContainedButtonStyle}"
		   TargetType="Button">
		<Setter Property="Foreground"
				Value="{ThemeResource MaterialOnSecondaryBrush}" />
		<Setter Property="Background"
				Value="{ThemeResource MaterialSecondaryBrush}" />
	</Style>

	<Style x:Key="MaterialOutlinedButtonStyle"
		   TargetType="Button">

		<Setter Property="Foreground"
				Value="{StaticResource MaterialPrimaryBrush}" />
		<Setter Property="Background"
				Value="{StaticResource MaterialBackgroundBrush}" />
		<Setter Property="BorderBrush"
				Value="{StaticResource MaterialPrimaryBrush}" />
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="Padding"
				Value="{StaticResource MaterialButtonPadding}" />
		<Setter Property="CornerRadius"
				Value="{StaticResource MaterialButtonCornerRadius}" />
		<Setter Property="MinHeight"
				Value="40" />
		<Setter Property="FontFamily"
				Value="{StaticResource MaterialFontFamily}" />
		<Setter Property="FontSize"
				Value="{StaticResource MaterialButtonFontSize}" />
		<Setter Property="FontWeight"
				Value="SemiBold" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">

					<Grid x:Name="Root"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  CornerRadius="{TemplateBinding CornerRadius}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">

								<VisualState x:Name="Normal">
									<VisualState.Setters>
										<Setter Target="CommonStatesOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="CommonStatesOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="{StaticResource MaterialHoverOpacity}">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="CommonStatesOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="{StaticResource MaterialPressedOpacity}">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="ContentPresenter.Foreground"
												Value="{StaticResource MaterialOutlinedButtonLowBrush}" />
										<Setter Target="Root.BorderBrush"
												Value="{StaticResource MaterialOutlinedButtonLowBrush}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="FocusStates">

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="{StaticResource MaterialFocusedOpacity}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerFocused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="{StaticResource MaterialFocusedOpacity}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Unfocused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Border x:Name="CommonStatesOverlay"
								Background="{TemplateBinding Foreground}"
								Opacity="0" />

						<Border x:Name="FocusedOverlay"
								Background="{TemplateBinding Foreground}"
								Opacity="0" />

						<controls:Ripple x:Name="ContentPresenter"
										 Feedback="{TemplateBinding Foreground}"
										 FeedbackOpacity="{StaticResource MaterialPressedOpacity}"
										 BorderBrush="{TemplateBinding BorderBrush}"
										 BorderThickness="{TemplateBinding BorderThickness}"
										 CornerRadius="{TemplateBinding CornerRadius}"
										 Padding="{TemplateBinding Padding}"
										 AutomationProperties.AccessibilityView="Raw"
										 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}">
							<controls:Ripple.Content>
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>

									<ContentPresenter x:Name="IconPresenter"
													  Content="{Binding Path=(extensions:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
													  Margin="0,0,8,0"
													  MaxHeight="34"
													  MaxWidth="34"
													  MinWidth="25"
													  HorizontalAlignment="Stretch"
													  VerticalAlignment="Stretch"
													  VerticalContentAlignment="Center"
													  Visibility="{Binding Path=(extensions:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />

									<ContentPresenter Grid.Column="1"
													  Content="{TemplateBinding Content}"
													  ContentTemplate="{TemplateBinding ContentTemplate}"
													  ContentTransitions="{TemplateBinding ContentTransitions}"
													  FontFamily="{TemplateBinding FontFamily}"
													  FontSize="{TemplateBinding FontSize}"
													  FontWeight="{TemplateBinding FontWeight}"
													  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
													  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
								</Grid>
							</controls:Ripple.Content>
						</controls:Ripple>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialOutlinedSecondaryButtonStyle"
		   BasedOn="{StaticResource MaterialOutlinedButtonStyle}"
		   TargetType="Button">
		<Setter Property="Foreground"
				Value="{StaticResource MaterialSecondaryBrush}" />
		<Setter Property="BorderBrush"
				Value="{StaticResource MaterialSecondaryBrush}" />
	</Style>

	<Style x:Key="MaterialTextButtonStyle"
		   TargetType="Button">
		<Setter Property="Foreground"
				Value="{StaticResource MaterialPrimaryBrush}" />
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="Padding"
				Value="{ThemeResource MaterialButtonPadding}" />
		<Setter Property="MinHeight"
				Value="40" />
		<Setter Property="FontFamily"
				Value="{StaticResource MaterialFontFamily}" />
		<Setter Property="FontSize"
				Value="{ThemeResource MaterialButtonFontSize}" />
		<Setter Property="FontWeight"
				Value="Bold" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">

					<Grid x:Name="Root"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  CornerRadius="{StaticResource MaterialButtonCornerRadius}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<VisualState.Setters>
										<Setter Target="CommonStatesOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="CommonStatesOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="{StaticResource MaterialHoverOpacity}">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="CommonStatesOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="{StaticResource MaterialPressedOpacity}">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="ContentPresenter.Foreground"
												Value="{StaticResource MaterialTextButtonLowBrush}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="FocusStates">

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="{StaticResource MaterialFocusedOpacity}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerFocused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="{StaticResource MaterialFocusedOpacity}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Unfocused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Border x:Name="CommonStatesOverlay"
								Background="{TemplateBinding Foreground}"
								Opacity="0" />

						<Border x:Name="FocusedOverlay"
								Background="{TemplateBinding Foreground}"
								Opacity="0" />

						<controls:Ripple x:Name="ContentPresenter"
										 Feedback="{TemplateBinding Foreground}"
										 FeedbackOpacity="{StaticResource MaterialPressedOpacity}"
										 BorderBrush="{TemplateBinding BorderBrush}"
										 BorderThickness="{TemplateBinding BorderThickness}"
										 CornerRadius="{TemplateBinding CornerRadius}"
										 Padding="{TemplateBinding Padding}"
										 AutomationProperties.AccessibilityView="Raw"
										 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}">
							<controls:Ripple.Content>
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>

									<ContentPresenter x:Name="IconPresenter"
													  Content="{Binding Path=(extensions:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
													  Margin="0,0,8,0"
													  MaxHeight="34"
													  MaxWidth="34"
													  MinWidth="25"
													  HorizontalAlignment="Stretch"
													  VerticalAlignment="Stretch"
													  VerticalContentAlignment="Center"
													  Visibility="{Binding Path=(extensions:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />

									<ContentPresenter Grid.Column="1"
													  Content="{TemplateBinding Content}"
													  ContentTemplate="{TemplateBinding ContentTemplate}"
													  ContentTransitions="{TemplateBinding ContentTransitions}"
													  FontFamily="{TemplateBinding FontFamily}"
													  FontSize="{TemplateBinding FontSize}"
													  FontWeight="{TemplateBinding FontWeight}"
													  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
													  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
								</Grid>
							</controls:Ripple.Content>
						</controls:Ripple>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialTextSecondaryButtonStyle"
		   TargetType="Button"
		   BasedOn="{StaticResource MaterialTextButtonStyle}">
		<Setter Property="Foreground"
				Value="{StaticResource MaterialSecondaryBrush}" />
	</Style>

	<Style x:Key="SeeStyleFlyoutButtonStyle"
		   TargetType="Button">

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="Root">

						<not_win:VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">

								<VisualState x:Name="Normal" />

								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="ContentPresenter_NotWin.Visibility"
												Value="Visible" />
										<Setter Target="HeaderText.Visibility"
												Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="ContentPresenter_NotWin.Visibility"
												Value="Visible" />
										<Setter Target="HeaderText.Visibility"
												Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</not_win:VisualStateManager.VisualStateGroups>

						<win:Button Content="See Style"
									FontSize="10"
									Style="{StaticResource MaterialTextButtonStyle}"
									Margin="12,0">
							<Button.Flyout>
								<Flyout>
									<TextBlock Text="{TemplateBinding Content}" />
								</Flyout>
							</Button.Flyout>
						</win:Button>

						<!-- Known Issue - Windows solution does not work on other platforms, content of flyout remains empty -->
						<not_win:TextBlock x:Name="HeaderText"
										   Text="See Style"
										   Foreground="{StaticResource MaterialPrimaryBrush}"
										   FontSize="10"
										   FontWeight="{TemplateBinding FontWeight}"
										   Margin="12,0" />

						<not_win:ContentPresenter x:Name="ContentPresenter_NotWin"
												  Content="{TemplateBinding Content}"
												  FontWeight="{TemplateBinding FontWeight}"
												  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
												  AutomationProperties.AccessibilityView="Raw"
												  Visibility="Collapsed" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
