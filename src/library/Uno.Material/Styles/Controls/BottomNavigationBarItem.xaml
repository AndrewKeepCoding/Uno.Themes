<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:controls="using:Uno.Material.Controls"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:not_win="http://uno.ui/not_win"
					xmlns:xamarin="http://nventive.com/xamarin"
					xmlns:ios="http://uno.ui/ios"
					xmlns:android="http://uno.ui/android"
					xmlns:wasm="http://uno.ui/wasm"
					xmlns:not_wasm="http://uno.ui/not_wasm"
					mc:Ignorable="not_win xamarin ios android wasm not_wasm">
	
	<x:Double x:Key="MaterialBottomNavLabelFontSize">12</x:Double>
	<x:Double x:Key="MaterialBottomNavUncheckedOpacity">0.8</x:Double>
	<x:Double x:Key="MaterialBottomNavLabelCheckedOpacity">0.74</x:Double>

	<Style x:Key="MaterialBottomNavigationBarItemStyle"
		   TargetType="controls:BottomNavigationBarItem">

		<Setter Property="Margin"
				Value="0" />
		<Setter Property="Background"
				Value="Transparent" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="controls:BottomNavigationBarItem">

					<Grid Background="{TemplateBinding Background}"
						  Margin="{TemplateBinding Margin}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">

								<VisualState x:Name="Normal">
									<VisualState.Setters>
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource MaterialBottomNavUncheckedForegroundBrush}" />
										<Setter Target="Label.Foreground"
												Value="{ThemeResource MaterialBottomNavUncheckedForegroundBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource MaterialBottomNavUncheckedForegroundBrush}" />
										<Setter Target="Label.Foreground"
												Value="{ThemeResource MaterialBottomNavUncheckedForegroundBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource MaterialBottomNavUncheckedForegroundBrush}" />
										<Setter Target="Label.Foreground"
												Value="{ThemeResource MaterialBottomNavUncheckedForegroundBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="CheckedPointerOver">
									<VisualState.Setters>
										<Setter Target="Icon.Opacity"
												Value="1" />
										<Setter Target="Label.Opacity"
												Value="{StaticResource MaterialBottomNavLabelCheckedOpacity}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="CheckedPressed">
									<VisualState.Setters>
										<Setter Target="Icon.Opacity"
												Value="1" />
										<Setter Target="Label.Opacity"
												Value="{StaticResource MaterialBottomNavLabelCheckedOpacity}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Checked">

									<VisualState.Setters>
										<Setter Target="Icon.Opacity"
												Value="1" />
										<Setter Target="Label.Opacity"
												Value="{StaticResource MaterialBottomNavLabelCheckedOpacity}" />
									</VisualState.Setters>

									<xamarin:Storyboard>
										<not_wasm:DoubleAnimation Storyboard.TargetName="Icon"
																  Storyboard.TargetProperty="Opacity"
																  Duration="0:0:0.4"
																  EasingFunction="{StaticResource Material_EaseInOutFunction}"
																  From="{StaticResource MaterialBottomNavUncheckedOpacity}"
																  To="1" />

										<not_wasm:DoubleAnimation Storyboard.TargetName="Label"
																  Storyboard.TargetProperty="Opacity"
																  Duration="0:0:0.4"
																  EasingFunction="{StaticResource Material_EaseInOutFunction}"
																  From="{StaticResource MaterialBottomNavUncheckedOpacity}"
																  To="{StaticResource MaterialBottomNavLabelCheckedOpacity}" />
									</xamarin:Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<controls:Ripple x:Name="ContentPresenter"
										 Feedback="{ThemeResource MaterialBottomNavPressedBrush}"
										 BorderBrush="{TemplateBinding BorderBrush}"
										 BorderThickness="{TemplateBinding BorderThickness}"
										 ContentTransitions="{TemplateBinding ContentTransitions}"
										 CornerRadius="{TemplateBinding CornerRadius}"
										 FontFamily="{TemplateBinding FontFamily}"
										 FontSize="{TemplateBinding FontSize}"
										 Padding="{TemplateBinding Padding}"
										 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										 AutomationProperties.AccessibilityView="Raw">

							<Grid HorizontalAlignment="Center">
								<Grid.RowDefinitions>
									<RowDefinition Height="*" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>

								<!-- Icon + Badge Container-->
								<Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									  Margin="0,0,0,4">

									<!-- Icon -->
									<ContentPresenter x:Name="Icon"
													  Content="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}}"
													  Foreground="{TemplateBinding Foreground}"
													  Opacity="{StaticResource MaterialBottomNavUncheckedOpacity}"
													  Height="20"
													  Width="20"
													  Margin="12,0" />

									<!-- Badge Container -->
									<Grid DataContext="{Binding Badge, RelativeSource={RelativeSource TemplatedParent}}"
										  Visibility="{Binding IsVisible, Converter={StaticResource Material_TrueToVisible}, FallbackValue=Collapsed, TargetNullValue=Collapsed}"
										  HorizontalAlignment="Right"
										  VerticalAlignment="Top">

										<!-- Badge Circle Notification -->
										<Ellipse Height="14"
												 Width="14"
												 Stretch="Uniform"
												 Fill="{ThemeResource MaterialBottomNavNotifBackgroundBrush}"
												 Visibility="{Binding Text, Converter={StaticResource Material_EmptyToVisible}}" />

										<!-- Badge Text Notification -->
										<Border CornerRadius="6"
												Background="{ThemeResource MaterialBottomNavNotifBackgroundBrush}"
												Visibility="{Binding Text, Converter={StaticResource Material_EmptyToCollapsed}}">

											<TextBlock Text="{Binding Text}"
													   Foreground="{ThemeResource MaterialBottomNavNotifLabelBrush}"
													   FontSize="10"
													   TextTrimming="CharacterEllipsis"
													   Margin="4,2" />
										</Border>
									</Grid>
								</Grid>

								<!-- Label -->
								<TextBlock x:Name="Label"
										   Text="{TemplateBinding Label}"
										   Foreground="{TemplateBinding Foreground}"
										   FontFamily="{TemplateBinding FontFamily}"
										   FontSize="{TemplateBinding FontSize}"
										   TextTrimming="CharacterEllipsis"
										   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										   Visibility="{Binding Label, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Material_EmptyToCollapsed}}"
										   Opacity="{StaticResource MaterialBottomNavUncheckedOpacity}"
										   Grid.Row="1" />
							</Grid>
						</controls:Ripple>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="controls:BottomNavigationBarItem"
		   BasedOn="{StaticResource MaterialBottomNavigationBarItemStyle}" />

</ResourceDictionary>
