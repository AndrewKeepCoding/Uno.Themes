variables:
  # Path where packages (nuget or app packages) will be copied to.
  PackageOutputPath: $(Build.ArtifactStagingDirectory)
  
  # For Application.Building.Light optimizations
  IsLightBuild: $[eq(variables['Build.Reason'], 'PullRequest')]

  IsCanaryBranch: $[startsWith(variables['Build.SourceBranch'], 'refs/heads/canaries/')]
  IsReleaseBranch: $[or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'], 'refs/heads/feature/'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))]

  ANDROID_NDK_HOME: C:\Microsoft\AndroidNDK64\android-ndk-r16b
  ANDROID_NDK_PATH: C:\Microsoft\AndroidNDK64\android-ndk-r16b
  AndroidNdkDirectory: C:\Microsoft\AndroidNDK64\android-ndk-r16b

jobs:
- job: Windows # Build UWP/Android/NuGet
  timeoutInMinutes: 90
  strategy:
    maxParallel: 4
    matrix:
      UWP:
        ApplicationPlatform: UWP_x64
        ArtifactName: UWP
        DisableNet6MobileTargets: true
      Android:
        ApplicationPlatform: Android
        ArtifactName: Android
        DisableNet6MobileTargets: true
        AotAssemblies: false
      Packages:
        ApplicationPlatform: Packages
        ArtifactName: Packages
        GeneratePackageOnBuild: true
      Packages_WinUI:
        ApplicationPlatform: Packages
        ArtifactName: Packages
        UseWinUI: true
        GeneratePackageOnBuild: true

  pool:
    vmImage: windows-2022
  
  steps:
    - template: build/stage-build.yml

- job: MacOS # Build iOS/macOS
  timeoutInMinutes: 90
  strategy:
    maxParallel: 2
    matrix:
      iOS:
        ApplicationPlatform: iPhone
        ArtifactName: iOS
        DisableNet6MobileTargets: true
      macOS:
        ApplicationPlatform: macOS
        ArtifactName: macOS
        DisableNet6MobileTargets: true
  pool:
    vmImage: macOS-10.15
    
  variables:
  - name: SkipUnknownFrameworks
    value: true # Used by TargetFrameworks.Filtering package
  - group: apple.appstore.distribution # Variables for certificate

  steps:
  - task: InstallAppleCertificate@2
    displayName: Install Apple Certificate
    inputs:
      certSecureFile: 'apple.appstore.distribution.p12' # Name of the p12 certificate
      certPwd: '$(appleappstorecertificatepassword)' 
      keychain: 'temp'
      deleteCert: true
  
  - task: InstallAppleProvisioningProfile@1
    displayName: 'Install Apple Provisioning Profile'
    inputs:
      provisioningProfileLocation: 'secureFiles'
      provProfileSecureFile: 'UnoMaterial.mobileprovision'

  - template: build/stage-build.yml

- job: Linux

  pool:
    vmImage: 'ubuntu-18.04'

  container: unoplatform/wasm-build:2.2

  variables:
    ArtifactName: WASM
    SkipUnknownFrameworks: True

  steps:
    - template: build/stage-build-wasm.yml
